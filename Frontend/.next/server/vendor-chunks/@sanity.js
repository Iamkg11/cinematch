"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sanity";
exports.ids = ["vendor-chunks/@sanity"];
exports.modules = {

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/builder.js":
/*!************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/builder.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ImageUrlBuilder = void 0;\nvar urlForImage_1 = __importStar(__webpack_require__(/*! ./urlForImage */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/urlForImage.js\"));\nvar validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\nvar validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\nvar validAutoModes = ['format'];\nfunction isSanityModernClientLike(client) {\n    return client && 'config' in client ? typeof client.config === 'function' : false;\n}\nfunction isSanityClientLike(client) {\n    return client && 'clientConfig' in client ? typeof client.clientConfig === 'object' : false;\n}\nfunction rewriteSpecName(key) {\n    var specs = urlForImage_1.SPEC_NAME_TO_URL_NAME_MAPPINGS;\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var entry = specs_1[_i];\n        var specName = entry[0], param = entry[1];\n        if (key === specName || key === param) {\n            return specName;\n        }\n    }\n    return key;\n}\nfunction urlBuilder(options) {\n    // Did we get a modernish client?\n    if (isSanityModernClientLike(options)) {\n        // Inherit config from client\n        var _a = options.config(), apiUrl = _a.apiHost, projectId = _a.projectId, dataset = _a.dataset;\n        var apiHost = apiUrl || 'https://api.sanity.io';\n        return new ImageUrlBuilder(null, {\n            baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n            projectId: projectId,\n            dataset: dataset,\n        });\n    }\n    // Did we get a SanityClient?\n    var client = options;\n    if (isSanityClientLike(client)) {\n        // Inherit config from client\n        var _b = client.clientConfig, apiUrl = _b.apiHost, projectId = _b.projectId, dataset = _b.dataset;\n        var apiHost = apiUrl || 'https://api.sanity.io';\n        return new ImageUrlBuilder(null, {\n            baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n            projectId: projectId,\n            dataset: dataset,\n        });\n    }\n    // Or just accept the options as given\n    return new ImageUrlBuilder(null, options);\n}\nexports[\"default\"] = urlBuilder;\nvar ImageUrlBuilder = /** @class */ (function () {\n    function ImageUrlBuilder(parent, options) {\n        this.options = parent\n            ? __assign(__assign({}, (parent.options || {})), (options || {})) : __assign({}, (options || {})); // Copy options\n    }\n    ImageUrlBuilder.prototype.withOptions = function (options) {\n        var baseUrl = options.baseUrl || this.options.baseUrl;\n        var newOptions = { baseUrl: baseUrl };\n        for (var key in options) {\n            if (options.hasOwnProperty(key)) {\n                var specKey = rewriteSpecName(key);\n                newOptions[specKey] = options[key];\n            }\n        }\n        return new ImageUrlBuilder(this, __assign({ baseUrl: baseUrl }, newOptions));\n    };\n    // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n    ImageUrlBuilder.prototype.image = function (source) {\n        return this.withOptions({ source: source });\n    };\n    // Specify the dataset\n    ImageUrlBuilder.prototype.dataset = function (dataset) {\n        return this.withOptions({ dataset: dataset });\n    };\n    // Specify the projectId\n    ImageUrlBuilder.prototype.projectId = function (projectId) {\n        return this.withOptions({ projectId: projectId });\n    };\n    // Specify background color\n    ImageUrlBuilder.prototype.bg = function (bg) {\n        return this.withOptions({ bg: bg });\n    };\n    // Set DPR scaling factor\n    ImageUrlBuilder.prototype.dpr = function (dpr) {\n        // A DPR of 1 is the default - so only include it if we have a different value\n        return this.withOptions(dpr && dpr !== 1 ? { dpr: dpr } : {});\n    };\n    // Specify the width of the image in pixels\n    ImageUrlBuilder.prototype.width = function (width) {\n        return this.withOptions({ width: width });\n    };\n    // Specify the height of the image in pixels\n    ImageUrlBuilder.prototype.height = function (height) {\n        return this.withOptions({ height: height });\n    };\n    // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n    ImageUrlBuilder.prototype.focalPoint = function (x, y) {\n        return this.withOptions({ focalPoint: { x: x, y: y } });\n    };\n    ImageUrlBuilder.prototype.maxWidth = function (maxWidth) {\n        return this.withOptions({ maxWidth: maxWidth });\n    };\n    ImageUrlBuilder.prototype.minWidth = function (minWidth) {\n        return this.withOptions({ minWidth: minWidth });\n    };\n    ImageUrlBuilder.prototype.maxHeight = function (maxHeight) {\n        return this.withOptions({ maxHeight: maxHeight });\n    };\n    ImageUrlBuilder.prototype.minHeight = function (minHeight) {\n        return this.withOptions({ minHeight: minHeight });\n    };\n    // Specify width and height in pixels\n    ImageUrlBuilder.prototype.size = function (width, height) {\n        return this.withOptions({ width: width, height: height });\n    };\n    // Specify blur between 0 and 100\n    ImageUrlBuilder.prototype.blur = function (blur) {\n        return this.withOptions({ blur: blur });\n    };\n    ImageUrlBuilder.prototype.sharpen = function (sharpen) {\n        return this.withOptions({ sharpen: sharpen });\n    };\n    // Specify the desired rectangle of the image\n    ImageUrlBuilder.prototype.rect = function (left, top, width, height) {\n        return this.withOptions({ rect: { left: left, top: top, width: width, height: height } });\n    };\n    // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n    ImageUrlBuilder.prototype.format = function (format) {\n        return this.withOptions({ format: format });\n    };\n    ImageUrlBuilder.prototype.invert = function (invert) {\n        return this.withOptions({ invert: invert });\n    };\n    // Rotation in degrees 0, 90, 180, 270\n    ImageUrlBuilder.prototype.orientation = function (orientation) {\n        return this.withOptions({ orientation: orientation });\n    };\n    // Compression quality 0-100\n    ImageUrlBuilder.prototype.quality = function (quality) {\n        return this.withOptions({ quality: quality });\n    };\n    // Make it a download link. Parameter is default filename.\n    ImageUrlBuilder.prototype.forceDownload = function (download) {\n        return this.withOptions({ download: download });\n    };\n    // Flip image horizontally\n    ImageUrlBuilder.prototype.flipHorizontal = function () {\n        return this.withOptions({ flipHorizontal: true });\n    };\n    // Flip image vertically\n    ImageUrlBuilder.prototype.flipVertical = function () {\n        return this.withOptions({ flipVertical: true });\n    };\n    // Ignore crop/hotspot from image record, even when present\n    ImageUrlBuilder.prototype.ignoreImageParams = function () {\n        return this.withOptions({ ignoreImageParams: true });\n    };\n    ImageUrlBuilder.prototype.fit = function (value) {\n        if (validFits.indexOf(value) === -1) {\n            throw new Error(\"Invalid fit mode \\\"\".concat(value, \"\\\"\"));\n        }\n        return this.withOptions({ fit: value });\n    };\n    ImageUrlBuilder.prototype.crop = function (value) {\n        if (validCrops.indexOf(value) === -1) {\n            throw new Error(\"Invalid crop mode \\\"\".concat(value, \"\\\"\"));\n        }\n        return this.withOptions({ crop: value });\n    };\n    // Saturation\n    ImageUrlBuilder.prototype.saturation = function (saturation) {\n        return this.withOptions({ saturation: saturation });\n    };\n    ImageUrlBuilder.prototype.auto = function (value) {\n        if (validAutoModes.indexOf(value) === -1) {\n            throw new Error(\"Invalid auto mode \\\"\".concat(value, \"\\\"\"));\n        }\n        return this.withOptions({ auto: value });\n    };\n    // Specify the number of pixels to pad the image\n    ImageUrlBuilder.prototype.pad = function (pad) {\n        return this.withOptions({ pad: pad });\n    };\n    // Gets the url based on the submitted parameters\n    ImageUrlBuilder.prototype.url = function () {\n        return (0, urlForImage_1.default)(this.options);\n    };\n    // Alias for url()\n    ImageUrlBuilder.prototype.toString = function () {\n        return this.url();\n    };\n    return ImageUrlBuilder;\n}());\nexports.ImageUrlBuilder = ImageUrlBuilder;\n//# sourceMappingURL=builder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/index.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar builder_1 = __importDefault(__webpack_require__(/*! ./builder */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/builder.js\"));\nmodule.exports = builder_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLGdDQUFnQyxtQkFBTyxDQUFDLDZFQUFXO0FBQ25EO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvaW5kZXguanM/ZTkxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbnZhciBidWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYnVpbGRlclwiKSk7XG5tb2R1bGUuZXhwb3J0cyA9IGJ1aWxkZXJfMS5kZWZhdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/parseAssetId.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\nfunction parseAssetId(ref) {\n    var _a = ref.split('-'), id = _a[1], dimensionString = _a[2], format = _a[3];\n    if (!id || !dimensionString || !format) {\n        throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n    }\n    var _b = dimensionString.split('x'), imgWidthStr = _b[0], imgHeightStr = _b[1];\n    var width = +imgWidthStr;\n    var height = +imgHeightStr;\n    var isValidAssetId = isFinite(width) && isFinite(height);\n    if (!isValidAssetId) {\n        throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n    }\n    return { id: id, width: width, height: height, format: format };\n}\nexports[\"default\"] = parseAssetId;\n//# sourceMappingURL=parseAssetId.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvcGFyc2VBc3NldElkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2ltYWdlLXVybC9saWIvbm9kZS9wYXJzZUFzc2V0SWQuanM/OTI4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBleGFtcGxlID0gJ2ltYWdlLVRiOUV3OENYSXdhWTZSMWtqTXZJMHVSUi0yMDAweDMwMDAtanBnJztcbmZ1bmN0aW9uIHBhcnNlQXNzZXRJZChyZWYpIHtcbiAgICB2YXIgX2EgPSByZWYuc3BsaXQoJy0nKSwgaWQgPSBfYVsxXSwgZGltZW5zaW9uU3RyaW5nID0gX2FbMl0sIGZvcm1hdCA9IF9hWzNdO1xuICAgIGlmICghaWQgfHwgIWRpbWVuc2lvblN0cmluZyB8fCAhZm9ybWF0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1hbGZvcm1lZCBhc3NldCBfcmVmICdcIi5jb25jYXQocmVmLCBcIicuIEV4cGVjdGVkIGFuIGlkIGxpa2UgXFxcIlwiKS5jb25jYXQoZXhhbXBsZSwgXCJcXFwiLlwiKSk7XG4gICAgfVxuICAgIHZhciBfYiA9IGRpbWVuc2lvblN0cmluZy5zcGxpdCgneCcpLCBpbWdXaWR0aFN0ciA9IF9iWzBdLCBpbWdIZWlnaHRTdHIgPSBfYlsxXTtcbiAgICB2YXIgd2lkdGggPSAraW1nV2lkdGhTdHI7XG4gICAgdmFyIGhlaWdodCA9ICtpbWdIZWlnaHRTdHI7XG4gICAgdmFyIGlzVmFsaWRBc3NldElkID0gaXNGaW5pdGUod2lkdGgpICYmIGlzRmluaXRlKGhlaWdodCk7XG4gICAgaWYgKCFpc1ZhbGlkQXNzZXRJZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNYWxmb3JtZWQgYXNzZXQgX3JlZiAnXCIuY29uY2F0KHJlZiwgXCInLiBFeHBlY3RlZCBhbiBpZCBsaWtlIFxcXCJcIikuY29uY2F0KGV4YW1wbGUsIFwiXFxcIi5cIikpO1xuICAgIH1cbiAgICByZXR1cm4geyBpZDogaWQsIHdpZHRoOiB3aWR0aCwgaGVpZ2h0OiBoZWlnaHQsIGZvcm1hdDogZm9ybWF0IH07XG59XG5leHBvcnRzLmRlZmF1bHQgPSBwYXJzZUFzc2V0SWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZUFzc2V0SWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/parseSource.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/parseSource.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar isRef = function (src) {\n    var source = src;\n    return source ? typeof source._ref === 'string' : false;\n};\nvar isAsset = function (src) {\n    var source = src;\n    return source ? typeof source._id === 'string' : false;\n};\nvar isAssetStub = function (src) {\n    var source = src;\n    return source && source.asset ? typeof source.asset.url === 'string' : false;\n};\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nfunction parseSource(source) {\n    if (!source) {\n        return null;\n    }\n    var image;\n    if (typeof source === 'string' && isUrl(source)) {\n        // Someone passed an existing image url?\n        image = {\n            asset: { _ref: urlToId(source) },\n        };\n    }\n    else if (typeof source === 'string') {\n        // Just an asset id\n        image = {\n            asset: { _ref: source },\n        };\n    }\n    else if (isRef(source)) {\n        // We just got passed an asset directly\n        image = {\n            asset: source,\n        };\n    }\n    else if (isAsset(source)) {\n        // If we were passed an image asset document\n        image = {\n            asset: {\n                _ref: source._id || '',\n            },\n        };\n    }\n    else if (isAssetStub(source)) {\n        // If we were passed a partial asset (`url`, but no `_id`)\n        image = {\n            asset: {\n                _ref: urlToId(source.asset.url),\n            },\n        };\n    }\n    else if (typeof source.asset === 'object') {\n        // Probably an actual image with materialized asset\n        image = __assign({}, source);\n    }\n    else {\n        // We got something that does not look like an image, or it is an image\n        // that currently isn't sporting an asset.\n        return null;\n    }\n    var img = source;\n    if (img.crop) {\n        image.crop = img.crop;\n    }\n    if (img.hotspot) {\n        image.hotspot = img.hotspot;\n    }\n    return applyDefaults(image);\n}\nexports[\"default\"] = parseSource;\nfunction isUrl(url) {\n    return /^https?:\\/\\//.test(\"\".concat(url));\n}\nfunction urlToId(url) {\n    var parts = url.split('/').slice(-1);\n    return \"image-\".concat(parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n}\n// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image) {\n    if (image.crop && image.hotspot) {\n        return image;\n    }\n    // We need to pad in default values for crop or hotspot\n    var result = __assign({}, image);\n    if (!result.crop) {\n        result.crop = {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n        };\n    }\n    if (!result.hotspot) {\n        result.hotspot = {\n            x: 0.5,\n            y: 0.5,\n            height: 1.0,\n            width: 1.0,\n        };\n    }\n    return result;\n}\n//# sourceMappingURL=parseSource.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvcGFyc2VTb3VyY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1QkFBdUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixjQUFjO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvcGFyc2VTb3VyY2UuanM/ZjgwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgaXNSZWYgPSBmdW5jdGlvbiAoc3JjKSB7XG4gICAgdmFyIHNvdXJjZSA9IHNyYztcbiAgICByZXR1cm4gc291cmNlID8gdHlwZW9mIHNvdXJjZS5fcmVmID09PSAnc3RyaW5nJyA6IGZhbHNlO1xufTtcbnZhciBpc0Fzc2V0ID0gZnVuY3Rpb24gKHNyYykge1xuICAgIHZhciBzb3VyY2UgPSBzcmM7XG4gICAgcmV0dXJuIHNvdXJjZSA/IHR5cGVvZiBzb3VyY2UuX2lkID09PSAnc3RyaW5nJyA6IGZhbHNlO1xufTtcbnZhciBpc0Fzc2V0U3R1YiA9IGZ1bmN0aW9uIChzcmMpIHtcbiAgICB2YXIgc291cmNlID0gc3JjO1xuICAgIHJldHVybiBzb3VyY2UgJiYgc291cmNlLmFzc2V0ID8gdHlwZW9mIHNvdXJjZS5hc3NldC51cmwgPT09ICdzdHJpbmcnIDogZmFsc2U7XG59O1xuLy8gQ29udmVydCBhbiBhc3NldC1pZCwgYXNzZXQgb3IgaW1hZ2UgdG8gYW4gaW1hZ2UgcmVjb3JkIHN1aXRhYmxlIGZvciBwcm9jZXNzaW5nXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuZnVuY3Rpb24gcGFyc2VTb3VyY2Uoc291cmNlKSB7XG4gICAgaWYgKCFzb3VyY2UpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciBpbWFnZTtcbiAgICBpZiAodHlwZW9mIHNvdXJjZSA9PT0gJ3N0cmluZycgJiYgaXNVcmwoc291cmNlKSkge1xuICAgICAgICAvLyBTb21lb25lIHBhc3NlZCBhbiBleGlzdGluZyBpbWFnZSB1cmw/XG4gICAgICAgIGltYWdlID0ge1xuICAgICAgICAgICAgYXNzZXQ6IHsgX3JlZjogdXJsVG9JZChzb3VyY2UpIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBzb3VyY2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIEp1c3QgYW4gYXNzZXQgaWRcbiAgICAgICAgaW1hZ2UgPSB7XG4gICAgICAgICAgICBhc3NldDogeyBfcmVmOiBzb3VyY2UgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNSZWYoc291cmNlKSkge1xuICAgICAgICAvLyBXZSBqdXN0IGdvdCBwYXNzZWQgYW4gYXNzZXQgZGlyZWN0bHlcbiAgICAgICAgaW1hZ2UgPSB7XG4gICAgICAgICAgICBhc3NldDogc291cmNlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0Fzc2V0KHNvdXJjZSkpIHtcbiAgICAgICAgLy8gSWYgd2Ugd2VyZSBwYXNzZWQgYW4gaW1hZ2UgYXNzZXQgZG9jdW1lbnRcbiAgICAgICAgaW1hZ2UgPSB7XG4gICAgICAgICAgICBhc3NldDoge1xuICAgICAgICAgICAgICAgIF9yZWY6IHNvdXJjZS5faWQgfHwgJycsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0Fzc2V0U3R1Yihzb3VyY2UpKSB7XG4gICAgICAgIC8vIElmIHdlIHdlcmUgcGFzc2VkIGEgcGFydGlhbCBhc3NldCAoYHVybGAsIGJ1dCBubyBgX2lkYClcbiAgICAgICAgaW1hZ2UgPSB7XG4gICAgICAgICAgICBhc3NldDoge1xuICAgICAgICAgICAgICAgIF9yZWY6IHVybFRvSWQoc291cmNlLmFzc2V0LnVybCksXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2Ygc291cmNlLmFzc2V0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAvLyBQcm9iYWJseSBhbiBhY3R1YWwgaW1hZ2Ugd2l0aCBtYXRlcmlhbGl6ZWQgYXNzZXRcbiAgICAgICAgaW1hZ2UgPSBfX2Fzc2lnbih7fSwgc291cmNlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIFdlIGdvdCBzb21ldGhpbmcgdGhhdCBkb2VzIG5vdCBsb29rIGxpa2UgYW4gaW1hZ2UsIG9yIGl0IGlzIGFuIGltYWdlXG4gICAgICAgIC8vIHRoYXQgY3VycmVudGx5IGlzbid0IHNwb3J0aW5nIGFuIGFzc2V0LlxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdmFyIGltZyA9IHNvdXJjZTtcbiAgICBpZiAoaW1nLmNyb3ApIHtcbiAgICAgICAgaW1hZ2UuY3JvcCA9IGltZy5jcm9wO1xuICAgIH1cbiAgICBpZiAoaW1nLmhvdHNwb3QpIHtcbiAgICAgICAgaW1hZ2UuaG90c3BvdCA9IGltZy5ob3RzcG90O1xuICAgIH1cbiAgICByZXR1cm4gYXBwbHlEZWZhdWx0cyhpbWFnZSk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBwYXJzZVNvdXJjZTtcbmZ1bmN0aW9uIGlzVXJsKHVybCkge1xuICAgIHJldHVybiAvXmh0dHBzPzpcXC9cXC8vLnRlc3QoXCJcIi5jb25jYXQodXJsKSk7XG59XG5mdW5jdGlvbiB1cmxUb0lkKHVybCkge1xuICAgIHZhciBwYXJ0cyA9IHVybC5zcGxpdCgnLycpLnNsaWNlKC0xKTtcbiAgICByZXR1cm4gXCJpbWFnZS1cIi5jb25jYXQocGFydHNbMF0pLnJlcGxhY2UoL1xcLihbYS16XSspJC8sICctJDEnKTtcbn1cbi8vIE1vY2sgY3JvcCBhbmQgaG90c3BvdCBpZiBpbWFnZSBsYWNrcyBpdFxuZnVuY3Rpb24gYXBwbHlEZWZhdWx0cyhpbWFnZSkge1xuICAgIGlmIChpbWFnZS5jcm9wICYmIGltYWdlLmhvdHNwb3QpIHtcbiAgICAgICAgcmV0dXJuIGltYWdlO1xuICAgIH1cbiAgICAvLyBXZSBuZWVkIHRvIHBhZCBpbiBkZWZhdWx0IHZhbHVlcyBmb3IgY3JvcCBvciBob3RzcG90XG4gICAgdmFyIHJlc3VsdCA9IF9fYXNzaWduKHt9LCBpbWFnZSk7XG4gICAgaWYgKCFyZXN1bHQuY3JvcCkge1xuICAgICAgICByZXN1bHQuY3JvcCA9IHtcbiAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICBib3R0b206IDAsXG4gICAgICAgICAgICByaWdodDogMCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKCFyZXN1bHQuaG90c3BvdCkge1xuICAgICAgICByZXN1bHQuaG90c3BvdCA9IHtcbiAgICAgICAgICAgIHg6IDAuNSxcbiAgICAgICAgICAgIHk6IDAuNSxcbiAgICAgICAgICAgIGhlaWdodDogMS4wLFxuICAgICAgICAgICAgd2lkdGg6IDEuMCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlU291cmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/parseSource.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/image-url/lib/node/urlForImage.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/urlForImage.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseSource = exports.SPEC_NAME_TO_URL_NAME_MAPPINGS = void 0;\nvar parseAssetId_1 = __importDefault(__webpack_require__(/*! ./parseAssetId */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js\"));\nvar parseSource_1 = __importDefault(__webpack_require__(/*! ./parseSource */ \"(ssr)/./node_modules/@sanity/image-url/lib/node/parseSource.js\"));\nexports.parseSource = parseSource_1.default;\nexports.SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n    ['width', 'w'],\n    ['height', 'h'],\n    ['format', 'fm'],\n    ['download', 'dl'],\n    ['blur', 'blur'],\n    ['sharpen', 'sharp'],\n    ['invert', 'invert'],\n    ['orientation', 'or'],\n    ['minHeight', 'min-h'],\n    ['maxHeight', 'max-h'],\n    ['minWidth', 'min-w'],\n    ['maxWidth', 'max-w'],\n    ['quality', 'q'],\n    ['fit', 'fit'],\n    ['crop', 'crop'],\n    ['saturation', 'sat'],\n    ['auto', 'auto'],\n    ['dpr', 'dpr'],\n    ['pad', 'pad'],\n];\nfunction urlForImage(options) {\n    var spec = __assign({}, (options || {}));\n    var source = spec.source;\n    delete spec.source;\n    var image = (0, parseSource_1.default)(source);\n    if (!image) {\n        throw new Error(\"Unable to resolve image URL from source (\".concat(JSON.stringify(source), \")\"));\n    }\n    var id = image.asset._ref || image.asset._id || '';\n    var asset = (0, parseAssetId_1.default)(id);\n    // Compute crop rect in terms of pixel coordinates in the raw source image\n    var cropLeft = Math.round(image.crop.left * asset.width);\n    var cropTop = Math.round(image.crop.top * asset.height);\n    var crop = {\n        left: cropLeft,\n        top: cropTop,\n        width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n        height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop),\n    };\n    // Compute hot spot rect in terms of pixel coordinates\n    var hotSpotVerticalRadius = (image.hotspot.height * asset.height) / 2;\n    var hotSpotHorizontalRadius = (image.hotspot.width * asset.width) / 2;\n    var hotSpotCenterX = image.hotspot.x * asset.width;\n    var hotSpotCenterY = image.hotspot.y * asset.height;\n    var hotspot = {\n        left: hotSpotCenterX - hotSpotHorizontalRadius,\n        top: hotSpotCenterY - hotSpotVerticalRadius,\n        right: hotSpotCenterX + hotSpotHorizontalRadius,\n        bottom: hotSpotCenterY + hotSpotVerticalRadius,\n    };\n    // If irrelevant, or if we are requested to: don't perform crop/fit based on\n    // the crop/hotspot.\n    if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n        spec = __assign(__assign({}, spec), fit({ crop: crop, hotspot: hotspot }, spec));\n    }\n    return specToImageUrl(__assign(__assign({}, spec), { asset: asset }));\n}\nexports[\"default\"] = urlForImage;\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec) {\n    var cdnUrl = (spec.baseUrl || 'https://cdn.sanity.io').replace(/\\/+$/, '');\n    var filename = \"\".concat(spec.asset.id, \"-\").concat(spec.asset.width, \"x\").concat(spec.asset.height, \".\").concat(spec.asset.format);\n    var baseUrl = \"\".concat(cdnUrl, \"/images/\").concat(spec.projectId, \"/\").concat(spec.dataset, \"/\").concat(filename);\n    var params = [];\n    if (spec.rect) {\n        // Only bother url with a crop if it actually crops anything\n        var _a = spec.rect, left = _a.left, top_1 = _a.top, width = _a.width, height = _a.height;\n        var isEffectiveCrop = left !== 0 || top_1 !== 0 || height !== spec.asset.height || width !== spec.asset.width;\n        if (isEffectiveCrop) {\n            params.push(\"rect=\".concat(left, \",\").concat(top_1, \",\").concat(width, \",\").concat(height));\n        }\n    }\n    if (spec.bg) {\n        params.push(\"bg=\".concat(spec.bg));\n    }\n    if (spec.focalPoint) {\n        params.push(\"fp-x=\".concat(spec.focalPoint.x));\n        params.push(\"fp-y=\".concat(spec.focalPoint.y));\n    }\n    var flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('');\n    if (flip) {\n        params.push(\"flip=\".concat(flip));\n    }\n    // Map from spec name to url param name, and allow using the actual param name as an alternative\n    exports.SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n        var specName = mapping[0], param = mapping[1];\n        if (typeof spec[specName] !== 'undefined') {\n            params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[specName])));\n        }\n        else if (typeof spec[param] !== 'undefined') {\n            params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[param])));\n        }\n    });\n    if (params.length === 0) {\n        return baseUrl;\n    }\n    return \"\".concat(baseUrl, \"?\").concat(params.join('&'));\n}\nfunction fit(source, spec) {\n    var cropRect;\n    var imgWidth = spec.width;\n    var imgHeight = spec.height;\n    // If we are not constraining the aspect ratio, we'll just use the whole crop\n    if (!(imgWidth && imgHeight)) {\n        return { width: imgWidth, height: imgHeight, rect: source.crop };\n    }\n    var crop = source.crop;\n    var hotspot = source.hotspot;\n    // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n    var desiredAspectRatio = imgWidth / imgHeight;\n    var cropAspectRatio = crop.width / crop.height;\n    if (cropAspectRatio > desiredAspectRatio) {\n        // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n        var height = Math.round(crop.height);\n        var width = Math.round(height * desiredAspectRatio);\n        var top_2 = Math.max(0, Math.round(crop.top));\n        // Center output horizontally over hotspot\n        var hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left);\n        var left = Math.max(0, Math.round(hotspotXCenter - width / 2));\n        // Keep output within crop\n        if (left < crop.left) {\n            left = crop.left;\n        }\n        else if (left + width > crop.left + crop.width) {\n            left = crop.left + crop.width - width;\n        }\n        cropRect = { left: left, top: top_2, width: width, height: height };\n    }\n    else {\n        // The crop is taller than the desired ratio, we are cutting from top and bottom\n        var width = crop.width;\n        var height = Math.round(width / desiredAspectRatio);\n        var left = Math.max(0, Math.round(crop.left));\n        // Center output vertically over hotspot\n        var hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top);\n        var top_3 = Math.max(0, Math.round(hotspotYCenter - height / 2));\n        // Keep output rect within crop\n        if (top_3 < crop.top) {\n            top_3 = crop.top;\n        }\n        else if (top_3 + height > crop.top + crop.height) {\n            top_3 = crop.top + crop.height - height;\n        }\n        cropRect = { left: left, top: top_3, width: width, height: height };\n    }\n    return {\n        width: imgWidth,\n        height: imgHeight,\n        rect: cropRect,\n    };\n}\n//# sourceMappingURL=urlForImage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/image-url/lib/node/urlForImage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/image-url/lib/node/builder.js":
/*!************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/builder.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ImageUrlBuilder = void 0;\nvar urlForImage_1 = __importStar(__webpack_require__(/*! ./urlForImage */ \"(rsc)/./node_modules/@sanity/image-url/lib/node/urlForImage.js\"));\nvar validFits = [\n    \"clip\",\n    \"crop\",\n    \"fill\",\n    \"fillmax\",\n    \"max\",\n    \"scale\",\n    \"min\"\n];\nvar validCrops = [\n    \"top\",\n    \"bottom\",\n    \"left\",\n    \"right\",\n    \"center\",\n    \"focalpoint\",\n    \"entropy\"\n];\nvar validAutoModes = [\n    \"format\"\n];\nfunction isSanityModernClientLike(client) {\n    return client && \"config\" in client ? typeof client.config === \"function\" : false;\n}\nfunction isSanityClientLike(client) {\n    return client && \"clientConfig\" in client ? typeof client.clientConfig === \"object\" : false;\n}\nfunction rewriteSpecName(key) {\n    var specs = urlForImage_1.SPEC_NAME_TO_URL_NAME_MAPPINGS;\n    for(var _i = 0, specs_1 = specs; _i < specs_1.length; _i++){\n        var entry = specs_1[_i];\n        var specName = entry[0], param = entry[1];\n        if (key === specName || key === param) {\n            return specName;\n        }\n    }\n    return key;\n}\nfunction urlBuilder(options) {\n    // Did we get a modernish client?\n    if (isSanityModernClientLike(options)) {\n        // Inherit config from client\n        var _a = options.config(), apiUrl = _a.apiHost, projectId = _a.projectId, dataset = _a.dataset;\n        var apiHost = apiUrl || \"https://api.sanity.io\";\n        return new ImageUrlBuilder(null, {\n            baseUrl: apiHost.replace(/^https:\\/\\/api\\./, \"https://cdn.\"),\n            projectId: projectId,\n            dataset: dataset\n        });\n    }\n    // Did we get a SanityClient?\n    var client = options;\n    if (isSanityClientLike(client)) {\n        // Inherit config from client\n        var _b = client.clientConfig, apiUrl = _b.apiHost, projectId = _b.projectId, dataset = _b.dataset;\n        var apiHost = apiUrl || \"https://api.sanity.io\";\n        return new ImageUrlBuilder(null, {\n            baseUrl: apiHost.replace(/^https:\\/\\/api\\./, \"https://cdn.\"),\n            projectId: projectId,\n            dataset: dataset\n        });\n    }\n    // Or just accept the options as given\n    return new ImageUrlBuilder(null, options);\n}\nexports[\"default\"] = urlBuilder;\nvar ImageUrlBuilder = /** @class */ function() {\n    function ImageUrlBuilder(parent, options) {\n        this.options = parent ? __assign(__assign({}, parent.options || {}), options || {}) : __assign({}, options || {}); // Copy options\n    }\n    ImageUrlBuilder.prototype.withOptions = function(options) {\n        var baseUrl = options.baseUrl || this.options.baseUrl;\n        var newOptions = {\n            baseUrl: baseUrl\n        };\n        for(var key in options){\n            if (options.hasOwnProperty(key)) {\n                var specKey = rewriteSpecName(key);\n                newOptions[specKey] = options[key];\n            }\n        }\n        return new ImageUrlBuilder(this, __assign({\n            baseUrl: baseUrl\n        }, newOptions));\n    };\n    // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n    ImageUrlBuilder.prototype.image = function(source) {\n        return this.withOptions({\n            source: source\n        });\n    };\n    // Specify the dataset\n    ImageUrlBuilder.prototype.dataset = function(dataset) {\n        return this.withOptions({\n            dataset: dataset\n        });\n    };\n    // Specify the projectId\n    ImageUrlBuilder.prototype.projectId = function(projectId) {\n        return this.withOptions({\n            projectId: projectId\n        });\n    };\n    // Specify background color\n    ImageUrlBuilder.prototype.bg = function(bg) {\n        return this.withOptions({\n            bg: bg\n        });\n    };\n    // Set DPR scaling factor\n    ImageUrlBuilder.prototype.dpr = function(dpr) {\n        // A DPR of 1 is the default - so only include it if we have a different value\n        return this.withOptions(dpr && dpr !== 1 ? {\n            dpr: dpr\n        } : {});\n    };\n    // Specify the width of the image in pixels\n    ImageUrlBuilder.prototype.width = function(width) {\n        return this.withOptions({\n            width: width\n        });\n    };\n    // Specify the height of the image in pixels\n    ImageUrlBuilder.prototype.height = function(height) {\n        return this.withOptions({\n            height: height\n        });\n    };\n    // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n    ImageUrlBuilder.prototype.focalPoint = function(x, y) {\n        return this.withOptions({\n            focalPoint: {\n                x: x,\n                y: y\n            }\n        });\n    };\n    ImageUrlBuilder.prototype.maxWidth = function(maxWidth) {\n        return this.withOptions({\n            maxWidth: maxWidth\n        });\n    };\n    ImageUrlBuilder.prototype.minWidth = function(minWidth) {\n        return this.withOptions({\n            minWidth: minWidth\n        });\n    };\n    ImageUrlBuilder.prototype.maxHeight = function(maxHeight) {\n        return this.withOptions({\n            maxHeight: maxHeight\n        });\n    };\n    ImageUrlBuilder.prototype.minHeight = function(minHeight) {\n        return this.withOptions({\n            minHeight: minHeight\n        });\n    };\n    // Specify width and height in pixels\n    ImageUrlBuilder.prototype.size = function(width, height) {\n        return this.withOptions({\n            width: width,\n            height: height\n        });\n    };\n    // Specify blur between 0 and 100\n    ImageUrlBuilder.prototype.blur = function(blur) {\n        return this.withOptions({\n            blur: blur\n        });\n    };\n    ImageUrlBuilder.prototype.sharpen = function(sharpen) {\n        return this.withOptions({\n            sharpen: sharpen\n        });\n    };\n    // Specify the desired rectangle of the image\n    ImageUrlBuilder.prototype.rect = function(left, top, width, height) {\n        return this.withOptions({\n            rect: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n            }\n        });\n    };\n    // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n    ImageUrlBuilder.prototype.format = function(format) {\n        return this.withOptions({\n            format: format\n        });\n    };\n    ImageUrlBuilder.prototype.invert = function(invert) {\n        return this.withOptions({\n            invert: invert\n        });\n    };\n    // Rotation in degrees 0, 90, 180, 270\n    ImageUrlBuilder.prototype.orientation = function(orientation) {\n        return this.withOptions({\n            orientation: orientation\n        });\n    };\n    // Compression quality 0-100\n    ImageUrlBuilder.prototype.quality = function(quality) {\n        return this.withOptions({\n            quality: quality\n        });\n    };\n    // Make it a download link. Parameter is default filename.\n    ImageUrlBuilder.prototype.forceDownload = function(download) {\n        return this.withOptions({\n            download: download\n        });\n    };\n    // Flip image horizontally\n    ImageUrlBuilder.prototype.flipHorizontal = function() {\n        return this.withOptions({\n            flipHorizontal: true\n        });\n    };\n    // Flip image vertically\n    ImageUrlBuilder.prototype.flipVertical = function() {\n        return this.withOptions({\n            flipVertical: true\n        });\n    };\n    // Ignore crop/hotspot from image record, even when present\n    ImageUrlBuilder.prototype.ignoreImageParams = function() {\n        return this.withOptions({\n            ignoreImageParams: true\n        });\n    };\n    ImageUrlBuilder.prototype.fit = function(value) {\n        if (validFits.indexOf(value) === -1) {\n            throw new Error('Invalid fit mode \"'.concat(value, '\"'));\n        }\n        return this.withOptions({\n            fit: value\n        });\n    };\n    ImageUrlBuilder.prototype.crop = function(value) {\n        if (validCrops.indexOf(value) === -1) {\n            throw new Error('Invalid crop mode \"'.concat(value, '\"'));\n        }\n        return this.withOptions({\n            crop: value\n        });\n    };\n    // Saturation\n    ImageUrlBuilder.prototype.saturation = function(saturation) {\n        return this.withOptions({\n            saturation: saturation\n        });\n    };\n    ImageUrlBuilder.prototype.auto = function(value) {\n        if (validAutoModes.indexOf(value) === -1) {\n            throw new Error('Invalid auto mode \"'.concat(value, '\"'));\n        }\n        return this.withOptions({\n            auto: value\n        });\n    };\n    // Specify the number of pixels to pad the image\n    ImageUrlBuilder.prototype.pad = function(pad) {\n        return this.withOptions({\n            pad: pad\n        });\n    };\n    // Gets the url based on the submitted parameters\n    ImageUrlBuilder.prototype.url = function() {\n        return (0, urlForImage_1.default)(this.options);\n    };\n    // Alias for url()\n    ImageUrlBuilder.prototype.toString = function() {\n        return this.url();\n    };\n    return ImageUrlBuilder;\n}();\nexports.ImageUrlBuilder = ImageUrlBuilder; //# sourceMappingURL=builder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/image-url/lib/node/builder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/image-url/lib/node/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nvar builder_1 = __importDefault(__webpack_require__(/*! ./builder */ \"(rsc)/./node_modules/@sanity/image-url/lib/node/builder.js\"));\nmodule.exports = builder_1.default; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQUssU0FBVUMsR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQSxJQUFJRSxZQUFZSCxnQkFBZ0JJLG1CQUFPQSxDQUFDLDZFQUFXO0FBQ25EQyxPQUFPQyxPQUFPLEdBQUdILFVBQVVJLE9BQU8sRUFDbEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvaW1hZ2UtdXJsL2xpYi9ub2RlL2luZGV4LmpzP2EyMjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG52YXIgYnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2J1aWxkZXJcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBidWlsZGVyXzEuZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiYnVpbGRlcl8xIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/image-url/lib/node/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/parseAssetId.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar example = \"image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg\";\nfunction parseAssetId(ref) {\n    var _a = ref.split(\"-\"), id = _a[1], dimensionString = _a[2], format = _a[3];\n    if (!id || !dimensionString || !format) {\n        throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, '\".'));\n    }\n    var _b = dimensionString.split(\"x\"), imgWidthStr = _b[0], imgHeightStr = _b[1];\n    var width = +imgWidthStr;\n    var height = +imgHeightStr;\n    var isValidAssetId = isFinite(width) && isFinite(height);\n    if (!isValidAssetId) {\n        throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, '\".'));\n    }\n    return {\n        id: id,\n        width: width,\n        height: height,\n        format: format\n    };\n}\nexports[\"default\"] = parseAssetId; //# sourceMappingURL=parseAssetId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9pbWFnZS11cmwvbGliL25vZGUvcGFyc2VBc3NldElkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELElBQUlDLFVBQVU7QUFDZCxTQUFTQyxhQUFhQyxHQUFHO0lBQ3JCLElBQUlDLEtBQUtELElBQUlFLEtBQUssQ0FBQyxNQUFNQyxLQUFLRixFQUFFLENBQUMsRUFBRSxFQUFFRyxrQkFBa0JILEVBQUUsQ0FBQyxFQUFFLEVBQUVJLFNBQVNKLEVBQUUsQ0FBQyxFQUFFO0lBQzVFLElBQUksQ0FBQ0UsTUFBTSxDQUFDQyxtQkFBbUIsQ0FBQ0MsUUFBUTtRQUNwQyxNQUFNLElBQUlDLE1BQU0seUJBQXlCQyxNQUFNLENBQUNQLEtBQUssNkJBQTZCTyxNQUFNLENBQUNULFNBQVM7SUFDdEc7SUFDQSxJQUFJVSxLQUFLSixnQkFBZ0JGLEtBQUssQ0FBQyxNQUFNTyxjQUFjRCxFQUFFLENBQUMsRUFBRSxFQUFFRSxlQUFlRixFQUFFLENBQUMsRUFBRTtJQUM5RSxJQUFJRyxRQUFRLENBQUNGO0lBQ2IsSUFBSUcsU0FBUyxDQUFDRjtJQUNkLElBQUlHLGlCQUFpQkMsU0FBU0gsVUFBVUcsU0FBU0Y7SUFDakQsSUFBSSxDQUFDQyxnQkFBZ0I7UUFDakIsTUFBTSxJQUFJUCxNQUFNLHlCQUF5QkMsTUFBTSxDQUFDUCxLQUFLLDZCQUE2Qk8sTUFBTSxDQUFDVCxTQUFTO0lBQ3RHO0lBQ0EsT0FBTztRQUFFSyxJQUFJQTtRQUFJUSxPQUFPQTtRQUFPQyxRQUFRQTtRQUFRUCxRQUFRQTtJQUFPO0FBQ2xFO0FBQ0FULGtCQUFlLEdBQUdHLGNBQ2xCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2ltYWdlLXVybC9saWIvbm9kZS9wYXJzZUFzc2V0SWQuanM/NDg1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBleGFtcGxlID0gJ2ltYWdlLVRiOUV3OENYSXdhWTZSMWtqTXZJMHVSUi0yMDAweDMwMDAtanBnJztcbmZ1bmN0aW9uIHBhcnNlQXNzZXRJZChyZWYpIHtcbiAgICB2YXIgX2EgPSByZWYuc3BsaXQoJy0nKSwgaWQgPSBfYVsxXSwgZGltZW5zaW9uU3RyaW5nID0gX2FbMl0sIGZvcm1hdCA9IF9hWzNdO1xuICAgIGlmICghaWQgfHwgIWRpbWVuc2lvblN0cmluZyB8fCAhZm9ybWF0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1hbGZvcm1lZCBhc3NldCBfcmVmICdcIi5jb25jYXQocmVmLCBcIicuIEV4cGVjdGVkIGFuIGlkIGxpa2UgXFxcIlwiKS5jb25jYXQoZXhhbXBsZSwgXCJcXFwiLlwiKSk7XG4gICAgfVxuICAgIHZhciBfYiA9IGRpbWVuc2lvblN0cmluZy5zcGxpdCgneCcpLCBpbWdXaWR0aFN0ciA9IF9iWzBdLCBpbWdIZWlnaHRTdHIgPSBfYlsxXTtcbiAgICB2YXIgd2lkdGggPSAraW1nV2lkdGhTdHI7XG4gICAgdmFyIGhlaWdodCA9ICtpbWdIZWlnaHRTdHI7XG4gICAgdmFyIGlzVmFsaWRBc3NldElkID0gaXNGaW5pdGUod2lkdGgpICYmIGlzRmluaXRlKGhlaWdodCk7XG4gICAgaWYgKCFpc1ZhbGlkQXNzZXRJZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNYWxmb3JtZWQgYXNzZXQgX3JlZiAnXCIuY29uY2F0KHJlZiwgXCInLiBFeHBlY3RlZCBhbiBpZCBsaWtlIFxcXCJcIikuY29uY2F0KGV4YW1wbGUsIFwiXFxcIi5cIikpO1xuICAgIH1cbiAgICByZXR1cm4geyBpZDogaWQsIHdpZHRoOiB3aWR0aCwgaGVpZ2h0OiBoZWlnaHQsIGZvcm1hdDogZm9ybWF0IH07XG59XG5leHBvcnRzLmRlZmF1bHQgPSBwYXJzZUFzc2V0SWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZUFzc2V0SWQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXhhbXBsZSIsInBhcnNlQXNzZXRJZCIsInJlZiIsIl9hIiwic3BsaXQiLCJpZCIsImRpbWVuc2lvblN0cmluZyIsImZvcm1hdCIsIkVycm9yIiwiY29uY2F0IiwiX2IiLCJpbWdXaWR0aFN0ciIsImltZ0hlaWdodFN0ciIsIndpZHRoIiwiaGVpZ2h0IiwiaXNWYWxpZEFzc2V0SWQiLCJpc0Zpbml0ZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/image-url/lib/node/parseSource.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/parseSource.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar isRef = function(src) {\n    var source = src;\n    return source ? typeof source._ref === \"string\" : false;\n};\nvar isAsset = function(src) {\n    var source = src;\n    return source ? typeof source._id === \"string\" : false;\n};\nvar isAssetStub = function(src) {\n    var source = src;\n    return source && source.asset ? typeof source.asset.url === \"string\" : false;\n};\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nfunction parseSource(source) {\n    if (!source) {\n        return null;\n    }\n    var image;\n    if (typeof source === \"string\" && isUrl(source)) {\n        // Someone passed an existing image url?\n        image = {\n            asset: {\n                _ref: urlToId(source)\n            }\n        };\n    } else if (typeof source === \"string\") {\n        // Just an asset id\n        image = {\n            asset: {\n                _ref: source\n            }\n        };\n    } else if (isRef(source)) {\n        // We just got passed an asset directly\n        image = {\n            asset: source\n        };\n    } else if (isAsset(source)) {\n        // If we were passed an image asset document\n        image = {\n            asset: {\n                _ref: source._id || \"\"\n            }\n        };\n    } else if (isAssetStub(source)) {\n        // If we were passed a partial asset (`url`, but no `_id`)\n        image = {\n            asset: {\n                _ref: urlToId(source.asset.url)\n            }\n        };\n    } else if (typeof source.asset === \"object\") {\n        // Probably an actual image with materialized asset\n        image = __assign({}, source);\n    } else {\n        // We got something that does not look like an image, or it is an image\n        // that currently isn't sporting an asset.\n        return null;\n    }\n    var img = source;\n    if (img.crop) {\n        image.crop = img.crop;\n    }\n    if (img.hotspot) {\n        image.hotspot = img.hotspot;\n    }\n    return applyDefaults(image);\n}\nexports[\"default\"] = parseSource;\nfunction isUrl(url) {\n    return /^https?:\\/\\//.test(\"\".concat(url));\n}\nfunction urlToId(url) {\n    var parts = url.split(\"/\").slice(-1);\n    return \"image-\".concat(parts[0]).replace(/\\.([a-z]+)$/, \"-$1\");\n}\n// Mock crop and hotspot if image lacks it\nfunction applyDefaults(image) {\n    if (image.crop && image.hotspot) {\n        return image;\n    }\n    // We need to pad in default values for crop or hotspot\n    var result = __assign({}, image);\n    if (!result.crop) {\n        result.crop = {\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0\n        };\n    }\n    if (!result.hotspot) {\n        result.hotspot = {\n            x: 0.5,\n            y: 0.5,\n            height: 1.0,\n            width: 1.0\n        };\n    }\n    return result;\n} //# sourceMappingURL=parseSource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/image-url/lib/node/parseSource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/image-url/lib/node/urlForImage.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sanity/image-url/lib/node/urlForImage.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.parseSource = exports.SPEC_NAME_TO_URL_NAME_MAPPINGS = void 0;\nvar parseAssetId_1 = __importDefault(__webpack_require__(/*! ./parseAssetId */ \"(rsc)/./node_modules/@sanity/image-url/lib/node/parseAssetId.js\"));\nvar parseSource_1 = __importDefault(__webpack_require__(/*! ./parseSource */ \"(rsc)/./node_modules/@sanity/image-url/lib/node/parseSource.js\"));\nexports.parseSource = parseSource_1.default;\nexports.SPEC_NAME_TO_URL_NAME_MAPPINGS = [\n    [\n        \"width\",\n        \"w\"\n    ],\n    [\n        \"height\",\n        \"h\"\n    ],\n    [\n        \"format\",\n        \"fm\"\n    ],\n    [\n        \"download\",\n        \"dl\"\n    ],\n    [\n        \"blur\",\n        \"blur\"\n    ],\n    [\n        \"sharpen\",\n        \"sharp\"\n    ],\n    [\n        \"invert\",\n        \"invert\"\n    ],\n    [\n        \"orientation\",\n        \"or\"\n    ],\n    [\n        \"minHeight\",\n        \"min-h\"\n    ],\n    [\n        \"maxHeight\",\n        \"max-h\"\n    ],\n    [\n        \"minWidth\",\n        \"min-w\"\n    ],\n    [\n        \"maxWidth\",\n        \"max-w\"\n    ],\n    [\n        \"quality\",\n        \"q\"\n    ],\n    [\n        \"fit\",\n        \"fit\"\n    ],\n    [\n        \"crop\",\n        \"crop\"\n    ],\n    [\n        \"saturation\",\n        \"sat\"\n    ],\n    [\n        \"auto\",\n        \"auto\"\n    ],\n    [\n        \"dpr\",\n        \"dpr\"\n    ],\n    [\n        \"pad\",\n        \"pad\"\n    ]\n];\nfunction urlForImage(options) {\n    var spec = __assign({}, options || {});\n    var source = spec.source;\n    delete spec.source;\n    var image = (0, parseSource_1.default)(source);\n    if (!image) {\n        throw new Error(\"Unable to resolve image URL from source (\".concat(JSON.stringify(source), \")\"));\n    }\n    var id = image.asset._ref || image.asset._id || \"\";\n    var asset = (0, parseAssetId_1.default)(id);\n    // Compute crop rect in terms of pixel coordinates in the raw source image\n    var cropLeft = Math.round(image.crop.left * asset.width);\n    var cropTop = Math.round(image.crop.top * asset.height);\n    var crop = {\n        left: cropLeft,\n        top: cropTop,\n        width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n        height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop)\n    };\n    // Compute hot spot rect in terms of pixel coordinates\n    var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;\n    var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;\n    var hotSpotCenterX = image.hotspot.x * asset.width;\n    var hotSpotCenterY = image.hotspot.y * asset.height;\n    var hotspot = {\n        left: hotSpotCenterX - hotSpotHorizontalRadius,\n        top: hotSpotCenterY - hotSpotVerticalRadius,\n        right: hotSpotCenterX + hotSpotHorizontalRadius,\n        bottom: hotSpotCenterY + hotSpotVerticalRadius\n    };\n    // If irrelevant, or if we are requested to: don't perform crop/fit based on\n    // the crop/hotspot.\n    if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n        spec = __assign(__assign({}, spec), fit({\n            crop: crop,\n            hotspot: hotspot\n        }, spec));\n    }\n    return specToImageUrl(__assign(__assign({}, spec), {\n        asset: asset\n    }));\n}\nexports[\"default\"] = urlForImage;\n// eslint-disable-next-line complexity\nfunction specToImageUrl(spec) {\n    var cdnUrl = (spec.baseUrl || \"https://cdn.sanity.io\").replace(/\\/+$/, \"\");\n    var filename = \"\".concat(spec.asset.id, \"-\").concat(spec.asset.width, \"x\").concat(spec.asset.height, \".\").concat(spec.asset.format);\n    var baseUrl = \"\".concat(cdnUrl, \"/images/\").concat(spec.projectId, \"/\").concat(spec.dataset, \"/\").concat(filename);\n    var params = [];\n    if (spec.rect) {\n        // Only bother url with a crop if it actually crops anything\n        var _a = spec.rect, left = _a.left, top_1 = _a.top, width = _a.width, height = _a.height;\n        var isEffectiveCrop = left !== 0 || top_1 !== 0 || height !== spec.asset.height || width !== spec.asset.width;\n        if (isEffectiveCrop) {\n            params.push(\"rect=\".concat(left, \",\").concat(top_1, \",\").concat(width, \",\").concat(height));\n        }\n    }\n    if (spec.bg) {\n        params.push(\"bg=\".concat(spec.bg));\n    }\n    if (spec.focalPoint) {\n        params.push(\"fp-x=\".concat(spec.focalPoint.x));\n        params.push(\"fp-y=\".concat(spec.focalPoint.y));\n    }\n    var flip = [\n        spec.flipHorizontal && \"h\",\n        spec.flipVertical && \"v\"\n    ].filter(Boolean).join(\"\");\n    if (flip) {\n        params.push(\"flip=\".concat(flip));\n    }\n    // Map from spec name to url param name, and allow using the actual param name as an alternative\n    exports.SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function(mapping) {\n        var specName = mapping[0], param = mapping[1];\n        if (typeof spec[specName] !== \"undefined\") {\n            params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[specName])));\n        } else if (typeof spec[param] !== \"undefined\") {\n            params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[param])));\n        }\n    });\n    if (params.length === 0) {\n        return baseUrl;\n    }\n    return \"\".concat(baseUrl, \"?\").concat(params.join(\"&\"));\n}\nfunction fit(source, spec) {\n    var cropRect;\n    var imgWidth = spec.width;\n    var imgHeight = spec.height;\n    // If we are not constraining the aspect ratio, we'll just use the whole crop\n    if (!(imgWidth && imgHeight)) {\n        return {\n            width: imgWidth,\n            height: imgHeight,\n            rect: source.crop\n        };\n    }\n    var crop = source.crop;\n    var hotspot = source.hotspot;\n    // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n    var desiredAspectRatio = imgWidth / imgHeight;\n    var cropAspectRatio = crop.width / crop.height;\n    if (cropAspectRatio > desiredAspectRatio) {\n        // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n        var height = Math.round(crop.height);\n        var width = Math.round(height * desiredAspectRatio);\n        var top_2 = Math.max(0, Math.round(crop.top));\n        // Center output horizontally over hotspot\n        var hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left);\n        var left = Math.max(0, Math.round(hotspotXCenter - width / 2));\n        // Keep output within crop\n        if (left < crop.left) {\n            left = crop.left;\n        } else if (left + width > crop.left + crop.width) {\n            left = crop.left + crop.width - width;\n        }\n        cropRect = {\n            left: left,\n            top: top_2,\n            width: width,\n            height: height\n        };\n    } else {\n        // The crop is taller than the desired ratio, we are cutting from top and bottom\n        var width = crop.width;\n        var height = Math.round(width / desiredAspectRatio);\n        var left = Math.max(0, Math.round(crop.left));\n        // Center output vertically over hotspot\n        var hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top);\n        var top_3 = Math.max(0, Math.round(hotspotYCenter - height / 2));\n        // Keep output rect within crop\n        if (top_3 < crop.top) {\n            top_3 = crop.top;\n        } else if (top_3 + height > crop.top + crop.height) {\n            top_3 = crop.top + crop.height - height;\n        }\n        cropRect = {\n            left: left,\n            top: top_3,\n            width: width,\n            height: height\n        };\n    }\n    return {\n        width: imgWidth,\n        height: imgHeight,\n        rect: cropRect\n    };\n} //# sourceMappingURL=urlForImage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/image-url/lib/node/urlForImage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/decode.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/decode.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.vercelStegaDecodeAll = exports.vercelStegaDecode = exports.VERCEL_STEGA_REGEX = void 0;\nconst map_1 = __webpack_require__(/*! ./map */ \"(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/map.js\");\nconst REVERSE_HEX_DIGIT_MAP = Object.fromEntries(Object.entries(map_1.HEX_DIGIT_MAP).map((x)=>x.reverse()));\nconst HEX_CHARS = `${Object.values(map_1.HEX_DIGIT_MAP).map((x)=>`\\\\u{${x.toString(16)}}`).join(\"\")}`;\nexports.VERCEL_STEGA_REGEX = new RegExp(`(?:[${HEX_CHARS}]{2})+`, \"gu\");\n/**\n * Decodes the first hidden string that's found in the source string back into its original value\n * @param source - The source string with encoded data\n * @returns The decoded JSON value\n */ function vercelStegaDecode(source) {\n    const matches = source.match(exports.VERCEL_STEGA_REGEX);\n    if (!matches) return;\n    return decode(matches[0], true)[0];\n}\nexports.vercelStegaDecode = vercelStegaDecode;\n/**\n * Decodes every hidden string that's found in the source string back into their original values\n * @param source - The source string with encoded data\n * @returns The decoded JSON values\n */ function vercelStegaDecodeAll(source) {\n    const matches = source.match(exports.VERCEL_STEGA_REGEX);\n    if (!matches) return;\n    return matches.map((match)=>decode(match)).flat();\n}\nexports.vercelStegaDecodeAll = vercelStegaDecodeAll;\nfunction decode(encodedString, firstOnly = false) {\n    var _a;\n    const encoded = Array.from(encodedString);\n    if (encoded.length % 2) {\n        throw new Error(`Invalid encoded text length. Expected length to be even, received: ${encoded.length}`);\n    }\n    const chars = [];\n    for(let i = encoded.length * 0.5; i--;){\n        const hex = `${REVERSE_HEX_DIGIT_MAP[encoded[i * 2].codePointAt(0)]}${REVERSE_HEX_DIGIT_MAP[encoded[i * 2 + 1].codePointAt(0)]}`;\n        chars.unshift(String.fromCharCode(parseInt(hex, 16)));\n    }\n    const results = [];\n    const queue = [\n        chars.join(\"\")\n    ];\n    let breakLimit = 10;\n    while(queue.length){\n        const string = queue.shift();\n        try {\n            results.push(JSON.parse(string));\n            if (firstOnly) return results;\n        } catch (error) {\n            if (!breakLimit--) throw error;\n            const position = +((_a = error.message.match(/\\sposition\\s(\\d+)$/)) === null || _a === void 0 ? void 0 : _a[1]);\n            if (!position) throw error;\n            queue.unshift(string.substring(0, position), string.substring(position));\n        }\n    }\n    return results;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmV2aWV3LWtpdC9ub2RlX21vZHVsZXMvQHZlcmNlbC9zdGVnYS9kaXN0L2Nqcy9kZWNvZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDRCQUE0QixHQUFHQSx5QkFBeUIsR0FBR0EsMEJBQTBCLEdBQUcsS0FBSztBQUM3RixNQUFNSyxRQUFRQyxtQkFBT0EsQ0FBQyxrR0FBTztBQUM3QixNQUFNQyx3QkFBd0JULE9BQU9VLFdBQVcsQ0FBQ1YsT0FBT1csT0FBTyxDQUFDSixNQUFNSyxhQUFhLEVBQUVDLEdBQUcsQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxPQUFPO0FBQ3pHLE1BQU1DLFlBQVksQ0FBQyxFQUFFaEIsT0FBT2lCLE1BQU0sQ0FBQ1YsTUFBTUssYUFBYSxFQUNqREMsR0FBRyxDQUFDLENBQUNDLElBQU0sQ0FBQyxJQUFJLEVBQUVBLEVBQUVJLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUNuQ0MsSUFBSSxDQUFDLElBQUksQ0FBQztBQUNmakIsMEJBQTBCLEdBQUcsSUFBSWtCLE9BQU8sQ0FBQyxJQUFJLEVBQUVKLFVBQVUsTUFBTSxDQUFDLEVBQUU7QUFDbEU7Ozs7Q0FJQyxHQUNELFNBQVNYLGtCQUFrQmdCLE1BQU07SUFDN0IsTUFBTUMsVUFBVUQsT0FBT0UsS0FBSyxDQUFDckIsUUFBUUksa0JBQWtCO0lBQ3ZELElBQUksQ0FBQ2dCLFNBQ0Q7SUFDSixPQUFPRSxPQUFPRixPQUFPLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxFQUFFO0FBQ3RDO0FBQ0FwQix5QkFBeUIsR0FBR0c7QUFDNUI7Ozs7Q0FJQyxHQUNELFNBQVNELHFCQUFxQmlCLE1BQU07SUFDaEMsTUFBTUMsVUFBVUQsT0FBT0UsS0FBSyxDQUFDckIsUUFBUUksa0JBQWtCO0lBQ3ZELElBQUksQ0FBQ2dCLFNBQ0Q7SUFDSixPQUFPQSxRQUFRVCxHQUFHLENBQUMsQ0FBQ1UsUUFBVUMsT0FBT0QsUUFBUUUsSUFBSTtBQUNyRDtBQUNBdkIsNEJBQTRCLEdBQUdFO0FBQy9CLFNBQVNvQixPQUFPRSxhQUFhLEVBQUVDLFlBQVksS0FBSztJQUM1QyxJQUFJQztJQUNKLE1BQU1DLFVBQVVDLE1BQU1DLElBQUksQ0FBQ0w7SUFDM0IsSUFBSUcsUUFBUUcsTUFBTSxHQUFHLEdBQUc7UUFDcEIsTUFBTSxJQUFJQyxNQUFNLENBQUMsbUVBQW1FLEVBQUVKLFFBQVFHLE1BQU0sQ0FBQyxDQUFDO0lBQzFHO0lBQ0EsTUFBTUUsUUFBUSxFQUFFO0lBQ2hCLElBQUssSUFBSUMsSUFBSU4sUUFBUUcsTUFBTSxHQUFHLEtBQUtHLEtBQU07UUFDckMsTUFBTUMsTUFBTSxDQUFDLEVBQUUzQixxQkFBcUIsQ0FBQ29CLE9BQU8sQ0FBQ00sSUFBSSxFQUFFLENBQUNFLFdBQVcsQ0FBQyxHQUFHLENBQUMsRUFBRTVCLHFCQUFxQixDQUFDb0IsT0FBTyxDQUFDTSxJQUFJLElBQUksRUFBRSxDQUFDRSxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaElILE1BQU1JLE9BQU8sQ0FBQ0MsT0FBT0MsWUFBWSxDQUFDQyxTQUFTTCxLQUFLO0lBQ3BEO0lBQ0EsTUFBTU0sVUFBVSxFQUFFO0lBQ2xCLE1BQU1DLFFBQVE7UUFBQ1QsTUFBTWYsSUFBSSxDQUFDO0tBQUk7SUFDOUIsSUFBSXlCLGFBQWE7SUFDakIsTUFBT0QsTUFBTVgsTUFBTSxDQUFFO1FBQ2pCLE1BQU1hLFNBQVNGLE1BQU1HLEtBQUs7UUFDMUIsSUFBSTtZQUNBSixRQUFRSyxJQUFJLENBQUNDLEtBQUtDLEtBQUssQ0FBQ0o7WUFDeEIsSUFBSWxCLFdBQ0EsT0FBT2U7UUFDZixFQUNBLE9BQU9RLE9BQU87WUFDVixJQUFJLENBQUNOLGNBQ0QsTUFBTU07WUFDVixNQUFNQyxXQUFXLENBQUUsRUFBQ3ZCLEtBQUtzQixNQUFNRSxPQUFPLENBQUM3QixLQUFLLENBQUMscUJBQW9CLE1BQU8sUUFBUUssT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxFQUFFLENBQUMsRUFBRTtZQUM5RyxJQUFJLENBQUN1QixVQUNELE1BQU1EO1lBQ1ZQLE1BQU1MLE9BQU8sQ0FBQ08sT0FBT1EsU0FBUyxDQUFDLEdBQUdGLFdBQVdOLE9BQU9RLFNBQVMsQ0FBQ0Y7UUFDbEU7SUFDSjtJQUNBLE9BQU9UO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmV2aWV3LWtpdC9ub2RlX21vZHVsZXMvQHZlcmNlbC9zdGVnYS9kaXN0L2Nqcy9kZWNvZGUuanM/MzRjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmVyY2VsU3RlZ2FEZWNvZGVBbGwgPSBleHBvcnRzLnZlcmNlbFN0ZWdhRGVjb2RlID0gZXhwb3J0cy5WRVJDRUxfU1RFR0FfUkVHRVggPSB2b2lkIDA7XG5jb25zdCBtYXBfMSA9IHJlcXVpcmUoXCIuL21hcFwiKTtcbmNvbnN0IFJFVkVSU0VfSEVYX0RJR0lUX01BUCA9IE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhtYXBfMS5IRVhfRElHSVRfTUFQKS5tYXAoKHgpID0+IHgucmV2ZXJzZSgpKSk7XG5jb25zdCBIRVhfQ0hBUlMgPSBgJHtPYmplY3QudmFsdWVzKG1hcF8xLkhFWF9ESUdJVF9NQVApXG4gICAgLm1hcCgoeCkgPT4gYFxcXFx1eyR7eC50b1N0cmluZygxNil9fWApXG4gICAgLmpvaW4oJycpfWA7XG5leHBvcnRzLlZFUkNFTF9TVEVHQV9SRUdFWCA9IG5ldyBSZWdFeHAoYCg/Olske0hFWF9DSEFSU31dezJ9KStgLCAnZ3UnKTtcbi8qKlxuICogRGVjb2RlcyB0aGUgZmlyc3QgaGlkZGVuIHN0cmluZyB0aGF0J3MgZm91bmQgaW4gdGhlIHNvdXJjZSBzdHJpbmcgYmFjayBpbnRvIGl0cyBvcmlnaW5hbCB2YWx1ZVxuICogQHBhcmFtIHNvdXJjZSAtIFRoZSBzb3VyY2Ugc3RyaW5nIHdpdGggZW5jb2RlZCBkYXRhXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBKU09OIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHZlcmNlbFN0ZWdhRGVjb2RlKHNvdXJjZSkge1xuICAgIGNvbnN0IG1hdGNoZXMgPSBzb3VyY2UubWF0Y2goZXhwb3J0cy5WRVJDRUxfU1RFR0FfUkVHRVgpO1xuICAgIGlmICghbWF0Y2hlcylcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiBkZWNvZGUobWF0Y2hlc1swXSwgdHJ1ZSlbMF07XG59XG5leHBvcnRzLnZlcmNlbFN0ZWdhRGVjb2RlID0gdmVyY2VsU3RlZ2FEZWNvZGU7XG4vKipcbiAqIERlY29kZXMgZXZlcnkgaGlkZGVuIHN0cmluZyB0aGF0J3MgZm91bmQgaW4gdGhlIHNvdXJjZSBzdHJpbmcgYmFjayBpbnRvIHRoZWlyIG9yaWdpbmFsIHZhbHVlc1xuICogQHBhcmFtIHNvdXJjZSAtIFRoZSBzb3VyY2Ugc3RyaW5nIHdpdGggZW5jb2RlZCBkYXRhXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBKU09OIHZhbHVlc1xuICovXG5mdW5jdGlvbiB2ZXJjZWxTdGVnYURlY29kZUFsbChzb3VyY2UpIHtcbiAgICBjb25zdCBtYXRjaGVzID0gc291cmNlLm1hdGNoKGV4cG9ydHMuVkVSQ0VMX1NURUdBX1JFR0VYKTtcbiAgICBpZiAoIW1hdGNoZXMpXG4gICAgICAgIHJldHVybjtcbiAgICByZXR1cm4gbWF0Y2hlcy5tYXAoKG1hdGNoKSA9PiBkZWNvZGUobWF0Y2gpKS5mbGF0KCk7XG59XG5leHBvcnRzLnZlcmNlbFN0ZWdhRGVjb2RlQWxsID0gdmVyY2VsU3RlZ2FEZWNvZGVBbGw7XG5mdW5jdGlvbiBkZWNvZGUoZW5jb2RlZFN0cmluZywgZmlyc3RPbmx5ID0gZmFsc2UpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgZW5jb2RlZCA9IEFycmF5LmZyb20oZW5jb2RlZFN0cmluZyk7XG4gICAgaWYgKGVuY29kZWQubGVuZ3RoICUgMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgZW5jb2RlZCB0ZXh0IGxlbmd0aC4gRXhwZWN0ZWQgbGVuZ3RoIHRvIGJlIGV2ZW4sIHJlY2VpdmVkOiAke2VuY29kZWQubGVuZ3RofWApO1xuICAgIH1cbiAgICBjb25zdCBjaGFycyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSBlbmNvZGVkLmxlbmd0aCAqIDAuNTsgaS0tOykge1xuICAgICAgICBjb25zdCBoZXggPSBgJHtSRVZFUlNFX0hFWF9ESUdJVF9NQVBbZW5jb2RlZFtpICogMl0uY29kZVBvaW50QXQoMCldfSR7UkVWRVJTRV9IRVhfRElHSVRfTUFQW2VuY29kZWRbaSAqIDIgKyAxXS5jb2RlUG9pbnRBdCgwKV19YDtcbiAgICAgICAgY2hhcnMudW5zaGlmdChTdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KGhleCwgMTYpKSk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICBjb25zdCBxdWV1ZSA9IFtjaGFycy5qb2luKCcnKV07XG4gICAgbGV0IGJyZWFrTGltaXQgPSAxMDtcbiAgICB3aGlsZSAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IHN0cmluZyA9IHF1ZXVlLnNoaWZ0KCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXN1bHRzLnB1c2goSlNPTi5wYXJzZShzdHJpbmcpKTtcbiAgICAgICAgICAgIGlmIChmaXJzdE9ubHkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoIWJyZWFrTGltaXQtLSlcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gKygoX2EgPSBlcnJvci5tZXNzYWdlLm1hdGNoKC9cXHNwb3NpdGlvblxccyhcXGQrKSQvKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzFdKTtcbiAgICAgICAgICAgIGlmICghcG9zaXRpb24pXG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICBxdWV1ZS51bnNoaWZ0KHN0cmluZy5zdWJzdHJpbmcoMCwgcG9zaXRpb24pLCBzdHJpbmcuc3Vic3RyaW5nKHBvc2l0aW9uKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdHM7XG59XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ2ZXJjZWxTdGVnYURlY29kZUFsbCIsInZlcmNlbFN0ZWdhRGVjb2RlIiwiVkVSQ0VMX1NURUdBX1JFR0VYIiwibWFwXzEiLCJyZXF1aXJlIiwiUkVWRVJTRV9IRVhfRElHSVRfTUFQIiwiZnJvbUVudHJpZXMiLCJlbnRyaWVzIiwiSEVYX0RJR0lUX01BUCIsIm1hcCIsIngiLCJyZXZlcnNlIiwiSEVYX0NIQVJTIiwidmFsdWVzIiwidG9TdHJpbmciLCJqb2luIiwiUmVnRXhwIiwic291cmNlIiwibWF0Y2hlcyIsIm1hdGNoIiwiZGVjb2RlIiwiZmxhdCIsImVuY29kZWRTdHJpbmciLCJmaXJzdE9ubHkiLCJfYSIsImVuY29kZWQiLCJBcnJheSIsImZyb20iLCJsZW5ndGgiLCJFcnJvciIsImNoYXJzIiwiaSIsImhleCIsImNvZGVQb2ludEF0IiwidW5zaGlmdCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInBhcnNlSW50IiwicmVzdWx0cyIsInF1ZXVlIiwiYnJlYWtMaW1pdCIsInN0cmluZyIsInNoaWZ0IiwicHVzaCIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwicG9zaXRpb24iLCJtZXNzYWdlIiwic3Vic3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/decode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/encode.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/encode.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.vercelStegaCombine = exports.vercelStegaEncode = void 0;\nconst map_1 = __webpack_require__(/*! ./map */ \"(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/map.js\");\n/**\n * Encodes JSON as a hidden string\n * @param json - The JSON data to encode\n * @returns The hidden string\n */ function vercelStegaEncode(json) {\n    const string = JSON.stringify(json);\n    return Array.from(string).map((character)=>{\n        const charCode = character.charCodeAt(0);\n        if (charCode > 255) {\n            throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${string} on character ${character} (${charCode})`);\n        }\n        return Array.from(charCode.toString(16).padStart(2, \"0\")).map((hex)=>String.fromCodePoint(map_1.HEX_DIGIT_MAP[hex])).join(\"\");\n    }).join(\"\");\n}\nexports.vercelStegaEncode = vercelStegaEncode;\nfunction isDate(string) {\n    return Boolean(Date.parse(string));\n}\nfunction isUrl(string) {\n    try {\n        new URL(string);\n    } catch  {\n        return false;\n    }\n    return true;\n}\n/**\n * Adds an encoded JSON object to a string as hidden characters\n * @param string - The string the JSON will be added to\n * @param json - The JSON to add to the string\n * @param skip - Whether to skip encoding (default: \"auto\")\n */ function vercelStegaCombine(string, json, skip = \"auto\") {\n    if (skip === true) return string;\n    if (skip === \"auto\" && (isDate(string) || isUrl(string))) return string;\n    return `${string}${vercelStegaEncode(json)}`;\n}\nexports.vercelStegaCombine = vercelStegaCombine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmV2aWV3LWtpdC9ub2RlX21vZHVsZXMvQHZlcmNlbC9zdGVnYS9kaXN0L2Nqcy9lbmNvZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDBCQUEwQixHQUFHQSx5QkFBeUIsR0FBRyxLQUFLO0FBQzlELE1BQU1JLFFBQVFDLG1CQUFPQSxDQUFDLGtHQUFPO0FBQzdCOzs7O0NBSUMsR0FDRCxTQUFTRixrQkFBa0JHLElBQUk7SUFDM0IsTUFBTUMsU0FBU0MsS0FBS0MsU0FBUyxDQUFDSDtJQUM5QixPQUFPSSxNQUFNQyxJQUFJLENBQUNKLFFBQ2JLLEdBQUcsQ0FBQyxDQUFDQztRQUNOLE1BQU1DLFdBQVdELFVBQVVFLFVBQVUsQ0FBQztRQUN0QyxJQUFJRCxXQUFXLEtBQUs7WUFDaEIsTUFBTSxJQUFJRSxNQUFNLENBQUMsZ0VBQWdFLEVBQUVULE9BQU8sY0FBYyxFQUFFTSxVQUFVLEVBQUUsRUFBRUMsU0FBUyxDQUFDLENBQUM7UUFDdkk7UUFDQSxPQUFPSixNQUFNQyxJQUFJLENBQUNHLFNBQVNHLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsR0FBRyxNQUMvQ04sR0FBRyxDQUFDLENBQUNPLE1BQVFDLE9BQU9DLGFBQWEsQ0FBQ2pCLE1BQU1rQixhQUFhLENBQUNILElBQUksR0FDMURJLElBQUksQ0FBQztJQUNkLEdBQ0tBLElBQUksQ0FBQztBQUNkO0FBQ0F2Qix5QkFBeUIsR0FBR0c7QUFDNUIsU0FBU3FCLE9BQU9qQixNQUFNO0lBQ2xCLE9BQU9rQixRQUFRQyxLQUFLQyxLQUFLLENBQUNwQjtBQUM5QjtBQUNBLFNBQVNxQixNQUFNckIsTUFBTTtJQUNqQixJQUFJO1FBQ0EsSUFBSXNCLElBQUl0QjtJQUNaLEVBQ0EsT0FBTTtRQUNGLE9BQU87SUFDWDtJQUNBLE9BQU87QUFDWDtBQUNBOzs7OztDQUtDLEdBQ0QsU0FBU0wsbUJBQW1CSyxNQUFNLEVBQUVELElBQUksRUFBRXdCLE9BQU8sTUFBTTtJQUNuRCxJQUFJQSxTQUFTLE1BQ1QsT0FBT3ZCO0lBQ1gsSUFBSXVCLFNBQVMsVUFBV04sQ0FBQUEsT0FBT2pCLFdBQVdxQixNQUFNckIsT0FBTSxHQUNsRCxPQUFPQTtJQUNYLE9BQU8sQ0FBQyxFQUFFQSxPQUFPLEVBQUVKLGtCQUFrQkcsTUFBTSxDQUFDO0FBQ2hEO0FBQ0FOLDBCQUEwQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3ByZXZpZXcta2l0L25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvY2pzL2VuY29kZS5qcz9jYjYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52ZXJjZWxTdGVnYUNvbWJpbmUgPSBleHBvcnRzLnZlcmNlbFN0ZWdhRW5jb2RlID0gdm9pZCAwO1xuY29uc3QgbWFwXzEgPSByZXF1aXJlKFwiLi9tYXBcIik7XG4vKipcbiAqIEVuY29kZXMgSlNPTiBhcyBhIGhpZGRlbiBzdHJpbmdcbiAqIEBwYXJhbSBqc29uIC0gVGhlIEpTT04gZGF0YSB0byBlbmNvZGVcbiAqIEByZXR1cm5zIFRoZSBoaWRkZW4gc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHZlcmNlbFN0ZWdhRW5jb2RlKGpzb24pIHtcbiAgICBjb25zdCBzdHJpbmcgPSBKU09OLnN0cmluZ2lmeShqc29uKTtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShzdHJpbmcpXG4gICAgICAgIC5tYXAoKGNoYXJhY3RlcikgPT4ge1xuICAgICAgICBjb25zdCBjaGFyQ29kZSA9IGNoYXJhY3Rlci5jaGFyQ29kZUF0KDApO1xuICAgICAgICBpZiAoY2hhckNvZGUgPiAyNTUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgT25seSBBU0NJSSBlZGl0IGluZm8gY2FuIGJlIGVuY29kZWQuIEVycm9yIGF0dGVtcHRpbmcgdG8gZW5jb2RlICR7c3RyaW5nfSBvbiBjaGFyYWN0ZXIgJHtjaGFyYWN0ZXJ9ICgke2NoYXJDb2RlfSlgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShjaGFyQ29kZS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKSlcbiAgICAgICAgICAgIC5tYXAoKGhleCkgPT4gU3RyaW5nLmZyb21Db2RlUG9pbnQobWFwXzEuSEVYX0RJR0lUX01BUFtoZXhdKSlcbiAgICAgICAgICAgIC5qb2luKCcnKTtcbiAgICB9KVxuICAgICAgICAuam9pbignJyk7XG59XG5leHBvcnRzLnZlcmNlbFN0ZWdhRW5jb2RlID0gdmVyY2VsU3RlZ2FFbmNvZGU7XG5mdW5jdGlvbiBpc0RhdGUoc3RyaW5nKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4oRGF0ZS5wYXJzZShzdHJpbmcpKTtcbn1cbmZ1bmN0aW9uIGlzVXJsKHN0cmluZykge1xuICAgIHRyeSB7XG4gICAgICAgIG5ldyBVUkwoc3RyaW5nKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLyoqXG4gKiBBZGRzIGFuIGVuY29kZWQgSlNPTiBvYmplY3QgdG8gYSBzdHJpbmcgYXMgaGlkZGVuIGNoYXJhY3RlcnNcbiAqIEBwYXJhbSBzdHJpbmcgLSBUaGUgc3RyaW5nIHRoZSBKU09OIHdpbGwgYmUgYWRkZWQgdG9cbiAqIEBwYXJhbSBqc29uIC0gVGhlIEpTT04gdG8gYWRkIHRvIHRoZSBzdHJpbmdcbiAqIEBwYXJhbSBza2lwIC0gV2hldGhlciB0byBza2lwIGVuY29kaW5nIChkZWZhdWx0OiBcImF1dG9cIilcbiAqL1xuZnVuY3Rpb24gdmVyY2VsU3RlZ2FDb21iaW5lKHN0cmluZywganNvbiwgc2tpcCA9ICdhdXRvJykge1xuICAgIGlmIChza2lwID09PSB0cnVlKVxuICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgIGlmIChza2lwID09PSAnYXV0bycgJiYgKGlzRGF0ZShzdHJpbmcpIHx8IGlzVXJsKHN0cmluZykpKVxuICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgIHJldHVybiBgJHtzdHJpbmd9JHt2ZXJjZWxTdGVnYUVuY29kZShqc29uKX1gO1xufVxuZXhwb3J0cy52ZXJjZWxTdGVnYUNvbWJpbmUgPSB2ZXJjZWxTdGVnYUNvbWJpbmU7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ2ZXJjZWxTdGVnYUNvbWJpbmUiLCJ2ZXJjZWxTdGVnYUVuY29kZSIsIm1hcF8xIiwicmVxdWlyZSIsImpzb24iLCJzdHJpbmciLCJKU09OIiwic3RyaW5naWZ5IiwiQXJyYXkiLCJmcm9tIiwibWFwIiwiY2hhcmFjdGVyIiwiY2hhckNvZGUiLCJjaGFyQ29kZUF0IiwiRXJyb3IiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiaGV4IiwiU3RyaW5nIiwiZnJvbUNvZGVQb2ludCIsIkhFWF9ESUdJVF9NQVAiLCJqb2luIiwiaXNEYXRlIiwiQm9vbGVhbiIsIkRhdGUiLCJwYXJzZSIsImlzVXJsIiwiVVJMIiwic2tpcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/encode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./encode */ \"(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/encode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./decode */ \"(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/decode.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util */ \"(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/util.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmV2aWV3LWtpdC9ub2RlX21vZHVsZXMvQHZlcmNlbC9zdGVnYS9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMsd0dBQVUsR0FBR047QUFDbENELGFBQWFPLG1CQUFPQSxDQUFDLHdHQUFVLEdBQUdOO0FBQ2xDRCxhQUFhTyxtQkFBT0EsQ0FBQyxvR0FBUSxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3ByZXZpZXcta2l0L25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvY2pzL2luZGV4LmpzPzcwOGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9lbmNvZGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlY29kZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbFwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/map.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/map.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HEX_DIGIT_MAP = void 0;\nexports.HEX_DIGIT_MAP = {\n    0: 0x200b,\n    1: 0x200c,\n    2: 0x200d,\n    3: 0x2062,\n    4: 0x2063,\n    5: 0x2060,\n    6: 0xfeff,\n    7: 0x2061,\n    8: 0x1d173,\n    9: 0x1d174,\n    a: 0x1d175,\n    b: 0x1d176,\n    c: 0x1d177,\n    d: 0x1d178,\n    e: 0x1d179,\n    f: 0x1d17a\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmV2aWV3LWtpdC9ub2RlX21vZHVsZXMvQHZlcmNlbC9zdGVnYS9kaXN0L2Nqcy9tYXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFCQUFxQixHQUFHLEtBQUs7QUFDN0JBLHFCQUFxQixHQUFHO0lBQ3BCLEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUNILEdBQUc7SUFDSEcsR0FBRztJQUNIQyxHQUFHO0lBQ0hDLEdBQUc7SUFDSEMsR0FBRztJQUNIQyxHQUFHO0lBQ0hDLEdBQUc7QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3ByZXZpZXcta2l0L25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvY2pzL21hcC5qcz9hNGMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IRVhfRElHSVRfTUFQID0gdm9pZCAwO1xuZXhwb3J0cy5IRVhfRElHSVRfTUFQID0ge1xuICAgIDA6IDB4MjAwYixcbiAgICAxOiAweDIwMGMsXG4gICAgMjogMHgyMDBkLFxuICAgIDM6IDB4MjA2MixcbiAgICA0OiAweDIwNjMsXG4gICAgNTogMHgyMDYwLFxuICAgIDY6IDB4ZmVmZixcbiAgICA3OiAweDIwNjEsXG4gICAgODogMHgxZDE3MyxcbiAgICA5OiAweDFkMTc0LFxuICAgIGE6IDB4MWQxNzUsXG4gICAgYjogMHgxZDE3NixcbiAgICBjOiAweDFkMTc3LFxuICAgIGQ6IDB4MWQxNzgsXG4gICAgZTogMHgxZDE3OSxcbiAgICBmOiAweDFkMTdhLFxufTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkhFWF9ESUdJVF9NQVAiLCJhIiwiYiIsImMiLCJkIiwiZSIsImYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/map.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/util.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/util.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.vercelStegaSplit = void 0;\nconst decode_1 = __webpack_require__(/*! ./decode */ \"(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/decode.js\");\n/**\n * Splits out encoded data from a string, if any is found\n * @param original - The original string\n * @returns The cleaned string and encoded data, separately\n */ function vercelStegaSplit(original) {\n    var _a;\n    return {\n        cleaned: original.replace(decode_1.VERCEL_STEGA_REGEX, \"\"),\n        encoded: ((_a = original.match(decode_1.VERCEL_STEGA_REGEX)) === null || _a === void 0 ? void 0 : _a[0]) || \"\"\n    };\n}\nexports.vercelStegaSplit = vercelStegaSplit;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9wcmV2aWV3LWtpdC9ub2RlX21vZHVsZXMvQHZlcmNlbC9zdGVnYS9kaXN0L2Nqcy91dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx3QkFBd0IsR0FBRyxLQUFLO0FBQ2hDLE1BQU1HLFdBQVdDLG1CQUFPQSxDQUFDLHdHQUFVO0FBQ25DOzs7O0NBSUMsR0FDRCxTQUFTRixpQkFBaUJHLFFBQVE7SUFDOUIsSUFBSUM7SUFDSixPQUFPO1FBQ0hDLFNBQVNGLFNBQVNHLE9BQU8sQ0FBQ0wsU0FBU00sa0JBQWtCLEVBQUU7UUFDdkRDLFNBQVMsQ0FBQyxDQUFDSixLQUFLRCxTQUFTTSxLQUFLLENBQUNSLFNBQVNNLGtCQUFrQixPQUFPLFFBQVFILE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsRUFBRSxDQUFDLEVBQUUsS0FBSztJQUNoSDtBQUNKO0FBQ0FOLHdCQUF3QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L3ByZXZpZXcta2l0L25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvY2pzL3V0aWwuanM/ZmNlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmVyY2VsU3RlZ2FTcGxpdCA9IHZvaWQgMDtcbmNvbnN0IGRlY29kZV8xID0gcmVxdWlyZShcIi4vZGVjb2RlXCIpO1xuLyoqXG4gKiBTcGxpdHMgb3V0IGVuY29kZWQgZGF0YSBmcm9tIGEgc3RyaW5nLCBpZiBhbnkgaXMgZm91bmRcbiAqIEBwYXJhbSBvcmlnaW5hbCAtIFRoZSBvcmlnaW5hbCBzdHJpbmdcbiAqIEByZXR1cm5zIFRoZSBjbGVhbmVkIHN0cmluZyBhbmQgZW5jb2RlZCBkYXRhLCBzZXBhcmF0ZWx5XG4gKi9cbmZ1bmN0aW9uIHZlcmNlbFN0ZWdhU3BsaXQob3JpZ2luYWwpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2xlYW5lZDogb3JpZ2luYWwucmVwbGFjZShkZWNvZGVfMS5WRVJDRUxfU1RFR0FfUkVHRVgsICcnKSxcbiAgICAgICAgZW5jb2RlZDogKChfYSA9IG9yaWdpbmFsLm1hdGNoKGRlY29kZV8xLlZFUkNFTF9TVEVHQV9SRUdFWCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVswXSkgfHwgJycsXG4gICAgfTtcbn1cbmV4cG9ydHMudmVyY2VsU3RlZ2FTcGxpdCA9IHZlcmNlbFN0ZWdhU3BsaXQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ2ZXJjZWxTdGVnYVNwbGl0IiwiZGVjb2RlXzEiLCJyZXF1aXJlIiwib3JpZ2luYWwiLCJfYSIsImNsZWFuZWQiLCJyZXBsYWNlIiwiVkVSQ0VMX1NURUdBX1JFR0VYIiwiZW5jb2RlZCIsIm1hdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/icons/dist/index.cjs":
/*!***************************************************!*\
  !*** ./node_modules/@sanity/icons/dist/index.cjs ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst AccessDeniedIcon = react.forwardRef(function AccessDeniedIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"access-denied\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.1568 6.84315C21.281 9.96734 21.281 15.0327 18.1568 18.1569C15.0326 21.281 9.96733 21.281 6.84313 18.1569C3.71894 15.0327 3.71894 9.96734 6.84313 6.84315C9.96733 3.71895 15.0326 3.71895 18.1568 6.84315ZM18.1568 6.84315L6.844 18.156\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ActivityIcon = react.forwardRef(function ActivityIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"activity\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M21 15H19L15.5 7L11 18L8 12L6 15H4\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst AddCircleIcon = react.forwardRef(function AddCircleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"add-circle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 12.4H17M12.5 8V17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst AddCommentIcon = react.forwardRef(function AddCommentIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"add-comment\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5H9.5V20.5L13.5 16.5H16.5C17.6046 16.5 18.5 15.6046 18.5 14.5V12M15 6.5H22M18.5 10V3\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst AddIcon = react.forwardRef(function AddIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"add\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 5V20M5 12.5H20\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ApiIcon = react.forwardRef(function ApiIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"api\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.93047 13.2107L6.66782 10.3728H6.73089L7.45854 13.2107H5.93047ZM8.17164 16H9.66089L7.56041 9H5.93047L3.82999 16H5.20767L5.65396 14.2876H7.73505L8.17164 16Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5389 9V16H11.9166V13.7782H13.0323C14.541 13.7782 15.5015 12.8517 15.5015 11.3964C15.5015 9.92654 14.5701 9 13.1003 9H10.5389ZM11.9166 10.1303H12.751C13.6533 10.1303 14.1044 10.5475 14.1044 11.3867C14.1044 12.2308 13.6533 12.6431 12.751 12.6431H11.9166V10.1303Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M21.1675 16V14.8164H19.717V10.1836H21.1675V9H16.8889V10.1836H18.3393V14.8164H16.8889V16H21.1675Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst ArchiveIcon = react.forwardRef(function ArchiveIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"archive\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 10.5V17M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.5 7.5H20.5M16 14L12.5 17.5L9 14\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst ArrowDownIcon = react.forwardRef(function ArrowDownIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"arrow-down\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 19.5V5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18 14L12.5 19.5L7 14\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst ArrowLeftIcon = react.forwardRef(function ArrowLeftIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"arrow-left\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 12.5H20\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 18L5.5 12.5L11 7\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst ArrowRightIcon = react.forwardRef(function ArrowRightIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"arrow-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19.5 12.5H5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 7L19.5 12.5L14 18\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst ArrowTopRightIcon = react.forwardRef(function ArrowTopRightIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"arrow-top-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.5 8.5L7 18\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9 8.5H16.5V16\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst ArrowUpIcon = react.forwardRef(function ArrowUpIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"arrow-up\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 11L12.5 5.5L18 11\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 5.5V20\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst BarChartIcon = react.forwardRef(function BarChartIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"bar-chart\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 5V19.5H20M8.5 18V13M11.5 18V9M14.5 18V11M17.5 18V7\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BasketIcon = react.forwardRef(function BasketIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"basket\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8.5 10.5H5L6.5 19.5H18.5L20 10.5H16.5M8.5 10.5L10.2721 5.18377C10.4082 4.77543 10.7903 4.5 11.2208 4.5H13.7792C14.2097 4.5 14.5918 4.77543 14.7279 5.18377L16.5 10.5M8.5 10.5H16.5M8.5 10.5L9.5 19.5M16.5 10.5L15.5 19.5M12.5 10.5V19.5M19.5 13.5H5.5M19 16.5H6\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BellIcon = react.forwardRef(function BellIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"bell\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 17.5V18.5C10.5 20 11.5 20.5 12.5 20.5C13.5 20.5 14.5 20 14.5 18.5V17.5M5.5 17.5C6.5 16 6.5 15 6.5 12C6.5 8 8.5 5.5 12.5 5.5C16.5 5.5 18.5 8 18.5 12C18.5 15 18.5 16 19.5 17.5H5.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BillIcon = react.forwardRef(function BillIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"bill\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6.50001 5.5C8.50003 5.5 8.50003 8 8.50003 8V9.5M6.50001 5.5C4.5 5.5 4.5 8 4.5 8L4.50001 9.5H8.50003M6.50001 5.5C6.50001 5.5 15.8333 5.5 17.6667 5.5C19.5 5.5 19.5 8.5 19.5 8.5V20L17.6667 19L15.8333 20L14 19L12.1667 20L10.3334 19L8.50003 20V9.5M11 12.5H15M11 9.5H16M11 15.5H16\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BinaryDocumentIcon = react.forwardRef(function BinaryDocumentIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"binary-document\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 12.5V17.5M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM12.5 12.5V17.5H15.5V12.5H12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst BlockContentIcon = react.forwardRef(function BlockContentIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"block-content\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M21 7.60002L11 7.60003V6.40003L21 6.40002V7.60002Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M21 11.2667L12.4833 11.2667V10.0667L21 10.0667V11.2667Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M21 14.9334H13.9254V13.7334L21 13.7334V14.9334Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M21 18.6002H4V17.4002H21V18.6002Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.86438 15.6H11.2L8.27623 7.60003H6.92377L4 15.6H5.29072L6.0371 13.4767H9.12362L9.86438 15.6ZM7.53546 9.05255H7.63086L8.80374 12.4344H6.35698L7.53546 9.05255Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst BlockElementIcon = react.forwardRef(function BlockElementIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"block-element\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5 19.5H20M5 5.5H20M6.5 8.5H18.5V16.5H6.5V8.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BlockquoteIcon = react.forwardRef(function BlockquoteIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"blockquote\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10 17.5H19M6 7.5H19M10 12.5H17M6.5 12V18\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BoldIcon = react.forwardRef(function BoldIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"bold\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13.2087 18C15.5322 18 16.9731 16.793 16.9731 14.8844C16.9731 13.4812 15.9245 12.3949 14.4836 12.2892V12.1534C15.6001 11.9875 16.4526 10.9841 16.4526 9.82991C16.4526 8.14761 15.1927 7.11409 13.0804 7.11409H8.32019V18H13.2087ZM10.5985 8.85674H12.4995C13.5859 8.85674 14.212 9.37727 14.212 10.2448C14.212 11.1199 13.5406 11.6254 12.3109 11.6254H10.5985V8.85674ZM10.5985 16.2574V13.1643H12.575C13.9178 13.1643 14.6496 13.6924 14.6496 14.6882C14.6496 15.7066 13.9404 16.2574 12.6278 16.2574H10.5985Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst BoltIcon = react.forwardRef(function BoltIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"bolt\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18 11.5L9 21L11 13.5H7L16 4L14 11.5H18Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BookIcon = react.forwardRef(function BookIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"book\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M20.5 17.5V5.5L12.5 6.5M20.5 17.5L12.5 18.5M20.5 17.5V18.5M4.5 17.5V5.5L12.5 6.5M4.5 17.5L12.5 18.5M4.5 17.5V18.5M12.5 18.5L4.5 19.5V18.5M12.5 18.5L20.5 19.5V18.5M12.5 18.5V6.5M12.5 18.5H4.5M12.5 18.5H20.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BottleIcon = react.forwardRef(function BottleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"bottle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 17.5L17.5 17.5M17.5 13C17.5 12.087 17.5 11.3518 17.5 11C17.5 8.5 14.5 9 14.5 7.37494L14.5 5.5M17.5 13C17.5 15.1229 17.5 18.7543 17.5 20.5022C17.5 21.0545 17.0523 21.5 16.5 21.5L8.5 21.5C7.94772 21.5 7.5 21.0547 7.5 20.5024C7.5 18.8157 7.5 15.3546 7.5 13M17.5 13L7.5 13M7.5 13C7.5 12.2538 7.5 11.5648 7.5 11C7.5 8.5 10.5 9 10.5 7.37494L10.5 5.5M10.5 5.5L10.5 3.99999C10.5 3.72385 10.7239 3.49999 11 3.49999L14 3.49999C14.2761 3.49999 14.5 3.72385 14.5 3.99999L14.5 5.5M10.5 5.5L14.5 5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst BulbFilledIcon = react.forwardRef(function BulbFilledIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"bulb-filled\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H14V20.5C14 21.0523 13.5523 21.5 13 21.5H12C11.4477 21.5 11 21.0523 11 20.5V19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10C18 11.94 17.3978 12.9767 16.4272 14.3368Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.4272 14.3368L15.9388 13.9883L16.4272 14.3368ZM14 19.5V18.9H13.4V19.5H14ZM11 19.5H11.6V18.9H11V19.5ZM8.57284 14.3368L9.06122 13.9883H9.06122L8.57284 14.3368ZM16.1 17.212C16.1 16.3069 16.3868 15.4261 16.9155 14.6853L15.9388 13.9883C15.2678 14.9284 14.9 16.0519 14.9 17.212H16.1ZM16.1 18.5V17.212H14.9V18.5H16.1ZM14.5 20.1C15.3837 20.1 16.1 19.3837 16.1 18.5H14.9C14.9 18.7209 14.7209 18.9 14.5 18.9V20.1ZM14 20.1H14.5V18.9H14V20.1ZM13.4 19.5V20.5H14.6V19.5H13.4ZM13.4 20.5C13.4 20.7209 13.2209 20.9 13 20.9V22.1C13.8837 22.1 14.6 21.3837 14.6 20.5H13.4ZM13 20.9H12V22.1H13V20.9ZM12 20.9C11.7791 20.9 11.6 20.7209 11.6 20.5H10.4C10.4 21.3837 11.1163 22.1 12 22.1V20.9ZM11.6 20.5V19.5H10.4V20.5H11.6ZM10.5 20.1H11V18.9H10.5V20.1ZM8.9 18.5C8.9 19.3837 9.61634 20.1 10.5 20.1V18.9C10.2791 18.9 10.1 18.7209 10.1 18.5H8.9ZM8.9 17.212V18.5H10.1V17.212H8.9ZM8.08446 14.6853C8.61315 15.4261 8.9 16.3069 8.9 17.212H10.1C10.1 16.0519 9.73217 14.9284 9.06122 13.9883L8.08446 14.6853ZM6.4 10C6.4 11.0377 6.56208 11.8595 6.86624 12.611C7.16624 13.3521 7.59495 13.9995 8.08446 14.6853L9.06122 13.9883C8.58004 13.314 8.22233 12.7629 7.97858 12.1607C7.739 11.5688 7.6 10.9023 7.6 10H6.4ZM12.5 3.9C9.16863 3.9 6.4 6.66863 6.4 10H7.6C7.6 7.33137 9.83137 5.1 12.5 5.1V3.9ZM18.6 10C18.6 6.66863 15.8314 3.9 12.5 3.9V5.1C15.1686 5.1 17.4 7.33137 17.4 10H18.6ZM16.9155 14.6853C17.4051 13.9995 17.8338 13.3521 18.1338 12.611C18.4379 11.8595 18.6 11.0377 18.6 10H17.4C17.4 10.9023 17.261 11.5688 17.0214 12.1607C16.7777 12.7629 16.42 13.314 15.9388 13.9883L16.9155 14.6853Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst BulbOutlineIcon = react.forwardRef(function BulbOutlineIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"bulb-outline\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 16.5H15.5M11 20V20.5C11 21.0523 11.4477 21.5 12 21.5H13C13.5523 21.5 14 21.0523 14 20.5V20M18 10C18 11.94 17.3978 12.9767 16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    })\n  });\n});\nconst CalendarIcon = react.forwardRef(function CalendarIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"calendar\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.5 10.5V19.5H20.5V10.5M4.5 10.5V5.5H20.5V10.5M4.5 10.5H12.5H20.5M20.5 13.5H16.5M16.5 13.5H12.5M16.5 13.5V10.5M16.5 13.5V16.5M12.5 13.5H8.5M12.5 13.5V16.5M12.5 13.5V10.5M8.5 13.5H4.5M8.5 13.5V10.5M8.5 13.5V16.5M20.5 16.5H16.5M16.5 16.5H12.5M16.5 16.5V19.5M12.5 16.5H8.5M12.5 16.5V19.5M8.5 16.5H4.5M8.5 16.5V19.5M17.5 8V3M7.5 8V3\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CaseIcon = react.forwardRef(function CaseIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"case\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9 8.5122V6C9 5.44772 9.44772 5 10 5H15C15.5523 5 16 5.44772 16 6V8.5122M4.5 12V18.5C4.5 19.0523 4.94772 19.5 5.5 19.5H19.5C20.0523 19.5 20.5 19.0523 20.5 18.5V12M4.5 12V9.5122C4.5 8.95991 4.94772 8.5122 5.5 8.5122H19.5C20.0523 8.5122 20.5 8.95991 20.5 9.5122V12M4.5 12L11.7978 14.7367C12.2505 14.9064 12.7495 14.9064 13.2022 14.7367L20.5 12\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ChartUpwardIcon = react.forwardRef(function ChartUpwardIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"chart-upward\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 5V19.5H20M7.5 16L11.5 11.5L15.5 14L19.5 8.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CheckmarkCircleIcon = react.forwardRef(function CheckmarkCircleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"checkmark-circle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 12.1316L11.7414 14.5L16 10M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CheckmarkIcon = react.forwardRef(function CheckmarkIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"checkmark\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 11.5L10.5 16.5L19.5 7.60001\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ChevronDownIcon = react.forwardRef(function ChevronDownIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"chevron-down\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17 10.5L12.5 15L8 10.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ChevronLeftIcon = react.forwardRef(function ChevronLeftIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"chevron-left\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14.5 17L10 12.5L14.5 8\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ChevronRightIcon = react.forwardRef(function ChevronRightIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"chevron-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 8L15 12.5L10.5 17\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ChevronUpIcon = react.forwardRef(function ChevronUpIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"chevron-up\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 14.5L12.5 10L17 14.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CircleIcon = react.forwardRef(function CircleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"circle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"circle\", {\n      cx: 12.5,\n      cy: 12.5,\n      r: 8,\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ClipboardIcon = react.forwardRef(function ClipboardIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"clipboard\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 5.5H6.5V19.5H18.5V5.5H17M12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ClipboardImageIcon = react.forwardRef(function ClipboardImageIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"clipboard-image\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 5.5H6.5V19.5H10.5M17 5.5H18.5V11.5M10.5 18.5L12.73 15.8983C13.1327 15.4285 13.8613 15.4335 14.2575 15.909L15.299 17.1588C15.6754 17.6105 16.3585 17.6415 16.7743 17.2257L16.9903 17.0097C17.2947 16.7053 17.7597 16.6298 18.1447 16.8223L20.5 18M10.5 11.5H20.5V21.5H10.5V11.5ZM12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ClockIcon = react.forwardRef(function ClockIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"clock\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 8V12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CloseCircleIcon = react.forwardRef(function CloseCircleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"close-circle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 15.5L12.5 12.5M12.5 12.5L15.5 9.5M12.5 12.5L9.5 9.5M12.5 12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CloseIcon = react.forwardRef(function CloseIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"close\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18 7L7 18M7 7L18 18\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CodeBlockIcon = react.forwardRef(function CodeBlockIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"code-block\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 15L8.5 12.5L11 10M14 10L16.5 12.5L14 15M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CodeIcon = react.forwardRef(function CodeIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"code\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 16L7.5 12.5L11 9M14 9L17.5 12.5L14 16\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CogIcon = react.forwardRef(function CogIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"cog\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14.2624 5.40607L13.8714 4.42848C13.6471 3.86771 13.104 3.5 12.5 3.5C11.896 3.5 11.3529 3.86771 11.1286 4.42848L10.7376 5.40607C10.5857 5.78585 10.2869 6.08826 9.90901 6.2448C9.53111 6.40133 9.10603 6.39874 8.73006 6.23761L7.76229 5.82285C7.20716 5.58494 6.56311 5.70897 6.13604 6.13604C5.70897 6.56311 5.58494 7.20716 5.82285 7.76229L6.23761 8.73006C6.39874 9.10602 6.40133 9.53111 6.2448 9.90901C6.08826 10.2869 5.78585 10.5857 5.40607 10.7376L4.42848 11.1286C3.86771 11.3529 3.5 11.896 3.5 12.5C3.5 13.104 3.86771 13.6471 4.42848 13.8714L5.40607 14.2624C5.78585 14.4143 6.08826 14.7131 6.2448 15.091C6.40133 15.4689 6.39874 15.894 6.23761 16.2699L5.82285 17.2377C5.58494 17.7928 5.70897 18.4369 6.13604 18.864C6.56311 19.291 7.20716 19.4151 7.76229 19.1772L8.73006 18.7624C9.10603 18.6013 9.53111 18.5987 9.90901 18.7552C10.2869 18.9117 10.5857 19.2141 10.7376 19.5939L11.1286 20.5715C11.3529 21.1323 11.896 21.5 12.5 21.5C13.104 21.5 13.6471 21.1323 13.8714 20.5715L14.2624 19.5939C14.4143 19.2141 14.7131 18.9117 15.091 18.7552C15.4689 18.5987 15.894 18.6013 16.2699 18.7624L17.2377 19.1771C17.7928 19.4151 18.4369 19.291 18.864 18.864C19.291 18.4369 19.4151 17.7928 19.1771 17.2377L18.7624 16.2699C18.6013 15.894 18.5987 15.4689 18.7552 15.091C18.9117 14.7131 19.2141 14.4143 19.5939 14.2624L20.5715 13.8714C21.1323 13.6471 21.5 13.104 21.5 12.5C21.5 11.896 21.1323 11.3529 20.5715 11.1286L19.5939 10.7376C19.2141 10.5857 18.9117 10.2869 18.7552 9.90901C18.5987 9.53111 18.6013 9.10602 18.7624 8.73006L19.1772 7.76229C19.4151 7.20716 19.291 6.56311 18.864 6.13604C18.4369 5.70897 17.7928 5.58494 17.2377 5.82285L16.2699 6.23761C15.894 6.39874 15.4689 6.40133 15.091 6.2448C14.7131 6.08826 14.4143 5.78585 14.2624 5.40607Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.5 12.5C16.5 14.7091 14.7091 16.5 12.5 16.5C10.2909 16.5 8.5 14.7091 8.5 12.5C8.5 10.2909 10.2909 8.5 12.5 8.5C14.7091 8.5 16.5 10.2909 16.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst CollapseIcon = react.forwardRef(function CollapseIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"collapse\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6 14.5L10.5 14.5V19M19 10.5H14.5L14.5 6\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 14.5L6 19M14.5 10.5L19 6\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst ColorWheelIcon = react.forwardRef(function ColorWheelIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"color-wheel\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.43853 5.10896L11.1606 9.26642M13.8394 15.7336L15.5615 19.891M15.7336 11.1606L19.891 9.43853M9.26642 13.8394L5.10896 15.5615M5.3139 9.52342L9.23359 11.147M15.7664 13.853L19.6861 15.4766M13.853 9.23359L15.4766 5.3139M9.52342 19.6861L11.147 15.7664M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5ZM16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CommentIcon = react.forwardRef(function CommentIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"comment\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 16.5H9.5V20.5L13.5 16.5H17.5C18.6046 16.5 19.5 15.6046 19.5 14.5V8.5C19.5 7.39543 18.6046 6.5 17.5 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ComponentIcon = react.forwardRef(function ComponentIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"component\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8.5 8.5L12.5 12.5M12.5 12.5L16.5 16.5M12.5 12.5L16.5 8.5M12.5 12.5L8.5 16.5M12.5 4L21 12.5L12.5 21L4 12.5L12.5 4Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ComposeIcon = react.forwardRef(function ComposeIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"compose\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17 6L19 8M14 5.5H5.5V19.5H19.5V11M9 16L9.5 13.5L19 4L21 6L11.5 15.5L9 16Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ControlsIcon = react.forwardRef(function ControlsIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"controls\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6.5 5V7.5M6.5 7.5C5.39543 7.5 4.5 8.39543 4.5 9.5C4.5 10.6046 5.39543 11.5 6.5 11.5M6.5 7.5C7.60457 7.5 8.5 8.39543 8.5 9.5C8.5 10.6046 7.60457 11.5 6.5 11.5M6.5 11.5V20M12.5 5V13.5M12.5 13.5C11.3954 13.5 10.5 14.3954 10.5 15.5C10.5 16.6046 11.3954 17.5 12.5 17.5M12.5 13.5C13.6046 13.5 14.5 14.3954 14.5 15.5C14.5 16.6046 13.6046 17.5 12.5 17.5M12.5 17.5V20M18.5 5V7.5M18.5 7.5C17.3954 7.5 16.5 8.39543 16.5 9.5C16.5 10.6046 17.3954 11.5 18.5 11.5M18.5 7.5C19.6046 7.5 20.5 8.39543 20.5 9.5C20.5 10.6046 19.6046 11.5 18.5 11.5M18.5 11.5V20\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CopyIcon = react.forwardRef(function CopyIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"copy\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8.5 8.5H5.5V20.5H16.5V16.5M19.5 4.5H8.5V16.5H19.5V4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CreditCardIcon = react.forwardRef(function CreditCardIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"credit-card\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M20.5 9.5H4.5V11.5H20.5V9.5Z\",\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 15.5H14M5.5 18.5H19.5C20.0523 18.5 20.5 18.0523 20.5 17.5V7.5C20.5 6.94772 20.0523 6.5 19.5 6.5H5.5C4.94772 6.5 4.5 6.94772 4.5 7.5V17.5C4.5 18.0523 4.94772 18.5 5.5 18.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst CropIcon = react.forwardRef(function CropIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"crop\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 5V15.5H20M5 9.5H15.5V20\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst CubeIcon = react.forwardRef(function CubeIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"cube\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 22V13M12.5 13L4.5 8M12.5 13L20.5 8\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DashboardIcon = react.forwardRef(function DashboardIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"dashboard\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14.5 19.5V12.5M10.5 12.5V5.5M5.5 12.5H19.5M5.5 19.5H19.5V5.5H5.5V19.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst DatabaseIcon = react.forwardRef(function DatabaseIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"database\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.5 7V17.5C18.5 19.0594 16.0504 20.5 12.5 20.5C8.9496 20.5 6.5 19.0594 6.5 17.5V7M18.5 7C18.5 8.45543 15.8137 9.5 12.5 9.5C9.18629 9.5 6.5 8.45543 6.5 7C6.5 5.54457 9.18629 4.5 12.5 4.5C15.8137 4.5 18.5 5.54457 18.5 7Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst DesktopIcon = react.forwardRef(function DesktopIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"desktop\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.5 13.5V15.5C4.5 16.0523 4.94772 16.5 5.5 16.5H12.5M4.5 13.5V6.5C4.5 5.94772 4.94772 5.5 5.5 5.5H19.5C20.0523 5.5 20.5 5.94772 20.5 6.5V13.5M4.5 13.5H20.5M20.5 13.5V15.5C20.5 16.0523 20.0523 16.5 19.5 16.5H12.5M12.5 16.5V19.5M12.5 19.5H8M12.5 19.5H17\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst DocumentIcon = react.forwardRef(function DocumentIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5H18.5V20.5H6.5L6.5 9.5M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentPdfIcon = react.forwardRef(function DocumentPdfIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document-pdf\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.7127 13.8012L12.7193 13.77C12.8488 13.2366 13.0117 12.5716 12.8845 11.969C12.7997 11.4937 12.4493 11.3084 12.1503 11.295C11.7977 11.2794 11.483 11.4803 11.4049 11.7726C11.2576 12.3082 11.3893 13.0402 11.6303 13.973C11.3268 14.6961 10.8425 15.7472 10.4877 16.3721C9.8271 16.7135 8.94113 17.2402 8.80946 17.9053C8.78268 18.028 8.81392 18.1842 8.88757 18.3248C8.97014 18.481 9.10181 18.6015 9.25579 18.6596C9.32274 18.6841 9.40308 18.7042 9.49681 18.7042C9.88959 18.7042 10.5256 18.3873 11.3736 16.9322C11.5031 16.8898 11.637 16.8452 11.7664 16.8006C12.3734 16.5953 13.0028 16.381 13.5718 16.2851C14.2012 16.622 14.9175 16.8385 15.404 16.8385C15.8861 16.8385 16.0758 16.5529 16.1472 16.381C16.2722 16.0797 16.2119 15.7004 16.0088 15.4973C15.7143 15.2072 14.9979 15.1313 13.882 15.2696C13.3331 14.9349 12.9738 14.4796 12.7127 13.8012ZM10.2645 17.1911C9.95431 17.6419 9.71998 17.8673 9.59278 17.9655C9.7423 17.691 10.0346 17.4009 10.2645 17.1911ZM12.2195 11.9355C12.3355 12.1341 12.3199 12.7345 12.2306 13.038C12.1213 12.5939 12.1056 11.9645 12.1704 11.8909L12.2195 11.9355ZM12.1837 14.6247C12.4225 15.0376 12.7238 15.3924 13.0563 15.6557C12.5743 15.7651 12.1346 15.9458 11.7419 16.1065C11.6481 16.1445 11.5566 16.1824 11.4674 16.2181C11.7642 15.6803 12.0119 15.071 12.1837 14.6247ZM15.6562 16.0864L15.6428 16.1065C15.6428 16.1065 15.4375 16.2315 14.6497 15.9213C15.5558 15.8789 15.6562 16.0864 15.6562 16.0864Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentRemoveIcon = react.forwardRef(function DocumentRemoveIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document-remove\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6.5 14V20.5H18.5V14M6.5 11V9.5L11.5 4.5H18.5V11M3 12.5H22\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentSheetIcon = react.forwardRef(function DocumentSheetIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document-sheet\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.4 19V16.4M10.4 16.4L10.4 13.4M10.4 16.4H8M10.4 16.4H14.4M10.4 13.4V11M10.4 13.4H8M10.4 13.4H14.4M14.4 19V16.4M14.4 16.4V13.4M14.4 16.4H17M14.4 13.4V11M14.4 13.4H17M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentTextIcon = react.forwardRef(function DocumentTextIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document-text\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16 13H9M14 16H9M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentVideoIcon = react.forwardRef(function DocumentVideoIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document-video\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 16.5V13.5L14 15L11.5 16.5Z\",\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentWordIcon = react.forwardRef(function DocumentWordIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document-word\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.4699 13.4588H12.5263L13.6328 17H14.5435L16 12H14.9952L14.0656 15.7214H14.0129L12.929 12H12.0672L10.9984 15.7214H10.9419L10.0124 12H9L10.4565 17H11.371L12.4699 13.4588Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentZipIcon = react.forwardRef(function DocumentZipIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"document-zip\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 4.5V9.5H6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15 4.5L13.5 5L15.5 6L13.5 7L15.5 8L13.5 9L15.5 10L13.5 11L14.5 11.5V13M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM13.5 13H15.5L16 17H13L13.5 13Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DocumentsIcon = react.forwardRef(function DocumentsIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"documents\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 4.5V9.5H5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.5 7.5H19.5V21.5H8.5V18.5M10.5 4.5H16.5V18.5H5.5V9.5L10.5 4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DotIcon = react.forwardRef(function DotIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"dot\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"circle\", {\n      cx: 12.5,\n      cy: 12.5,\n      r: 2.5,\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    })\n  });\n});\nconst DoubleChevronDownIcon = react.forwardRef(function DoubleChevronDownIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"double-chevron-down\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17 8L12.5 12.5L8 8M17 13L12.5 17.5L8 13\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst DoubleChevronLeftIcon = react.forwardRef(function DoubleChevronLeftIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"double-chevron-left\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12 17L7.5 12.5L12 8M17 17L12.5 12.5L17 8\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst DoubleChevronRightIcon = react.forwardRef(function DoubleChevronRightIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"double-chevron-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13 8L17.5 12.5L13 17M8 8L12.5 12.5L8 17\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst DoubleChevronUpIcon = react.forwardRef(function DoubleChevronUpIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"double-chevron-up\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 12L12.5 7.5L17 12M8 17L12.5 12.5L17 17\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst DownloadIcon = react.forwardRef(function DownloadIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"download\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19.5 17V19.5H5.5V17M12.5 16L12.5 5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17.5 11L12.5 16L7.5 11\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst DragHandleIcon = react.forwardRef(function DragHandleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"drag-handle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 8C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5C8.67157 5 8 5.67157 8 6.5C8 7.32843 8.67157 8 9.5 8Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 14C10.3284 14 11 13.3284 11 12.5C11 11.6716 10.3284 11 9.5 11C8.67157 11 8 11.6716 8 12.5C8 13.3284 8.67157 14 9.5 14Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 18.5C11 19.3284 10.3284 20 9.5 20C8.67157 20 8 19.3284 8 18.5C8 17.6716 8.67157 17 9.5 17C10.3284 17 11 17.6716 11 18.5Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15.5 8C16.3284 8 17 7.32843 17 6.5C17 5.67157 16.3284 5 15.5 5C14.6716 5 14 5.67157 14 6.5C14 7.32843 14.6716 8 15.5 8Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17 12.5C17 13.3284 16.3284 14 15.5 14C14.6716 14 14 13.3284 14 12.5C14 11.6716 14.6716 11 15.5 11C16.3284 11 17 11.6716 17 12.5Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15.5 20C16.3284 20 17 19.3284 17 18.5C17 17.6716 16.3284 17 15.5 17C14.6716 17 14 17.6716 14 18.5C14 19.3284 14.6716 20 15.5 20Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst DropIcon = react.forwardRef(function DropIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"drop\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.5 14.5C18.5 18 16 20.5 12.5 20.5C9 20.5 6.5 18 6.5 14.5C6.5 11 9.5 7.50001 12.5 4.5C15.5 7.5 18.5 11 18.5 14.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst EarthAmericasIcon = react.forwardRef(function EarthAmericasIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"earth-americas\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 13L5.5 9L10 5H15V10L14 9H11L9.5 11L10.5 12H12V13L13 14.5H15.5L18.5 17L15.5 19.5L10.5 20V17L12.5 15L9 13L7 10.5V13Z\",\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"circle\", {\n      cx: 12.5,\n      cy: 12.5,\n      r: 8,\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst EarthGlobeIcon = react.forwardRef(function EarthGlobeIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"earth-globe\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 16.5H19.5M5.5 8.5H19.5M4.5 12.5H20.5M12.5 20.5C12.5 20.5 8 18.5 8 12.5C8 6.5 12.5 4.5 12.5 4.5M12.5 4.5C12.5 4.5 17 6.5 17 12.5C17 18.5 12.5 20.5 12.5 20.5M12.5 4.5V20.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst EditIcon = react.forwardRef(function EditIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"edit\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst EllipsisHorizontalIcon = react.forwardRef(function EllipsisHorizontalIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"ellipsis-horizontal\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6.5 11C7.32843 11 8 11.6716 8 12.5C8 13.3284 7.32843 14 6.5 14C5.67157 14 5 13.3284 5 12.5C5 11.6716 5.67157 11 6.5 11Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 11C13.3284 11 14 11.6716 14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.5 11C19.3284 11 20 11.6716 20 12.5C20 13.3284 19.3284 14 18.5 14C17.6716 14 17 13.3284 17 12.5C17 11.6716 17.6716 11 18.5 11Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst EllipsisVerticalIcon = react.forwardRef(function EllipsisVerticalIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"ellipsis-vertical\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 6.5C14 7.32843 13.3284 8 12.5 8C11.6716 8 11 7.32843 11 6.5C11 5.67157 11.6716 5 12.5 5C13.3284 5 14 5.67157 14 6.5Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11C13.3284 11 14 11.6716 14 12.5Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 18.5C14 19.3284 13.3284 20 12.5 20C11.6716 20 11 19.3284 11 18.5C11 17.6716 11.6716 17 12.5 17C13.3284 17 14 17.6716 14 18.5Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst EnterIcon = react.forwardRef(function EnterIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"enter\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6 14.5H19.5V7\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10 18.5L6 14.5L10 10.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst EnterRightIcon = react.forwardRef(function EnterRightIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"enter-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19 14.5H5.5V7\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15 18.5L19 14.5L15 10.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst EnvelopeIcon = react.forwardRef(function EnvelopeIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"envelope\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M20.5 18.5H4.5V6.5H20.5V18.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M20.5 18.5L17.75 15.5L15 12.5M4.5 18.5L10 12.5M20.5 6.5L12.5 15L4.5 6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst EqualIcon = react.forwardRef(function EqualIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"equal\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 4.5H3.5V20.5H7.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17.5 20.5L21.5 20.5L21.5 4.5L17.5 4.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9 10.5H16\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9 14.5H16\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    })]\n  });\n});\nconst ErrorFilledIcon = react.forwardRef(function ErrorFilledIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"error-filled\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5ZM13 14.5V16H12V14.5H13ZM12 9V13H13V9H12Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst ErrorOutlineIcon = react.forwardRef(function ErrorOutlineIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"error-outline\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 16V14.5M12.5 9V13M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ExpandIcon = react.forwardRef(function ExpandIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"expand\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 6.5H18.5V11M11 18.5H6.5V14\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.5 6.5L14 11M6.5 18.5L11 14\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst EyeClosedIcon = react.forwardRef(function EyeClosedIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"eye-closed\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 15.5L5.5 17.5M20.5 12.5C19.8612 13.5647 19.041 14.6294 18.0008 15.501M18.0008 15.501C16.5985 16.676 14.7965 17.5 12.5 17.5M18.0008 15.501L18 15.5M18.0008 15.501L19.5 17.5M12.5 17.5C8.5 17.5 6 15 4.5 12.5M12.5 17.5V20M15.5 17L16.5 19.5M9.5 17L8.5 19.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst EyeOpenIcon = react.forwardRef(function EyeOpenIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"eye-open\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M9.39999 12.5C9.39999 10.7879 10.7879 9.39999 12.5 9.39999C14.2121 9.39999 15.6 10.7879 15.6 12.5C15.6 14.2121 14.2121 15.6 12.5 15.6C10.7879 15.6 9.39999 14.2121 9.39999 12.5Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 7.5C8.5 7.5 6 10 4.5 12.5C6 15 8.5 17.5 12.5 17.5C16.5 17.5 19 15 20.5 12.5C19 10 16.5 7.5 12.5 7.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst FilterIcon = react.forwardRef(function FilterIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"filter\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 12L6 7V6L19 6L19 7L14 12V17L11 19V12Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst FolderIcon = react.forwardRef(function FolderIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"folder\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 8.5H19.5V18.5H5.5V5.5H10.5L11.5 8.5ZM11.5 8.5H5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst GenerateIcon = react.forwardRef(function GenerateIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"generate\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9 5.30423C6.33576 6.60253 4.5 9.33688 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5V14.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16 11L12.5 14.5L9 11\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst GroqIcon = react.forwardRef(function GroqIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"groq\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13 13H21L13 21L13 13Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12 12V4L4 12H12Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12 13H4L12 21V13Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst HeartFilledIcon = react.forwardRef(function HeartFilledIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"heart-filled\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst HeartIcon = react.forwardRef(function HeartIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"heart\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst HelpCircleIcon = react.forwardRef(function HelpCircleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"help-circle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst HomeIcon = react.forwardRef(function HomeIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"home\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6.5 8.75V18.5H18.5V8.75M4.5 10L12.5 5L20.5 10M14.5 18.5V11.5H10.5V18.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst IceCreamIcon = react.forwardRef(function IceCreamIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"ice-cream\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 13.5L12.5 20.5L15.5 13.5M12.5 8.26389C11.9692 7.78885 11.2684 7.5 10.5 7.5C8.84315 7.5 7.5 8.84315 7.5 10.5C7.5 12.1569 8.84315 13.5 10.5 13.5C11.2684 13.5 11.9692 13.2111 12.5 12.7361M9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5M17.5 10.5C17.5 12.1569 16.1569 13.5 14.5 13.5C12.8431 13.5 11.5 12.1569 11.5 10.5C11.5 8.84315 12.8431 7.5 14.5 7.5C16.1569 7.5 17.5 8.84315 17.5 10.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ImageIcon = react.forwardRef(function ImageIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"image\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 15.5L8.79289 12.2071C9.18342 11.8166 9.81658 11.8166 10.2071 12.2071L12.8867 14.8867C13.2386 15.2386 13.7957 15.2782 14.1938 14.9796L15.1192 14.2856C15.3601 14.1049 15.6696 14.0424 15.9618 14.1154L19.5 15M5.5 6.5H19.5V18.5H5.5V6.5ZM15.5 10.5C15.5 11.0523 15.0523 11.5 14.5 11.5C13.9477 11.5 13.5 11.0523 13.5 10.5C13.5 9.94772 13.9477 9.5 14.5 9.5C15.0523 9.5 15.5 9.94772 15.5 10.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ImageRemoveIcon = react.forwardRef(function ImageRemoveIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"image-remove\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 11V6.5H19.5V11M5.5 14V18.5H19.5V14M3 12.5H22\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ImagesIcon = react.forwardRef(function ImagesIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"images\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.5 7.5H20.5V19.5H6.5V17.5M4.5 14.5L7.79289 11.2071C8.18342 10.8166 8.81658 10.8166 9.20711 11.2071L11.8867 13.8867C12.2386 14.2386 12.7957 14.2782 13.1938 13.9796L14.1192 13.2856C14.3601 13.1049 14.6696 13.0424 14.9618 13.1154L18.5 14M4.5 5.5H18.5V17.5H4.5V5.5ZM14.5 9.5C14.5 10.0523 14.0523 10.5 13.5 10.5C12.9477 10.5 12.5 10.0523 12.5 9.5C12.5 8.94772 12.9477 8.5 13.5 8.5C14.0523 8.5 14.5 8.94772 14.5 9.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst InfoFilledIcon = react.forwardRef(function InfoFilledIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"info-filled\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5ZM12 10.5V9H13V10.5H12ZM13 16V12H12V16H13Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst InfoOutlineIcon = react.forwardRef(function InfoOutlineIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"info-outline\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 10.5V9M12.5 12V16M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst InlineElementIcon = react.forwardRef(function InlineElementIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"inline-element\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 5V20M19.5 5V20M8.5 6.5H16.5V18.5H8.5V6.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst InlineIcon = react.forwardRef(function InlineIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"inline\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 6.5H19.5V18.5H12.5M12.5 6.5H5.5V18.5H12.5M12.5 6.5V18.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst InsertAboveIcon = react.forwardRef(function InsertAboveIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"insert-above\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14.5 10.5556L10.5 10.5556M12.5 12.5L12.5 8.5M18.5 5.5L6.5 5.5M18.5 19.5L6.5 19.5L6.5 15.5L18.5 15.5L18.5 19.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst InsertBelowIcon = react.forwardRef(function InsertBelowIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"insert-below\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 14.5H14.5M12.5 12.5V16.5M6.5 19.5H18.5M6.5 5.5H18.5V9.5H6.5V5.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ItalicIcon = react.forwardRef(function ItalicIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"italic\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.43 18H11.7276L13.4551 9.86763H12.1576L10.43 18ZM13.3043 8.29849C13.8022 8.29849 14.2095 7.89112 14.2095 7.39322C14.2095 6.89532 13.8022 6.48795 13.3043 6.48795C12.8064 6.48795 12.399 6.89532 12.399 7.39322C12.399 7.89112 12.8064 8.29849 13.3043 8.29849Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst JoystickIcon = react.forwardRef(function JoystickIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"joystick\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 16V14.5H15.5V16M13.5 10.5V14.5M11.5 10.5V14.5M15.5 7.5C15.5 9.15685 14.1569 10.5 12.5 10.5C10.8431 10.5 9.5 9.15685 9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5ZM18.5 19.5H6.5C5.94772 19.5 5.5 19.0523 5.5 18.5V17.5C5.5 16.9477 5.94772 16.5 6.5 16.5H18.5C19.0523 16.5 19.5 16.9477 19.5 17.5V18.5C19.5 19.0523 19.0523 19.5 18.5 19.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst JsonIcon = react.forwardRef(function JsonIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"json\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 5.5H9.5C8.39543 5.5 7.5 6.39543 7.5 7.5V12.5M7.5 12.5H4M7.5 12.5V17.5C7.5 18.6046 8.39543 19.5 9.5 19.5H11M14 5.5H15.5C16.6046 5.5 17.5 6.39543 17.5 7.5V12.5M17.5 12.5H21M17.5 12.5V17.5C17.5 18.6046 16.6046 19.5 15.5 19.5H14\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst LaunchIcon = react.forwardRef(function LaunchIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"launch\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12 7.5H6.5V18.5H17.5V13M19.5 5.5L10.5 14.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 5.5H19.5V11\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst LeaveIcon = react.forwardRef(function LeaveIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"leave\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14.5 15V18.5H5.5V6.5H14.5V10M9 12.5H21.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18 9L21.5 12.5L18 16\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst LemonIcon = react.forwardRef(function LemonIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"lemon\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.6569 10.3431L6.41422 14.5858C7.58579 15.7574 9.12132 16.3431 10.6569 16.3431M10.6569 10.3431L14.8995 6.1005C16.0711 7.27208 16.6569 8.80761 16.6569 10.3431M10.6569 10.3431L10.6569 16.3431M10.6569 10.3431L16.6569 10.3431M10.6569 10.3431L14.8995 14.5858M14.8995 14.5858C13.7279 15.7574 12.1924 16.3431 10.6569 16.3431M14.8995 14.5858C16.0711 13.4142 16.6569 11.8787 16.6569 10.3431M16.3137 4.68629C19.4379 7.81049 19.4379 12.8758 16.3137 16C13.1895 19.1242 8.12419 19.1242 5 16L16.3137 4.68629Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst LinkIcon = react.forwardRef(function LinkIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"link\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 12.5L12.5 14C13.281 14.781 14.719 14.781 15.5 14L18.5 11C19.281 10.219 19.281 8.78105 18.5 8L18 7.5C17.2189 6.71895 15.781 6.71895 15 7.5L13 9.5M12 15.5L10 17.5C9.21895 18.281 7.78105 18.281 7 17.5L6.5 17C5.71895 16.219 5.71896 14.781 6.5 14L9.50001 11C10.2811 10.219 11.719 10.2189 12.5 11L14 12.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst LinkRemovedIcon = react.forwardRef(function LinkRemovedIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"link-removed\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.5 11C19.281 10.219 19.281 8.78108 18.5 8.00003L18 7.50003C17.2189 6.71898 15.781 6.71898 15 7.50003L13 9.50003M15.5 14C14.7189 14.7811 13.281 14.7811 12.5 14M6.5 14C5.71895 14.7811 5.71894 16.219 6.49999 17L6.99999 17.5C7.78104 18.2811 9.21894 18.2811 9.99999 17.5L12 15.5M12.5 11C11.719 10.219 10.281 10.219 9.5 11M3 12.5H22\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst LockIcon = react.forwardRef(function LockIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"lock\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15.5 11.5V8.5C15.5 6.5 14 5.5 12.5 5.5C11 5.5 9.5 6.5 9.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst LogoJsIcon = react.forwardRef(function LogoJsIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"logo-js\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M20 5H5V20H20V5ZM12.5254 16.1572C12.5254 17.4189 11.7742 18.1536 10.4792 18.1536C9.24243 18.1536 8.49121 17.4189 8.45801 16.2942V16.261H9.67407V16.2859C9.69897 16.7466 9.9729 17.0703 10.4626 17.0703C10.9939 17.0703 11.272 16.7507 11.272 16.1489V12.011H12.5254V16.1572ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst LogoTsIcon = react.forwardRef(function LogoTsIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"logo-ts\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M20 5H5V20H20V5ZM11.0769 18H9.82349V13.0444H8.02637V12.011H12.874V13.0444H11.0769V18ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst MasterDetailIcon = react.forwardRef(function MasterDetailIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"master-detail\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 9.5H10M11.5 6.5V18.5M7 12.5H10M13 9.5H18M7 15.5H10M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst MenuIcon = react.forwardRef(function MenuIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"menu\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6 7.5H19M6 17.5H19M6 12.5H19\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst MobileDeviceIcon = react.forwardRef(function MobileDeviceIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"mobile-device\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 6.5C7.5 5.39543 8.39543 4.5 9.5 4.5H15.5C16.6046 4.5 17.5 5.39543 17.5 6.5V18.5C17.5 19.6046 16.6046 20.5 15.5 20.5H9.5C8.39543 20.5 7.5 19.6046 7.5 18.5V6.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13.5 17.5C13.5 18.0523 13.0523 18.5 12.5 18.5C11.9477 18.5 11.5 18.0523 11.5 17.5C11.5 16.9477 11.9477 16.5 12.5 16.5C13.0523 16.5 13.5 16.9477 13.5 17.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst MoonIcon = react.forwardRef(function MoonIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"moon\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19.6065 16.1775C18.9417 16.387 18.234 16.5 17.5 16.5C13.634 16.5 10.5 13.366 10.5 9.5C10.5 7.54163 11.3042 5.77109 12.6004 4.50062C12.567 4.50021 12.5335 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C15.5924 20.5 18.275 18.7454 19.6065 16.1775Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst NumberIcon = react.forwardRef(function NumberIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"number\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M21.0165 17.6336H3.83636V16.4336H21.0165V17.6336Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.09808 13.3967V7.508H5.74066L3.83636 8.78241V10.091L5.65277 8.88495H5.74066V13.3967H3.84125V14.5539H8.89984V13.3967H7.09808Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.81781 9.63202V9.66132H11.1069V9.62714C11.1069 8.95331 11.5756 8.49432 12.2739 8.49432C12.9575 8.49432 13.4018 8.89471 13.4018 9.50507C13.4018 9.9787 13.1528 10.3498 12.1909 11.3117L9.89594 13.5822V14.5539H14.8618V13.3869H11.7807V13.299L13.1577 11.9855C14.3491 10.843 14.7543 10.1838 14.7543 9.41229C14.7543 8.19159 13.7729 7.36639 12.3178 7.36639C10.8383 7.36639 9.81781 8.28436 9.81781 9.63202Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17.6694 11.4631H18.5092C19.3198 11.4631 19.8422 11.8683 19.8422 12.4982C19.8422 13.1183 19.3295 13.5139 18.5239 13.5139C17.767 13.5139 17.2592 13.133 17.2104 12.5324H15.9262C15.9897 13.8508 17.0248 14.6955 18.5629 14.6955C20.1401 14.6955 21.2192 13.841 21.2192 12.591C21.2192 11.6584 20.6528 11.0334 19.7006 10.9211V10.8332C20.4721 10.6769 20.9457 10.0666 20.9457 9.23651C20.9457 8.12323 19.9741 7.36639 18.5434 7.36639C17.0541 7.36639 16.1118 8.17694 16.0629 9.50018H17.2983C17.3422 8.88007 17.8061 8.48456 18.4995 8.48456C19.2075 8.48456 19.6567 8.85565 19.6567 9.44159C19.6567 10.0324 19.1977 10.4182 18.4946 10.4182H17.6694V11.4631Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst OkHandIcon = react.forwardRef(function OkHandIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"ok-hand\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15.9957 11.5C14.8197 10.912 11.9957 9 10.4957 9C8.9957 9 5.17825 11.7674 6 13C7 14.5 9.15134 11.7256 10.4957 12C11.8401 12.2744 13 13.5 13 14.5C13 15.5 11.8401 16.939 10.4957 16.5C9.15134 16.061 8.58665 14.3415 7.4957 14C6.21272 13.5984 5.05843 14.6168 5.5 15.5C5.94157 16.3832 7.10688 17.6006 8.4957 19C9.74229 20.2561 11.9957 21.5 14.9957 20C17.9957 18.5 18.5 16.2498 18.5 13C18.5 11.5 13.7332 5.36875 11.9957 4.5C10.9957 4 10 5 10.9957 6.5C11.614 7.43149 13.5 9.27705 14 10.3751M15.5 8C15.5 8 15.3707 7.5 14.9957 6C14.4957 4 15.9957 3.5 16.4957 4.5C17.1281 5.76491 18.2872 10.9147 18.4957 13\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst OlistIcon = react.forwardRef(function OlistIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"olist\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10 7.5H19M10 12.5H19M10 17.5H19M5 18.5H7.5L7 17.5L7.5 16.5H5M5 6.5H6.5V8.5M5 8.5H6.5M6.5 8.5H8M8 13.5H6L7 11.5H5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst OverageIcon = react.forwardRef(function OverageIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"overage\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.5 11V6.5H14\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6.5 18.5L9 16L12 13L18.5 6.5M3 13.5H22\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst PackageIcon = react.forwardRef(function PackageIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"package\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 13V22M12.5 13L4.5 8M12.5 13L20.5 8M8.5 5.5L16.5 10.5M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst PanelLeftIcon = react.forwardRef(function PanelLeftIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"panel-left\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 6.5H19.5V18.5H10.5M10.5 6.5H5.5V18.5H10.5M10.5 6.5V18.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst PanelRightIcon = react.forwardRef(function PanelRightIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"panel-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14.5 6.5H19.5V18.5H14.5M14.5 6.5H5.5V18.5H14.5M14.5 6.5V18.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst PauseIcon = react.forwardRef(function PauseIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"pause\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 7.5H8.5V17.5H10.5V7.5Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.5 7.5H14.5V17.5H16.5V7.5Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 7.5H8.5V17.5H10.5V7.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.5 7.5H14.5V17.5H16.5V7.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2\n    })]\n  });\n});\nconst PinIcon = react.forwardRef(function PinIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"pin\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 14 15.5 17.5 12.5 20.5C9.5 17.5 6.5 14 6.5 10.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 10.5C14 11.3284 13.3284 12 12.5 12C11.6716 12 11 11.3284 11 10.5C11 9.67157 11.6716 9 12.5 9C13.3284 9 14 9.67157 14 10.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst PinRemovedIcon = react.forwardRef(function PinRemovedIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"pin-removed\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst PlayIcon = react.forwardRef(function PlayIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"play\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 18.5V6.5L17.5 12.5L7.5 18.5Z\",\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst PlugIcon = react.forwardRef(function PlugIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"plug\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13.25 8.5L16.75 5M16.25 11.5L19.75 8M9.25 15.5L5.25 19.5M7.75 14L9.75 12C8.25 10 8.75 9 9.75 8C10.15 7.6 11.25 6.5 11.25 6.5L18.25 13.5C18.25 13.5 17.3825 14.3675 16.75 15C15.75 16 14.75 16.5 12.75 15L10.75 17L7.75 14Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst PresentationIcon = react.forwardRef(function PresentationIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"presentation\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 18H5.5V8.5H19.5V18H14.5M10.5 18L9 22M10.5 18H14.5M14.5 18L16 22M4.5 8.5H20.5V6.5H4.5V8.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst PublishIcon = react.forwardRef(function PublishIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"publish\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.99997 5.50006H20M12.5 9.00005V20\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 14L12.5 9.00006L17.5 14\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst ReadOnlyIcon = react.forwardRef(function ReadOnlyIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"read-only\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15 7L18 10M10 12L7 15L6 19L10 18L13 15M12 10L17 5L20 8L15 13M19 19L5 5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst RedoIcon = react.forwardRef(function RedoIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"redo\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15 13.5L19 9.5L15 5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst RefreshIcon = react.forwardRef(function RefreshIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"refresh\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19.5 13.5C19.5 17.366 16.366 20.5 12.5 20.5C8.63401 20.5 5.5 17.366 5.5 13.5C5.5 9.63401 8.63401 6.5 12.5 6.5H15.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.5 10.5L15.5 6.5L11.5 2.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst RemoveCircleIcon = react.forwardRef(function RemoveCircleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"remove-circle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 12.4H17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst RemoveIcon = react.forwardRef(function RemoveIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"remove\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5 12.5H20\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ResetIcon = react.forwardRef(function ResetIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"reset\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.56189 13.5L4.14285 13.9294C4.25676 14.0406 4.41017 14.1019 4.56932 14.1C4.72847 14.098 4.88032 14.0329 4.99144 13.9189L4.56189 13.5ZM9.92427 15.9243L15.9243 9.92427L15.0757 9.07574L9.07574 15.0757L9.92427 15.9243ZM9.07574 9.92426L15.0757 15.9243L15.9243 15.0757L9.92426 9.07574L9.07574 9.92426ZM19.9 12.5C19.9 16.5869 16.5869 19.9 12.5 19.9V21.1C17.2496 21.1 21.1 17.2496 21.1 12.5H19.9ZM5.1 12.5C5.1 8.41309 8.41309 5.1 12.5 5.1V3.9C7.75035 3.9 3.9 7.75035 3.9 12.5H5.1ZM12.5 5.1C16.5869 5.1 19.9 8.41309 19.9 12.5H21.1C21.1 7.75035 17.2496 3.9 12.5 3.9V5.1ZM5.15728 13.4258C5.1195 13.1227 5.1 12.8138 5.1 12.5H3.9C3.9 12.8635 3.92259 13.2221 3.9665 13.5742L5.15728 13.4258ZM12.5 19.9C9.9571 19.9 7.71347 18.6179 6.38048 16.6621L5.38888 17.3379C6.93584 19.6076 9.54355 21.1 12.5 21.1V19.9ZM4.99144 13.9189L7.42955 11.4189L6.57045 10.5811L4.13235 13.0811L4.99144 13.9189ZM4.98094 13.0706L2.41905 10.5706L1.58095 11.4294L4.14285 13.9294L4.98094 13.0706Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst RestoreIcon = react.forwardRef(function RestoreIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"restore\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.88468 17C7.32466 19.1128 9.75033 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5V13.5M12.5 8V12.5L15.5 15.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 11L4.5 13.5L2 11\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst RetrieveIcon = react.forwardRef(function RetrieveIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"retrieve\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16 14L12.5 10.5L9 14M5.5 7.5H19.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 10.5L12.5 17.5M19.5 7.5V19.5H5.5V7.5L7.5 5.5H17.5L19.5 7.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst RetryIcon = react.forwardRef(function RetryIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"retry\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15 13.5L19 9.5L15 5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst RevertIcon = react.forwardRef(function RevertIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"revert\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10 13.5L6 9.5L10 5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst RobotIcon = react.forwardRef(function RobotIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"robot\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 15.5V17.5M12.5 8.5V6.5M12.5 6.5C13.3284 6.5 14 5.82843 14 5C14 4.17157 13.3284 3.5 12.5 3.5C11.6716 3.5 11 4.17157 11 5C11 5.82843 11.6716 6.5 12.5 6.5ZM20.5 20.5V19.5C20.5 18.3954 19.6046 17.5 18.5 17.5H6.5C5.39543 17.5 4.5 18.3954 4.5 19.5V20.5H20.5ZM11.5 12C11.5 12.5523 11.0523 13 10.5 13C9.94772 13 9.5 12.5523 9.5 12C9.5 11.4477 9.94772 11 10.5 11C11.0523 11 11.5 11.4477 11.5 12ZM15.5 12C15.5 12.5523 15.0523 13 14.5 13C13.9477 13 13.5 12.5523 13.5 12C13.5 11.4477 13.9477 11 14.5 11C15.0523 11 15.5 11.4477 15.5 12ZM8.5 15.5H16.5C17.6046 15.5 18.5 14.6046 18.5 13.5V10.5C18.5 9.39543 17.6046 8.5 16.5 8.5H8.5C7.39543 8.5 6.5 9.39543 6.5 10.5V13.5C6.5 14.6046 7.39543 15.5 8.5 15.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst RocketIcon = react.forwardRef(function RocketIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"rocket\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 20.5L15.5 14M11 9.49999L4.5 12.5M9 14C9 14 7.54688 14.9531 6.5 16C5.5 17 4.5 20.5 4.5 20.5C4.5 20.5 8 19.5 9 18.5C10 17.5 11 16 11 16M9 14C9 14 10.1 9.9 12.5 7.5C15.5 4.5 20.5 4.5 20.5 4.5C20.5 4.5 20.5 9.5 17.5 12.5C15.7492 14.2508 11 16 11 16L9 14ZM16.5 9.99999C16.5 10.8284 15.8284 11.5 15 11.5C14.1716 11.5 13.5 10.8284 13.5 9.99999C13.5 9.17157 14.1716 8.49999 15 8.49999C15.8284 8.49999 16.5 9.17157 16.5 9.99999Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SchemaIcon = react.forwardRef(function SchemaIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"schema\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 9.5V12.5M12.5 12.5H8.5V15.5M12.5 12.5H16.5V15.5M10.5 5.5H14.5V9.5H10.5V5.5ZM6.5 15.5H10.5V19.5H6.5V15.5ZM14.5 15.5H18.5V19.5H14.5V15.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SearchIcon = react.forwardRef(function SearchIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"search\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15.0355 15.0355L20 20M16.5 11.5C16.5 14.2614 14.2614 16.5 11.5 16.5C8.73858 16.5 6.5 14.2614 6.5 11.5C6.5 8.73858 8.73858 6.5 11.5 6.5C14.2614 6.5 16.5 8.73858 16.5 11.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SelectIcon = react.forwardRef(function SelectIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"select\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.5 15.5L12.5 19.5L8.5 15.5M8.5 9.5L12.5 5.5L16.5 9.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ShareIcon = react.forwardRef(function ShareIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"share\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M15 10.5H18.5V19.5H6.5L6.5 10.5H10M12.5 16V3.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9 7L12.5 3.5L16 7\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst SortIcon = react.forwardRef(function SortIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"sort\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8.5 18.5V6M16.5 19V6.5M12 15L8.5 18.5L5 15M13 10L16.5 6.5L20 10\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SparkleIcon = react.forwardRef(function SparkleIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"sparkle\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 10.5C8.5 12.5 5 12.5 5 12.5C5 12.5 8.5 12.5 10.5 14.5C12.5 16.5 12.5 20 12.5 20C12.5 20 12.5 16.5 14.5 14.5C16.5 12.5 20 12.5 20 12.5C20 12.5 16.5 12.5 14.5 10.5C12.5 8.5 12.5 5 12.5 5C12.5 5 12.5 8.5 10.5 10.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SparklesIcon = react.forwardRef(function SparklesIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"sparkles\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 3.5V5M11 5V6.5M11 5H12.5M11 5H9.5M9.5 15C9.5 15 12.2308 14.7692 13.5 13.5C14.7692 12.2308 15 9.5 15 9.5C15 9.5 15.2308 12.2308 16.5 13.5C17.7692 14.7692 20.5 15 20.5 15C20.5 15 17.7692 15.2308 16.5 16.5C15.2308 17.7692 15 20.5 15 20.5C15 20.5 14.7692 17.7692 13.5 16.5C12.2308 15.2308 9.5 15 9.5 15ZM4.5 10C4.5 10 5.72308 9.87692 6.3 9.3C6.87692 8.72308 7 7.5 7 7.5C7 7.5 7.12308 8.72308 7.7 9.3C8.27692 9.87692 9.5 10 9.5 10C9.5 10 8.27692 10.1231 7.7 10.7C7.12308 11.2769 7 12.5 7 12.5C7 12.5 6.87692 11.2769 6.3 10.7C5.72308 10.1231 4.5 10 4.5 10Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SpinnerIcon = react.forwardRef(function SpinnerIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"spinner\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SplitHorizontalIcon = react.forwardRef(function SplitHorizontalIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"split-horizontal\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19.5 10.5V20.5H5.5V10.5M19.5 10.5H5.5M19.5 10.5V4.5H5.5V10.5M12.5 13V15.5M12.5 18V15.5M12.5 15.5H15M12.5 15.5H10\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SplitVerticalIcon = react.forwardRef(function SplitVerticalIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"split-vertical\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10.5 5.5V19.5M13 12.5H15.5M18 12.5H15.5M15.5 12.5V15M15.5 12.5V10M4.5 5.5H20.5V19.5H4.5V5.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SquareIcon = react.forwardRef(function SquareIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"square\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"rect\", {\n      x: 5.5,\n      y: 5.5,\n      width: 14,\n      height: 14,\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst StackCompactIcon = react.forwardRef(function StackCompactIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"stack-compact\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 15.5V18.5H19.5V15.5M5.5 15.5H19.5M5.5 15.5V9.5M19.5 15.5V9.5M5.5 9.5V6.5H19.5V9.5M5.5 9.5H19.5M5.5 12.5H19.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst StackIcon = react.forwardRef(function StackIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"stack\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 12.5H19.5M5.5 18.5H19.5V6.5H5.5V18.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst StarIcon = react.forwardRef(function StarIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"star\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13 4L15.2747 9.8691L21.5595 10.2188L16.6806 14.1959L18.2901 20.2812L13 16.87L7.70993 20.2812L9.31941 14.1959L4.44049 10.2188L10.7253 9.8691L13 4Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst StopIcon = react.forwardRef(function StopIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"stop\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"rect\", {\n      x: 7.5,\n      y: 7.5,\n      width: 10,\n      height: 10,\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst StrikethroughIcon = react.forwardRef(function StrikethroughIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"strikethrough\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5656 7.73438C11.0656 7.73438 10.0734 8.48438 10.0734 9.625C10.0734 10.2317 10.3649 10.6613 11.0519 11H8.90358C8.71703 10.6199 8.62813 10.1801 8.62813 9.67188C8.62813 7.75781 10.2297 6.46094 12.6125 6.46094C14.7922 6.46094 16.4172 7.75781 16.5344 9.57812H15.1203C14.925 8.42188 13.9719 7.73438 12.5656 7.73438Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.4875 18.2656C10.0969 18.2656 8.44844 17 8.3 15.0547H9.72188C9.89375 16.2344 11.0188 16.9844 12.6203 16.9844C14.1359 16.9844 15.2531 16.1641 15.2531 15.0469C15.2531 14.6375 15.1255 14.292 14.8589 14H16.5912C16.6638 14.266 16.6984 14.5566 16.6984 14.875C16.6984 16.9453 15.0656 18.2656 12.4875 18.2656Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 13.1H18V11.9H7V13.1Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst StringIcon = react.forwardRef(function StringIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"string\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11.6748 15.5227H13.1855L9.87842 6.36304H8.34863L5.0415 15.5227H6.50146L7.3457 13.0916H10.8369L11.6748 15.5227ZM9.04053 8.02612H9.14844L10.4751 11.8982H7.70752L9.04053 8.02612Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.8101 14.488C16.0674 14.488 15.5278 14.1262 15.5278 13.5042C15.5278 12.8948 15.9595 12.571 16.9116 12.5076L18.6001 12.3997V12.9773C18.6001 13.8342 17.8384 14.488 16.8101 14.488ZM16.4609 15.637C17.3687 15.637 18.124 15.2434 18.5366 14.5515H18.6445V15.5227H19.9585V10.8C19.9585 9.34009 18.981 8.47681 17.248 8.47681C15.6802 8.47681 14.563 9.23853 14.4233 10.4255H15.7437C15.896 9.93677 16.4229 9.65747 17.1846 9.65747C18.1177 9.65747 18.6001 10.0701 18.6001 10.8V11.3967L16.7275 11.5046C15.0835 11.6062 14.1567 12.3235 14.1567 13.5676C14.1567 14.8308 15.1279 15.637 16.4609 15.637Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M19.9585 18.637L5.0415 18.637V17.437L19.9585 17.437V18.637Z\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nconst SunIcon = react.forwardRef(function SunIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"sun\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19 12.5H22M3 12.5H6M12.5 6V3M12.5 22V19M17.3891 7.61091L19.5104 5.48959M5.48959 19.5104L7.61091 17.3891M7.61091 7.61091L5.48959 5.48959M19.5104 19.5104L17.3891 17.3891M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst SyncIcon = react.forwardRef(function SyncIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"sync\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13.5 4.5H12.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 15.6631 6.33576 18.3975 9 19.6958M11.5 20.5H12.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 9.33688 18.6642 6.60253 16 5.30423\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst TabletDeviceIcon = react.forwardRef(function TabletDeviceIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"tablet-device\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5.5 5.5C5.5 4.94772 5.94772 4.5 6.5 4.5H18.5C19.0523 4.5 19.5 4.94772 19.5 5.5V19.5C19.5 20.0523 19.0523 20.5 18.5 20.5H6.5C5.94772 20.5 5.5 20.0523 5.5 19.5V5.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M13 18C13 18.2761 12.7761 18.5 12.5 18.5C12.2239 18.5 12 18.2761 12 18C12 17.7239 12.2239 17.5 12.5 17.5C12.7761 17.5 13 17.7239 13 18Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst TagIcon = react.forwardRef(function TagIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"tag\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 20L5 20L5 12.5L12.5 5L20 12.5L12.5 20Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M11 15.5C11 16.3284 10.3284 17 9.5 17C8.67157 17 8 16.3284 8 15.5C8 14.6716 8.67157 14 9.5 14C10.3284 14 11 14.6716 11 15.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst TagsIcon = react.forwardRef(function TagsIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"tags\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.1562 7.93179L13.9717 6.11633L20.3553 12.5L13.9717 18.8836L10.6855 18.8836M11.0283 18.8836L17.4119 12.5L11.0283 6.11633L4.64462 12.5L4.64462 18.8836L11.0283 18.8836ZM9.75153 15.0534C9.75153 15.7585 9.17992 16.3302 8.47481 16.3302C7.76969 16.3302 7.19808 15.7585 7.19808 15.0534C7.19808 14.3483 7.76969 13.7767 8.47481 13.7767C9.17992 13.7767 9.75153 14.3483 9.75153 15.0534Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TerminalIcon = react.forwardRef(function TerminalIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"terminal\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8.5 9.5L11.5 12.5L8.5 15.5M13 15.5H17M5.5 6.5H19.5V18.5H5.5V6.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TextIcon = react.forwardRef(function TextIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"text\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 9V6.5H17.5V9M12.5 18.5V6.5M10 18.5H15\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ThLargeIcon = react.forwardRef(function ThLargeIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"th-large\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 6.5V12.5M12.5 12.5V18.5M12.5 12.5H20.5M12.5 12.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ThListIcon = react.forwardRef(function ThListIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"th-list\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 6.5V10.5M9.5 10.5V14.5M9.5 10.5H20.5M9.5 10.5H4.5M9.5 14.5V18.5M9.5 14.5H20.5M9.5 14.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TiersIcon = react.forwardRef(function TiersIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"tiers\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16.5 14.5L20.5 16.5L12.5 20.5L4.5 16.5L8.5 14.5M16.5 10.5L20.5 12.5L12.5 16.5L4.5 12.5L8.5 10.5M12.5 12.5L20.5 8.5L12.5 4.5L4.5 8.5L12.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst ToggleArrowRightIcon = react.forwardRef(function ToggleArrowRightIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"toggle-arrow-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10 16.5V8.5L16 12.5L10 16.5Z\",\n      fill: \"currentColor\",\n      stroke: \"currentColor\",\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TokenIcon = react.forwardRef(function TokenIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"token\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17.5711 12.5C17.5711 15.2614 15.3325 17.5 12.5711 17.5M7.57107 12.5C7.57107 9.73858 9.80964 7.5 12.5711 7.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TransferIcon = react.forwardRef(function TransferIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"transfer\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M19.5 16.5H6M5.5 8.5L19 8.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M16 13L19.5 16.5L16 20M9 12L5.5 8.5L9 5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst TranslateIcon = react.forwardRef(function TranslateIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"translate\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M9.4 5.4H4V6.6H13.2189C13.1612 6.78478 13.0895 6.99578 13.0025 7.22211C12.7032 8.00031 12.2402 8.91125 11.5757 9.57574L10 11.1515L9.42426 10.5757C8.72102 9.8725 8.25297 9.16987 7.96199 8.64611C7.81668 8.38455 7.71617 8.16874 7.65305 8.02146C7.62151 7.94787 7.59937 7.89154 7.5857 7.85534C7.57886 7.83725 7.57415 7.8242 7.57144 7.81657L7.56886 7.80922C7.56886 7.80922 7.56921 7.81026 7 8C6.43079 8.18974 6.43091 8.19009 6.43091 8.19009L6.43133 8.19135L6.43206 8.19351L6.4341 8.19948L6.44052 8.21786C6.44587 8.23292 6.45336 8.25357 6.46313 8.27942C6.48266 8.33112 6.5113 8.40369 6.55008 8.49416C6.62758 8.67501 6.74582 8.92795 6.91301 9.22889C7.24703 9.83013 7.77898 10.6275 8.57574 11.4243L9.15147 12L4.57964 16.5718L4.57655 16.5749L4.57577 16.5757L5.4243 17.4242L5.42688 17.4216L10.0368 12.8117L12.6159 14.9609L13.3841 14.0391L10.8888 11.9597L12.4243 10.4243C13.2598 9.58875 13.7968 8.49969 14.1225 7.65289C14.2818 7.23863 14.395 6.87072 14.4696 6.6H16V5.4H10.6V4H9.4V5.4ZM17.4405 10L21.553 19.7672H20.2509L19.1279 17.1H14.8721L13.7491 19.7672H12.447L16.5595 10H17.4405ZM15.3773 15.9H18.6227L17 12.0462L15.3773 15.9Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst TrashIcon = react.forwardRef(function TrashIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"trash\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5 6.5H20M10 6.5V4.5C10 3.94772 10.4477 3.5 11 3.5H14C14.5523 3.5 15 3.94772 15 4.5V6.5M12.5 9V17M15.5 9L15 17M9.5 9L10 17M18.5 6.5L17.571 18.5767C17.5309 19.0977 17.0965 19.5 16.574 19.5H8.42603C7.90349 19.5 7.46905 19.0977 7.42898 18.5767L6.5 6.5H18.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TrendUpwardIcon = react.forwardRef(function TrendUpwardIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"trend-upward\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M4.5 18.5L11.5 10.5L13.5 14.5L20.5 6.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M20.5 11V6.5H16\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst TriangleOutlineIcon = react.forwardRef(function TriangleOutlineIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"triangle-outline\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M20.5 18.5H4.5L12.5 5.5L20.5 18.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TrolleyIcon = react.forwardRef(function TrolleyIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"trolley\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 17.5L5.81763 6.26772C5.71013 5.81757 5.30779 5.5 4.84498 5.5H3M8 17.5H17M8 17.5C8.82843 17.5 9.5 18.1716 9.5 19C9.5 19.8284 8.82843 20.5 8 20.5C7.17157 20.5 6.5 19.8284 6.5 19C6.5 18.1716 7.17157 17.5 8 17.5ZM17 17.5C17.8284 17.5 18.5 18.1716 18.5 19C18.5 19.8284 17.8284 20.5 17 20.5C16.1716 20.5 15.5 19.8284 15.5 19C15.5 18.1716 16.1716 17.5 17 17.5ZM7.78357 14.5H17.5L19 7.5H6\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TruncateIcon = react.forwardRef(function TruncateIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"truncate\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5 12.5H20M8.5 19.5L12.5 15.5L16.5 19.5M16.5 5.5L12.5 9.5L8.5 5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst TwitterIcon = react.forwardRef(function TwitterIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"twitter\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M18.8738 6.65751C18.1994 5.9447 17.2445 5.5 16.1857 5.5C14.1423 5.5 12.4857 7.15655 12.4857 9.2C12.4857 9.55263 12.535 9.89374 12.6272 10.2168C7.0826 9.56422 4.55703 6.02857 4.55703 6.02857C4.55703 6.02857 4.02846 9.2 6.14274 11.3143C5.08571 11.3143 4.55703 10.7857 4.55703 10.7857C4.55703 10.7857 4.55703 13.4286 7.19989 14.4857C6.67143 15.0143 5.61417 14.4857 5.61417 14.4857C5.97533 15.9303 7.45606 16.8562 8.82133 17.1358C6.67298 19.1676 3.5 18.7143 3.5 18.7143C5.14562 19.771 7.21334 20.3 9.31429 20.3C16.1214 20.3 19.8162 15.6315 19.8848 9.37762C20.8722 8.58943 22 7.08571 22 7.08571C22 7.08571 21.277 7.45458 19.6913 7.98315C21.277 6.92601 21.4714 5.5 21.4714 5.5C21.4714 5.5 20.4135 6.55789 18.8738 6.65751Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst UlistIcon = react.forwardRef(function UlistIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"ulist\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.10153 17.5001C7.10153 17.8323 6.83221 18.1016 6.5 18.1016C6.16778 18.1016 5.89847 17.8323 5.89847 17.5001C5.89847 17.1678 6.16778 16.8985 6.5 16.8985C6.83221 16.8985 7.10153 17.1678 7.10153 17.5001Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.10153 7.5C7.10153 7.83221 6.83221 8.10153 6.5 8.10153C6.16778 8.10153 5.89847 7.83221 5.89847 7.5C5.89847 7.16778 6.16778 6.89847 6.5 6.89847C6.83221 6.89847 7.10153 7.16778 7.10153 7.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.10153 12.5C7.10153 12.8322 6.83221 13.1015 6.5 13.1015C6.16778 13.1015 5.89847 12.8322 5.89847 12.5C5.89847 12.1678 6.16778 11.8985 6.5 11.8985C6.83221 11.8985 7.10153 12.1678 7.10153 12.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10 7.5H19M10 17.5H19M10 12.5H19\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst UnderlineIcon = react.forwardRef(function UnderlineIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"underline\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.52791 7.11407H8.17V14.2582C8.17 16.5817 9.79195 18.2565 12.4927 18.2565C15.1934 18.2565 16.8154 16.5817 16.8154 14.2582V7.11407H15.4574V14.1677C15.4574 15.8122 14.3787 17.0042 12.4927 17.0042C10.6067 17.0042 9.52791 15.8122 9.52791 14.1677V7.11407Z\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7 20.5H18\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst UndoIcon = react.forwardRef(function UndoIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"undo\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M10 13.5L6 9.5L10 5.5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst UnknownIcon = react.forwardRef(function UnknownIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"unknown\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M5.5 5.5H19.5V19.5H5.5V5.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst UnlockIcon = react.forwardRef(function UnlockIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"unlock\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M9.5 11.5V8.5C9.5 6.5 8 5.5 6.5 5.5C5 5.5 3.5 6.5 3.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst UnpublishIcon = react.forwardRef(function UnpublishIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"unpublish\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M5 19.5H20M12.5 16V5\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17.5 11L12.5 16L7.5 11\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst UploadIcon = react.forwardRef(function UploadIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsxs(\"svg\", {\n    \"data-sanity-icon\": \"upload\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: [/* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 6.00003V15.5M5.5 15.5H19.5V19.5H5.5V15.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    }), /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M7.5 11L12.5 6.00003L17.5 11\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })]\n  });\n});\nconst UserIcon = react.forwardRef(function UserIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"user\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M8 14.5C7 15 5.5 16 5.5 19.5H19.5C19.5 16 18.3416 15.1708 17 14.5C16 14 14 14 14 12.5C14 11 15 10.25 15 8.25C15 6.25 14 5.25 12.5 5.25C11 5.25 10 6.25 10 8.25C10 10.25 11 11 11 12.5C11 14 9 14 8 14.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst UsersIcon = react.forwardRef(function UsersIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"users\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17.5 18.5H21.5C21.5 15 20.8416 14.1708 19.5 13.5C18.5 13 16.5 12.5 16.5 11C16.5 9.5 17.5 9 17.5 7C17.5 5 16.5 4 15 4C13.6628 4 12.723 4.79472 12.5347 6.38415M4.5 20.5C4.5 17 5.5 16 6.5 15.5C7.5 15 9.5 14.5 9.5 13C9.5 11.5 8.5 11 8.5 9C8.5 7 9.5 6 11 6C12.5 6 13.5 7 13.5 9C13.5 11 12.5 11.5 12.5 13C12.5 14.5 14.5 15 15.5 15.5C16.8416 16.1708 17.5 17 17.5 20.5H4.5Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst WarningFilledIcon = react.forwardRef(function WarningFilledIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"warning-filled\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M14.741 5.12637C13.7357 3.41737 11.2643 3.41737 10.259 5.12637L3.7558 16.1818C2.73624 17.915 3.98595 20.1 5.99683 20.1H19.0032C21.014 20.1 22.2637 17.915 21.2442 16.1818L14.741 5.12637ZM11.9 9V13H13.1V9H11.9ZM13.1 16V14.5H11.9V16H13.1Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst WarningOutlineIcon = react.forwardRef(function WarningOutlineIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"warning-outline\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M12.5 9V13M12.5 16V14.5M14.2239 5.43058L20.727 16.486C21.5113 17.8192 20.55 19.5 19.0032 19.5H5.99683C4.45 19.5 3.48869 17.8192 4.27297 16.486L10.7761 5.43058C11.5494 4.11596 13.4506 4.11596 14.2239 5.43058Z\",\n      stroke: \"currentColor\",\n      strokeWidth: 1.2,\n      strokeLinejoin: \"round\"\n    })\n  });\n});\nconst WrenchIcon = react.forwardRef(function WrenchIcon2(props, ref) {\n  return /* @__PURE__ */jsxRuntime.jsx(\"svg\", {\n    \"data-sanity-icon\": \"wrench\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref,\n    ...props,\n    children: /* @__PURE__ */jsxRuntime.jsx(\"path\", {\n      d: \"M17.0407 5.14624L17.4649 5.57051C17.6166 5.41887 17.6757 5.19783 17.6202 4.99071C17.5646 4.78359 17.4027 4.62189 17.1955 4.56656L17.0407 5.14624ZM14.4013 7.7856L13.977 7.36134C13.8288 7.50959 13.7687 7.72447 13.8185 7.92813L14.4013 7.7856ZM12.8778 6.26211L12.4535 5.83784V5.83784L12.8778 6.26211ZM11.8309 10.6568L12.2552 11.0811C12.4152 10.9211 12.4716 10.6847 12.401 10.4697L11.8309 10.6568ZM5.63925 16.8485L5.21498 16.4242H5.21498L5.63925 16.8485ZM5.63925 19.935L6.06351 19.5108H6.06351L5.63925 19.935ZM8.72581 19.935L9.15007 20.3593L8.72581 19.935ZM15.1184 13.5425L15.2301 12.953C15.0351 12.916 14.8344 12.9779 14.6941 13.1182L15.1184 13.5425ZM18.9718 12.3561L19.3961 12.7804L18.9718 12.3561ZM20.0877 8.19324L20.6674 8.03843C20.612 7.83125 20.4503 7.66934 20.2432 7.61375C20.0361 7.55816 19.815 7.61734 19.6634 7.76898L20.0877 8.19324ZM17.4483 10.8326L17.3058 11.4154C17.5094 11.4652 17.7243 11.4051 17.8726 11.2569L17.4483 10.8326ZM15 10.2339L14.4172 10.3764C14.4704 10.5938 14.6401 10.7635 14.8575 10.8167L15 10.2339ZM16.6164 4.72198L13.977 7.36134L14.8256 8.20986L17.4649 5.57051L16.6164 4.72198ZM13.3021 6.68637C14.2723 5.71612 15.6467 5.39501 16.8859 5.72593L17.1955 4.56656C15.5595 4.12966 13.7389 4.55245 12.4535 5.83784L13.3021 6.68637ZM12.401 10.4697C11.9779 9.18109 12.2794 7.70907 13.3021 6.68637L12.4535 5.83784C11.0985 7.19284 10.7021 9.14218 11.2608 10.844L12.401 10.4697ZM11.4066 10.2326L5.21498 16.4242L6.06351 17.2727L12.2552 11.0811L11.4066 10.2326ZM5.21498 16.4242C4.12834 17.5109 4.12834 19.2727 5.21498 20.3593L6.06351 19.5108C5.4455 18.8928 5.4455 17.8908 6.06351 17.2727L5.21498 16.4242ZM5.21498 20.3593C6.30163 21.446 8.06343 21.446 9.15007 20.3593L8.30155 19.5108C7.68353 20.1288 6.68153 20.1288 6.06351 19.5108L5.21498 20.3593ZM9.15007 20.3593L15.5426 13.9668L14.6941 13.1182L8.30155 19.5108L9.15007 20.3593ZM18.5475 11.9318C17.6463 12.8331 16.3968 13.1742 15.2301 12.953L15.0066 14.132C16.5466 14.4239 18.2023 13.9741 19.3961 12.7804L18.5475 11.9318ZM19.508 8.34804C19.8389 9.58721 19.5178 10.9616 18.5475 11.9318L19.3961 12.7804C20.6815 11.495 21.1043 9.67445 20.6674 8.03843L19.508 8.34804ZM17.8726 11.2569L20.5119 8.6175L19.6634 7.76898L17.024 10.4083L17.8726 11.2569ZM14.8575 10.8167L17.3058 11.4154L17.5908 10.2498L15.1426 9.65106L14.8575 10.8167ZM13.8185 7.92813L14.4172 10.3764L15.5829 10.0914L14.9841 7.64307L13.8185 7.92813Z\",\n      fill: \"currentColor\"\n    })\n  });\n});\nconst icons = {\n  \"access-denied\": AccessDeniedIcon,\n  activity: ActivityIcon,\n  \"add-circle\": AddCircleIcon,\n  \"add-comment\": AddCommentIcon,\n  add: AddIcon,\n  api: ApiIcon,\n  archive: ArchiveIcon,\n  \"arrow-down\": ArrowDownIcon,\n  \"arrow-left\": ArrowLeftIcon,\n  \"arrow-right\": ArrowRightIcon,\n  \"arrow-top-right\": ArrowTopRightIcon,\n  \"arrow-up\": ArrowUpIcon,\n  \"bar-chart\": BarChartIcon,\n  basket: BasketIcon,\n  bell: BellIcon,\n  bill: BillIcon,\n  \"binary-document\": BinaryDocumentIcon,\n  \"block-content\": BlockContentIcon,\n  \"block-element\": BlockElementIcon,\n  blockquote: BlockquoteIcon,\n  bold: BoldIcon,\n  bolt: BoltIcon,\n  book: BookIcon,\n  bottle: BottleIcon,\n  \"bulb-filled\": BulbFilledIcon,\n  \"bulb-outline\": BulbOutlineIcon,\n  calendar: CalendarIcon,\n  case: CaseIcon,\n  \"chart-upward\": ChartUpwardIcon,\n  \"checkmark-circle\": CheckmarkCircleIcon,\n  checkmark: CheckmarkIcon,\n  \"chevron-down\": ChevronDownIcon,\n  \"chevron-left\": ChevronLeftIcon,\n  \"chevron-right\": ChevronRightIcon,\n  \"chevron-up\": ChevronUpIcon,\n  circle: CircleIcon,\n  clipboard: ClipboardIcon,\n  \"clipboard-image\": ClipboardImageIcon,\n  clock: ClockIcon,\n  \"close-circle\": CloseCircleIcon,\n  close: CloseIcon,\n  \"code-block\": CodeBlockIcon,\n  code: CodeIcon,\n  cog: CogIcon,\n  collapse: CollapseIcon,\n  \"color-wheel\": ColorWheelIcon,\n  comment: CommentIcon,\n  component: ComponentIcon,\n  compose: ComposeIcon,\n  controls: ControlsIcon,\n  copy: CopyIcon,\n  \"credit-card\": CreditCardIcon,\n  crop: CropIcon,\n  cube: CubeIcon,\n  dashboard: DashboardIcon,\n  database: DatabaseIcon,\n  desktop: DesktopIcon,\n  document: DocumentIcon,\n  \"document-pdf\": DocumentPdfIcon,\n  \"document-remove\": DocumentRemoveIcon,\n  \"document-sheet\": DocumentSheetIcon,\n  \"document-text\": DocumentTextIcon,\n  \"document-video\": DocumentVideoIcon,\n  \"document-word\": DocumentWordIcon,\n  \"document-zip\": DocumentZipIcon,\n  documents: DocumentsIcon,\n  dot: DotIcon,\n  \"double-chevron-down\": DoubleChevronDownIcon,\n  \"double-chevron-left\": DoubleChevronLeftIcon,\n  \"double-chevron-right\": DoubleChevronRightIcon,\n  \"double-chevron-up\": DoubleChevronUpIcon,\n  download: DownloadIcon,\n  \"drag-handle\": DragHandleIcon,\n  drop: DropIcon,\n  \"earth-americas\": EarthAmericasIcon,\n  \"earth-globe\": EarthGlobeIcon,\n  edit: EditIcon,\n  \"ellipsis-horizontal\": EllipsisHorizontalIcon,\n  \"ellipsis-vertical\": EllipsisVerticalIcon,\n  enter: EnterIcon,\n  \"enter-right\": EnterRightIcon,\n  envelope: EnvelopeIcon,\n  equal: EqualIcon,\n  \"error-filled\": ErrorFilledIcon,\n  \"error-outline\": ErrorOutlineIcon,\n  expand: ExpandIcon,\n  \"eye-closed\": EyeClosedIcon,\n  \"eye-open\": EyeOpenIcon,\n  filter: FilterIcon,\n  folder: FolderIcon,\n  generate: GenerateIcon,\n  groq: GroqIcon,\n  \"heart-filled\": HeartFilledIcon,\n  heart: HeartIcon,\n  \"help-circle\": HelpCircleIcon,\n  home: HomeIcon,\n  \"ice-cream\": IceCreamIcon,\n  image: ImageIcon,\n  \"image-remove\": ImageRemoveIcon,\n  images: ImagesIcon,\n  \"info-filled\": InfoFilledIcon,\n  \"info-outline\": InfoOutlineIcon,\n  \"inline-element\": InlineElementIcon,\n  inline: InlineIcon,\n  \"insert-above\": InsertAboveIcon,\n  \"insert-below\": InsertBelowIcon,\n  italic: ItalicIcon,\n  joystick: JoystickIcon,\n  json: JsonIcon,\n  launch: LaunchIcon,\n  leave: LeaveIcon,\n  lemon: LemonIcon,\n  link: LinkIcon,\n  \"link-removed\": LinkRemovedIcon,\n  lock: LockIcon,\n  \"logo-js\": LogoJsIcon,\n  \"logo-ts\": LogoTsIcon,\n  \"master-detail\": MasterDetailIcon,\n  menu: MenuIcon,\n  \"mobile-device\": MobileDeviceIcon,\n  moon: MoonIcon,\n  number: NumberIcon,\n  \"ok-hand\": OkHandIcon,\n  olist: OlistIcon,\n  overage: OverageIcon,\n  package: PackageIcon,\n  \"panel-left\": PanelLeftIcon,\n  \"panel-right\": PanelRightIcon,\n  pause: PauseIcon,\n  pin: PinIcon,\n  \"pin-removed\": PinRemovedIcon,\n  play: PlayIcon,\n  plug: PlugIcon,\n  presentation: PresentationIcon,\n  publish: PublishIcon,\n  \"read-only\": ReadOnlyIcon,\n  redo: RedoIcon,\n  refresh: RefreshIcon,\n  \"remove-circle\": RemoveCircleIcon,\n  remove: RemoveIcon,\n  reset: ResetIcon,\n  restore: RestoreIcon,\n  retrieve: RetrieveIcon,\n  retry: RetryIcon,\n  revert: RevertIcon,\n  robot: RobotIcon,\n  rocket: RocketIcon,\n  schema: SchemaIcon,\n  search: SearchIcon,\n  select: SelectIcon,\n  share: ShareIcon,\n  sort: SortIcon,\n  sparkle: SparkleIcon,\n  sparkles: SparklesIcon,\n  spinner: SpinnerIcon,\n  \"split-horizontal\": SplitHorizontalIcon,\n  \"split-vertical\": SplitVerticalIcon,\n  square: SquareIcon,\n  \"stack-compact\": StackCompactIcon,\n  stack: StackIcon,\n  star: StarIcon,\n  stop: StopIcon,\n  strikethrough: StrikethroughIcon,\n  string: StringIcon,\n  sun: SunIcon,\n  sync: SyncIcon,\n  \"tablet-device\": TabletDeviceIcon,\n  tag: TagIcon,\n  tags: TagsIcon,\n  terminal: TerminalIcon,\n  text: TextIcon,\n  \"th-large\": ThLargeIcon,\n  \"th-list\": ThListIcon,\n  tiers: TiersIcon,\n  \"toggle-arrow-right\": ToggleArrowRightIcon,\n  token: TokenIcon,\n  transfer: TransferIcon,\n  translate: TranslateIcon,\n  trash: TrashIcon,\n  \"trend-upward\": TrendUpwardIcon,\n  \"triangle-outline\": TriangleOutlineIcon,\n  trolley: TrolleyIcon,\n  truncate: TruncateIcon,\n  twitter: TwitterIcon,\n  ulist: UlistIcon,\n  underline: UnderlineIcon,\n  undo: UndoIcon,\n  unknown: UnknownIcon,\n  unlock: UnlockIcon,\n  unpublish: UnpublishIcon,\n  upload: UploadIcon,\n  user: UserIcon,\n  users: UsersIcon,\n  \"warning-filled\": WarningFilledIcon,\n  \"warning-outline\": WarningOutlineIcon,\n  wrench: WrenchIcon\n};\nconst Icon = react.forwardRef(function Icon2(props, ref) {\n  const {\n    symbol,\n    ...restProps\n  } = props;\n  const iconComponent = icons[symbol];\n  if (!iconComponent) {\n    return null;\n  }\n  return react.createElement(iconComponent, {\n    ...restProps,\n    ref\n  });\n});\nexports.AccessDeniedIcon = AccessDeniedIcon;\nexports.ActivityIcon = ActivityIcon;\nexports.AddCircleIcon = AddCircleIcon;\nexports.AddCommentIcon = AddCommentIcon;\nexports.AddIcon = AddIcon;\nexports.ApiIcon = ApiIcon;\nexports.ArchiveIcon = ArchiveIcon;\nexports.ArrowDownIcon = ArrowDownIcon;\nexports.ArrowLeftIcon = ArrowLeftIcon;\nexports.ArrowRightIcon = ArrowRightIcon;\nexports.ArrowTopRightIcon = ArrowTopRightIcon;\nexports.ArrowUpIcon = ArrowUpIcon;\nexports.BarChartIcon = BarChartIcon;\nexports.BasketIcon = BasketIcon;\nexports.BellIcon = BellIcon;\nexports.BillIcon = BillIcon;\nexports.BinaryDocumentIcon = BinaryDocumentIcon;\nexports.BlockContentIcon = BlockContentIcon;\nexports.BlockElementIcon = BlockElementIcon;\nexports.BlockquoteIcon = BlockquoteIcon;\nexports.BoldIcon = BoldIcon;\nexports.BoltIcon = BoltIcon;\nexports.BookIcon = BookIcon;\nexports.BottleIcon = BottleIcon;\nexports.BulbFilledIcon = BulbFilledIcon;\nexports.BulbOutlineIcon = BulbOutlineIcon;\nexports.CalendarIcon = CalendarIcon;\nexports.CaseIcon = CaseIcon;\nexports.ChartUpwardIcon = ChartUpwardIcon;\nexports.CheckmarkCircleIcon = CheckmarkCircleIcon;\nexports.CheckmarkIcon = CheckmarkIcon;\nexports.ChevronDownIcon = ChevronDownIcon;\nexports.ChevronLeftIcon = ChevronLeftIcon;\nexports.ChevronRightIcon = ChevronRightIcon;\nexports.ChevronUpIcon = ChevronUpIcon;\nexports.CircleIcon = CircleIcon;\nexports.ClipboardIcon = ClipboardIcon;\nexports.ClipboardImageIcon = ClipboardImageIcon;\nexports.ClockIcon = ClockIcon;\nexports.CloseCircleIcon = CloseCircleIcon;\nexports.CloseIcon = CloseIcon;\nexports.CodeBlockIcon = CodeBlockIcon;\nexports.CodeIcon = CodeIcon;\nexports.CogIcon = CogIcon;\nexports.CollapseIcon = CollapseIcon;\nexports.ColorWheelIcon = ColorWheelIcon;\nexports.CommentIcon = CommentIcon;\nexports.ComponentIcon = ComponentIcon;\nexports.ComposeIcon = ComposeIcon;\nexports.ControlsIcon = ControlsIcon;\nexports.CopyIcon = CopyIcon;\nexports.CreditCardIcon = CreditCardIcon;\nexports.CropIcon = CropIcon;\nexports.CubeIcon = CubeIcon;\nexports.DashboardIcon = DashboardIcon;\nexports.DatabaseIcon = DatabaseIcon;\nexports.DesktopIcon = DesktopIcon;\nexports.DocumentIcon = DocumentIcon;\nexports.DocumentPdfIcon = DocumentPdfIcon;\nexports.DocumentRemoveIcon = DocumentRemoveIcon;\nexports.DocumentSheetIcon = DocumentSheetIcon;\nexports.DocumentTextIcon = DocumentTextIcon;\nexports.DocumentVideoIcon = DocumentVideoIcon;\nexports.DocumentWordIcon = DocumentWordIcon;\nexports.DocumentZipIcon = DocumentZipIcon;\nexports.DocumentsIcon = DocumentsIcon;\nexports.DotIcon = DotIcon;\nexports.DoubleChevronDownIcon = DoubleChevronDownIcon;\nexports.DoubleChevronLeftIcon = DoubleChevronLeftIcon;\nexports.DoubleChevronRightIcon = DoubleChevronRightIcon;\nexports.DoubleChevronUpIcon = DoubleChevronUpIcon;\nexports.DownloadIcon = DownloadIcon;\nexports.DragHandleIcon = DragHandleIcon;\nexports.DropIcon = DropIcon;\nexports.EarthAmericasIcon = EarthAmericasIcon;\nexports.EarthGlobeIcon = EarthGlobeIcon;\nexports.EditIcon = EditIcon;\nexports.EllipsisHorizontalIcon = EllipsisHorizontalIcon;\nexports.EllipsisVerticalIcon = EllipsisVerticalIcon;\nexports.EnterIcon = EnterIcon;\nexports.EnterRightIcon = EnterRightIcon;\nexports.EnvelopeIcon = EnvelopeIcon;\nexports.EqualIcon = EqualIcon;\nexports.ErrorFilledIcon = ErrorFilledIcon;\nexports.ErrorOutlineIcon = ErrorOutlineIcon;\nexports.ExpandIcon = ExpandIcon;\nexports.EyeClosedIcon = EyeClosedIcon;\nexports.EyeOpenIcon = EyeOpenIcon;\nexports.FilterIcon = FilterIcon;\nexports.FolderIcon = FolderIcon;\nexports.GenerateIcon = GenerateIcon;\nexports.GroqIcon = GroqIcon;\nexports.HeartFilledIcon = HeartFilledIcon;\nexports.HeartIcon = HeartIcon;\nexports.HelpCircleIcon = HelpCircleIcon;\nexports.HomeIcon = HomeIcon;\nexports.IceCreamIcon = IceCreamIcon;\nexports.Icon = Icon;\nexports.ImageIcon = ImageIcon;\nexports.ImageRemoveIcon = ImageRemoveIcon;\nexports.ImagesIcon = ImagesIcon;\nexports.InfoFilledIcon = InfoFilledIcon;\nexports.InfoOutlineIcon = InfoOutlineIcon;\nexports.InlineElementIcon = InlineElementIcon;\nexports.InlineIcon = InlineIcon;\nexports.InsertAboveIcon = InsertAboveIcon;\nexports.InsertBelowIcon = InsertBelowIcon;\nexports.ItalicIcon = ItalicIcon;\nexports.JoystickIcon = JoystickIcon;\nexports.JsonIcon = JsonIcon;\nexports.LaunchIcon = LaunchIcon;\nexports.LeaveIcon = LeaveIcon;\nexports.LemonIcon = LemonIcon;\nexports.LinkIcon = LinkIcon;\nexports.LinkRemovedIcon = LinkRemovedIcon;\nexports.LockIcon = LockIcon;\nexports.LogoJsIcon = LogoJsIcon;\nexports.LogoTsIcon = LogoTsIcon;\nexports.MasterDetailIcon = MasterDetailIcon;\nexports.MenuIcon = MenuIcon;\nexports.MobileDeviceIcon = MobileDeviceIcon;\nexports.MoonIcon = MoonIcon;\nexports.NumberIcon = NumberIcon;\nexports.OkHandIcon = OkHandIcon;\nexports.OlistIcon = OlistIcon;\nexports.OverageIcon = OverageIcon;\nexports.PackageIcon = PackageIcon;\nexports.PanelLeftIcon = PanelLeftIcon;\nexports.PanelRightIcon = PanelRightIcon;\nexports.PauseIcon = PauseIcon;\nexports.PinIcon = PinIcon;\nexports.PinRemovedIcon = PinRemovedIcon;\nexports.PlayIcon = PlayIcon;\nexports.PlugIcon = PlugIcon;\nexports.PresentationIcon = PresentationIcon;\nexports.PublishIcon = PublishIcon;\nexports.ReadOnlyIcon = ReadOnlyIcon;\nexports.RedoIcon = RedoIcon;\nexports.RefreshIcon = RefreshIcon;\nexports.RemoveCircleIcon = RemoveCircleIcon;\nexports.RemoveIcon = RemoveIcon;\nexports.ResetIcon = ResetIcon;\nexports.RestoreIcon = RestoreIcon;\nexports.RetrieveIcon = RetrieveIcon;\nexports.RetryIcon = RetryIcon;\nexports.RevertIcon = RevertIcon;\nexports.RobotIcon = RobotIcon;\nexports.RocketIcon = RocketIcon;\nexports.SchemaIcon = SchemaIcon;\nexports.SearchIcon = SearchIcon;\nexports.SelectIcon = SelectIcon;\nexports.ShareIcon = ShareIcon;\nexports.SortIcon = SortIcon;\nexports.SparkleIcon = SparkleIcon;\nexports.SparklesIcon = SparklesIcon;\nexports.SpinnerIcon = SpinnerIcon;\nexports.SplitHorizontalIcon = SplitHorizontalIcon;\nexports.SplitVerticalIcon = SplitVerticalIcon;\nexports.SquareIcon = SquareIcon;\nexports.StackCompactIcon = StackCompactIcon;\nexports.StackIcon = StackIcon;\nexports.StarIcon = StarIcon;\nexports.StopIcon = StopIcon;\nexports.StrikethroughIcon = StrikethroughIcon;\nexports.StringIcon = StringIcon;\nexports.SunIcon = SunIcon;\nexports.SyncIcon = SyncIcon;\nexports.TabletDeviceIcon = TabletDeviceIcon;\nexports.TagIcon = TagIcon;\nexports.TagsIcon = TagsIcon;\nexports.TerminalIcon = TerminalIcon;\nexports.TextIcon = TextIcon;\nexports.ThLargeIcon = ThLargeIcon;\nexports.ThListIcon = ThListIcon;\nexports.TiersIcon = TiersIcon;\nexports.ToggleArrowRightIcon = ToggleArrowRightIcon;\nexports.TokenIcon = TokenIcon;\nexports.TransferIcon = TransferIcon;\nexports.TranslateIcon = TranslateIcon;\nexports.TrashIcon = TrashIcon;\nexports.TrendUpwardIcon = TrendUpwardIcon;\nexports.TriangleOutlineIcon = TriangleOutlineIcon;\nexports.TrolleyIcon = TrolleyIcon;\nexports.TruncateIcon = TruncateIcon;\nexports.TwitterIcon = TwitterIcon;\nexports.UlistIcon = UlistIcon;\nexports.UnderlineIcon = UnderlineIcon;\nexports.UndoIcon = UndoIcon;\nexports.UnknownIcon = UnknownIcon;\nexports.UnlockIcon = UnlockIcon;\nexports.UnpublishIcon = UnpublishIcon;\nexports.UploadIcon = UploadIcon;\nexports.UserIcon = UserIcon;\nexports.UsersIcon = UsersIcon;\nexports.WarningFilledIcon = WarningFilledIcon;\nexports.WarningOutlineIcon = WarningOutlineIcon;\nexports.WrenchIcon = WrenchIcon;\nexports.icons = icons;\n//# sourceMappingURL=index.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/icons/dist/index.cjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/eventsource/node.js":
/*!**************************************************!*\
  !*** ./node_modules/@sanity/eventsource/node.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = __webpack_require__(/*! eventsource */ \"(rsc)/./node_modules/eventsource/lib/eventsource.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9ldmVudHNvdXJjZS9ub2RlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsOEdBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BzYW5pdHkvZXZlbnRzb3VyY2Uvbm9kZS5qcz9kODg5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZXZlbnRzb3VyY2UnKVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/eventsource/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/preview-kit/dist/client.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/@sanity/preview-kit/dist/client.cjs ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar client = __webpack_require__(/*! @sanity/client */ \"(rsc)/./node_modules/@sanity/client/dist/index.browser.js\");\nvar isPlainObject = __webpack_require__(/*! lodash.isplainobject */ \"(rsc)/./node_modules/lodash.isplainobject/index.js\");\nvar invariant = __webpack_require__(/*! tiny-invariant */ \"(rsc)/./node_modules/tiny-invariant/dist/tiny-invariant.cjs.js\");\nvar stega = __webpack_require__(/*! @vercel/stega */ \"(rsc)/./node_modules/@sanity/preview-kit/node_modules/@vercel/stega/dist/cjs/index.js\");\nfunction _interopDefaultCompat(e) {\n    return e && typeof e === \"object\" && \"default\" in e ? e : {\n        default: e\n    };\n}\nvar isPlainObject__default = /*#__PURE__*/ _interopDefaultCompat(isPlainObject);\nvar invariant__default = /*#__PURE__*/ _interopDefaultCompat(invariant);\nconst ESCAPE = {\n    \"\\f\": \"\\\\f\",\n    \"\\n\": \"\\\\n\",\n    \"\\r\": \"\\\\r\",\n    \"\t\": \"\\\\t\",\n    \"'\": \"\\\\'\",\n    \"\\\\\": \"\\\\\\\\\"\n};\nconst UNESCAPE = {\n    \"\\\\f\": \"\\f\",\n    \"\\\\n\": \"\\n\",\n    \"\\\\r\": \"\\r\",\n    \"\\\\t\": \"\t\",\n    \"\\\\'\": \"'\",\n    \"\\\\\\\\\": \"\\\\\"\n};\nfunction normalisedJsonPath(path) {\n    return \"$\".concat(path.map((key)=>{\n        if (typeof key === \"string\") {\n            const escapedKey = key.replace(/[\\f\\n\\r\\t'\\\\]/g, (match)=>{\n                return ESCAPE[match];\n            });\n            return \"['\".concat(escapedKey, \"']\");\n        }\n        return \"[\".concat(key, \"]\");\n    }).join(\"\"));\n}\nfunction parseNormalisedJsonPath(path) {\n    const parsed = [];\n    const parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]/g;\n    let match;\n    while((match = parseRe.exec(path)) !== null){\n        if (match[1] !== void 0) {\n            const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m)=>{\n                return UNESCAPE[m];\n            });\n            parsed.push(key);\n            continue;\n        }\n        if (match[2] !== void 0) {\n            parsed.push(parseInt(match[2], 10));\n            continue;\n        }\n    }\n    return parsed;\n}\nfunction defineEditLink(_studioUrl) {\n    const studioUrl = _studioUrl.replace(/\\/$/, \"\");\n    return (sourceDocument, path)=>\"\".concat(studioUrl, \"/intent/edit/id=\").concat(sourceDocument._id, \";path=\").concat(encodeJsonPathToUriComponent(path));\n}\nfunction encodeJsonPathToUriComponent(path) {\n    const sourcePath = Array.isArray(path) ? path : parseNormalisedJsonPath(path);\n    return encodeURIComponent(sourcePath.map((key, i)=>// eslint-disable-next-line no-nested-ternary\n        typeof key === \"number\" ? \"[\".concat(key, \"]\") : i > 0 ? \".\".concat(key) : key).join(\"\"));\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isArray(value) {\n    return value !== null && Array.isArray(value);\n}\nfunction encode(response, encoder) {\n    if (!response.resultSourceMap) {\n        throw new TypeError(\"Missing resultSourceMap\");\n    }\n    response.result = encodeIntoResult(response, encoder);\n    return response;\n}\nfunction encodeIntoResult(response, encoder) {\n    return walkMap(response.result, (value, path)=>{\n        if (typeof value !== \"string\") {\n            return value;\n        }\n        const resolveMappingResult = resolveMapping(path, response.resultSourceMap);\n        if (!resolveMappingResult) {\n            return value;\n        }\n        const [mapping, , pathSuffix] = resolveMappingResult;\n        if (mapping.type !== \"value\") {\n            return value;\n        }\n        if (mapping.source.type !== \"documentValue\") {\n            return value;\n        }\n        const sourceDocument = response.resultSourceMap.documents[mapping.source.document];\n        const sourcePath = response.resultSourceMap.paths[mapping.source.path];\n        return encoder(value, sourceDocument, sourcePath + pathSuffix);\n    });\n}\nfunction walkMap(value, mappingFn) {\n    let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    if (isArray(value)) {\n        return value.map((v, idx)=>walkMap(v, mappingFn, path.concat(idx)));\n    }\n    if (isRecord(value)) {\n        return Object.fromEntries(Object.entries(value).map((_ref)=>{\n            let [k, v] = _ref;\n            return [\n                k,\n                walkMap(v, mappingFn, path.concat(k))\n            ];\n        }));\n    }\n    return mappingFn(value, path);\n}\nfunction resolveMapping(resultPath, csm, logger) {\n    const resultJsonPath = normalisedJsonPath(resultPath);\n    if (!csm.mappings) {\n        logger == null ? void 0 : logger.error(\"Missing resultSourceMap.mappings\", {\n            resultSourceMap: csm\n        });\n        return void 0;\n    }\n    if (csm.mappings[resultJsonPath] !== void 0) {\n        return [\n            csm.mappings[resultJsonPath],\n            resultJsonPath,\n            \"\"\n        ];\n    }\n    const mappings = Object.entries(csm.mappings).filter((_ref2)=>{\n        let [key] = _ref2;\n        return resultJsonPath.startsWith(key);\n    }).sort((_ref3, _ref4)=>{\n        let [key1] = _ref3;\n        let [key2] = _ref4;\n        return key2.length - key1.length;\n    });\n    if (mappings.length == 0) {\n        return void 0;\n    }\n    const [matchedPath, mapping] = mappings[0];\n    const pathSuffix = resultJsonPath.substring(matchedPath.length);\n    return [\n        mapping,\n        matchedPath,\n        pathSuffix\n    ];\n}\nconst filterDefault = (_ref5)=>{\n    let { path } = _ref5;\n    const endPath = path.at(-1);\n    if (path.at(-2) === \"slug\" && endPath === \"current\") {\n        return false;\n    }\n    if (typeof endPath === \"string\" && endPath.startsWith(\"_\")) {\n        return false;\n    }\n    if (typeof endPath === \"number\" && path.at(-2) === \"marks\" && typeof path.at(-3) === \"number\" && path.at(-4) === \"children\" && typeof path.at(-5) === \"number\") {\n        return false;\n    }\n    if (endPath === \"href\" && typeof path.at(-2) === \"number\" && path.at(-3) === \"markDefs\" && typeof path.at(-4) === \"number\") {\n        return false;\n    }\n    if (typeof endPath === \"string\" && typeof path.at(-2) === \"number\") {\n        if (endPath === \"style\" || endPath === \"listItem\") {\n            return false;\n        }\n    }\n    return true;\n};\nconst TRUNCATE_LENGTH = 20;\nfunction createTranscoder(studioUrl, encodeSourceMapAtPath, logger) {\n    const createEditLink = defineEditLink(studioUrl);\n    const report = {\n        encoded: [],\n        skipped: []\n    };\n    const transcode = (input, sourceDocument, sourcePath)=>{\n        if ((typeof encodeSourceMapAtPath === \"function\" ? encodeSourceMapAtPath({\n            path: sourcePath,\n            filterDefault\n        }) : filterDefault({\n            path: sourcePath,\n            filterDefault\n        })) === false) {\n            if (logger) {\n                report.skipped.push({\n                    path: prettyPathForLogging(sourcePath),\n                    value: \"\".concat(input.slice(0, TRUNCATE_LENGTH)).concat(input.length > TRUNCATE_LENGTH ? \"...\" : \"\"),\n                    length: input.length\n                });\n            }\n            return input;\n        }\n        if (logger) {\n            report.encoded.push({\n                path: prettyPathForLogging(sourcePath),\n                value: \"\".concat(input.slice(0, TRUNCATE_LENGTH)).concat(input.length > TRUNCATE_LENGTH ? \"...\" : \"\"),\n                length: input.length\n            });\n        }\n        return stega.vercelStegaCombine(input, {\n            origin: \"sanity.io\",\n            href: createEditLink(sourceDocument, sourcePath)\n        }, \"auto\");\n    };\n    return {\n        report,\n        transcode,\n        walk: (input)=>{\n            report.encoded.length = 0;\n            report.skipped.length = 0;\n            return encode(input, (value, sourceDocument, path)=>transcode(value, sourceDocument, parseNormalisedJsonPath(path)));\n        }\n    };\n}\nfunction prettyPathForLogging(path) {\n    return path.map((segment, index)=>typeof segment === \"number\" ? \"[\".concat(segment, \"]\") : index > 0 ? \".\".concat(segment) : segment).join(\"\");\n}\nfunction transcodeResponse(_ref6) {\n    let { studioUrl, encodeSourceMapAtPath, logger } = _ref6;\n    const transcoder = createTranscoder(studioUrl, encodeSourceMapAtPath, logger);\n    return {\n        onResponse: (response)=>{\n            if (!isBodyResponse(response)) {\n                return response;\n            }\n            if (Array.isArray(response.body) || typeof response.body === \"string\" || isPlainObject__default.default(response.body)) {\n                if (!isContentSourceMapBody(response.body)) {\n                    if (logger) {\n                        logger == null ? void 0 : logger.error(\"[@sanity/preview-kit]: Missing Content Source Map from response body\", response.body);\n                    }\n                    return response;\n                }\n                const body = transcoder.walk(response.body);\n                if (logger) {\n                    const isSkipping = transcoder.report.skipped.length;\n                    const isEncoding = transcoder.report.encoded.length;\n                    if (isSkipping || isEncoding) {\n                        logger == null ? void 0 : logger.groupCollapsed(\"[@sanity/preview-kit]: Stega encoding source map into result\");\n                        logger == null ? void 0 : logger.log(\"[@sanity/preview-kit]: Paths encoded: \".concat(transcoder.report.encoded.length, \", skipped: \").concat(transcoder.report.skipped.length));\n                    }\n                    if (transcoder.report.encoded.length > 0) {\n                        logger == null ? void 0 : logger.log(\"[@sanity/preview-kit]: Table of encoded paths\");\n                        logger == null ? void 0 : logger.table(transcoder.report.encoded);\n                    }\n                    if (transcoder.report.skipped.length > 0) {\n                        const skipped = /* @__PURE__ */ new Set();\n                        for (const { path } of transcoder.report.skipped){\n                            skipped.add(path.replace(/\\[\\d+\\]/g, \"[]\"));\n                        }\n                        logger == null ? void 0 : logger.log(\"[@sanity/preview-kit]: List of skipped paths\", [\n                            ...skipped.values()\n                        ]);\n                    }\n                    if (isSkipping || isEncoding) {\n                        logger == null ? void 0 : logger.groupEnd();\n                    }\n                }\n                return {\n                    ...response,\n                    body\n                };\n            }\n            return response;\n        }\n    };\n}\nfunction createHttpRequest(_ref7) {\n    let { studioUrl, encodeSourceMapAtPath, logger } = _ref7;\n    invariant__default.default(studioUrl, \"Missing studioUrl in client config\");\n    const superRequester = client.requester.clone();\n    superRequester.use(transcodeResponse({\n        studioUrl,\n        encodeSourceMapAtPath,\n        logger\n    }));\n    function httpRequest(options) {\n        let requester = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : superRequester;\n        return requester({\n            maxRedirects: 0,\n            ...options\n        });\n    }\n    httpRequest.defaultRequester = superRequester;\n    return httpRequest;\n}\nfunction isBodyResponse(response) {\n    return typeof response === \"object\" && response !== null;\n}\nfunction isContentSourceMapBody(body) {\n    return typeof body === \"object\" && body !== null && \"resultSourceMap\" in body;\n}\nfunction mapToEditLinks(response, studioUrl) {\n    const createEditLink = defineEditLink(studioUrl);\n    return encodeIntoResult(response, (_, sourceDocument, path)=>{\n        return createEditLink(sourceDocument, path);\n    });\n}\nconst createClient = (config)=>{\n    const { encodeSourceMap = detectEnableSourceMap(), encodeSourceMapAtPath, studioUrl = detectStudioUrl(), logger, ...options } = config;\n    let shouldEncodeSourceMap = encodeSourceMap === true;\n    if (encodeSourceMap === \"auto\") {\n        shouldEncodeSourceMap = isVercelPreviewEnvironment();\n    }\n    try {\n        if (shouldEncodeSourceMap && config.resultSourceMap !== false) {\n            logger == null ? void 0 : logger.debug(\"[@sanity/preview-kit]: Creating source map enabled client\");\n            const httpRequest = createHttpRequest({\n                ...config,\n                studioUrl\n            });\n            return new client.SanityClient(httpRequest, {\n                ...options,\n                // Source maps by Content Lake are required in order to know where to insert the encoded source maps into strings\n                resultSourceMap: true\n            });\n        }\n    } catch (err) {\n        console.error(\"[@sanity/preview-kit]: Error creating client\", err, \"falling back to non-embedded sourcemap mode\");\n    }\n    return client.createClient(options);\n};\nfunction isVercelPreviewEnvironment() {\n    try {\n        return undefined.VERCEL_ENV === \"preview\";\n    } catch  {}\n    try {\n        return process.env.VERCEL_ENV === \"preview\";\n    } catch  {}\n    return false;\n}\nfunction detectEnableSourceMap() {\n    try {\n        return undefined.SANITY_SOURCE_MAP === \"true\";\n    } catch  {}\n    try {\n        return process.env.SANITY_SOURCE_MAP === \"true\";\n    } catch  {}\n    return false;\n}\nfunction detectStudioUrl() {\n    try {\n        return undefined.SANITY_STUDIO_URL;\n    } catch  {}\n    try {\n        return process.env.SANITY_STUDIO_URL;\n    } catch  {}\n}\nexports.createClient = createClient;\nexports.mapToEditLinks = mapToEditLinks; //# sourceMappingURL=client.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/preview-kit/dist/client.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@sanity/icons/dist/index.cjs.js":
/*!******************************************************!*\
  !*** ./node_modules/@sanity/icons/dist/index.cjs.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDeniedIcon: () => (/* binding */ AccessDeniedIcon),\n/* harmony export */   ActivityIcon: () => (/* binding */ ActivityIcon),\n/* harmony export */   AddCircleIcon: () => (/* binding */ AddCircleIcon),\n/* harmony export */   AddCommentIcon: () => (/* binding */ AddCommentIcon),\n/* harmony export */   AddIcon: () => (/* binding */ AddIcon),\n/* harmony export */   ApiIcon: () => (/* binding */ ApiIcon),\n/* harmony export */   ArchiveIcon: () => (/* binding */ ArchiveIcon),\n/* harmony export */   ArrowDownIcon: () => (/* binding */ ArrowDownIcon),\n/* harmony export */   ArrowLeftIcon: () => (/* binding */ ArrowLeftIcon),\n/* harmony export */   ArrowRightIcon: () => (/* binding */ ArrowRightIcon),\n/* harmony export */   ArrowTopRightIcon: () => (/* binding */ ArrowTopRightIcon),\n/* harmony export */   ArrowUpIcon: () => (/* binding */ ArrowUpIcon),\n/* harmony export */   BarChartIcon: () => (/* binding */ BarChartIcon),\n/* harmony export */   BasketIcon: () => (/* binding */ BasketIcon),\n/* harmony export */   BellIcon: () => (/* binding */ BellIcon),\n/* harmony export */   BillIcon: () => (/* binding */ BillIcon),\n/* harmony export */   BinaryDocumentIcon: () => (/* binding */ BinaryDocumentIcon),\n/* harmony export */   BlockContentIcon: () => (/* binding */ BlockContentIcon),\n/* harmony export */   BlockElementIcon: () => (/* binding */ BlockElementIcon),\n/* harmony export */   BlockquoteIcon: () => (/* binding */ BlockquoteIcon),\n/* harmony export */   BoldIcon: () => (/* binding */ BoldIcon),\n/* harmony export */   BoltIcon: () => (/* binding */ BoltIcon),\n/* harmony export */   BookIcon: () => (/* binding */ BookIcon),\n/* harmony export */   BottleIcon: () => (/* binding */ BottleIcon),\n/* harmony export */   BulbFilledIcon: () => (/* binding */ BulbFilledIcon),\n/* harmony export */   BulbOutlineIcon: () => (/* binding */ BulbOutlineIcon),\n/* harmony export */   CalendarIcon: () => (/* binding */ CalendarIcon),\n/* harmony export */   CaseIcon: () => (/* binding */ CaseIcon),\n/* harmony export */   ChartUpwardIcon: () => (/* binding */ ChartUpwardIcon),\n/* harmony export */   CheckmarkCircleIcon: () => (/* binding */ CheckmarkCircleIcon),\n/* harmony export */   CheckmarkIcon: () => (/* binding */ CheckmarkIcon),\n/* harmony export */   ChevronDownIcon: () => (/* binding */ ChevronDownIcon),\n/* harmony export */   ChevronLeftIcon: () => (/* binding */ ChevronLeftIcon),\n/* harmony export */   ChevronRightIcon: () => (/* binding */ ChevronRightIcon),\n/* harmony export */   ChevronUpIcon: () => (/* binding */ ChevronUpIcon),\n/* harmony export */   CircleIcon: () => (/* binding */ CircleIcon),\n/* harmony export */   ClipboardIcon: () => (/* binding */ ClipboardIcon),\n/* harmony export */   ClipboardImageIcon: () => (/* binding */ ClipboardImageIcon),\n/* harmony export */   ClockIcon: () => (/* binding */ ClockIcon),\n/* harmony export */   CloseCircleIcon: () => (/* binding */ CloseCircleIcon),\n/* harmony export */   CloseIcon: () => (/* binding */ CloseIcon),\n/* harmony export */   CodeBlockIcon: () => (/* binding */ CodeBlockIcon),\n/* harmony export */   CodeIcon: () => (/* binding */ CodeIcon),\n/* harmony export */   CogIcon: () => (/* binding */ CogIcon),\n/* harmony export */   CollapseIcon: () => (/* binding */ CollapseIcon),\n/* harmony export */   ColorWheelIcon: () => (/* binding */ ColorWheelIcon),\n/* harmony export */   CommentIcon: () => (/* binding */ CommentIcon),\n/* harmony export */   ComponentIcon: () => (/* binding */ ComponentIcon),\n/* harmony export */   ComposeIcon: () => (/* binding */ ComposeIcon),\n/* harmony export */   ControlsIcon: () => (/* binding */ ControlsIcon),\n/* harmony export */   CopyIcon: () => (/* binding */ CopyIcon),\n/* harmony export */   CreditCardIcon: () => (/* binding */ CreditCardIcon),\n/* harmony export */   CropIcon: () => (/* binding */ CropIcon),\n/* harmony export */   CubeIcon: () => (/* binding */ CubeIcon),\n/* harmony export */   DashboardIcon: () => (/* binding */ DashboardIcon),\n/* harmony export */   DatabaseIcon: () => (/* binding */ DatabaseIcon),\n/* harmony export */   DesktopIcon: () => (/* binding */ DesktopIcon),\n/* harmony export */   DocumentIcon: () => (/* binding */ DocumentIcon),\n/* harmony export */   DocumentPdfIcon: () => (/* binding */ DocumentPdfIcon),\n/* harmony export */   DocumentRemoveIcon: () => (/* binding */ DocumentRemoveIcon),\n/* harmony export */   DocumentSheetIcon: () => (/* binding */ DocumentSheetIcon),\n/* harmony export */   DocumentTextIcon: () => (/* binding */ DocumentTextIcon),\n/* harmony export */   DocumentVideoIcon: () => (/* binding */ DocumentVideoIcon),\n/* harmony export */   DocumentWordIcon: () => (/* binding */ DocumentWordIcon),\n/* harmony export */   DocumentZipIcon: () => (/* binding */ DocumentZipIcon),\n/* harmony export */   DocumentsIcon: () => (/* binding */ DocumentsIcon),\n/* harmony export */   DotIcon: () => (/* binding */ DotIcon),\n/* harmony export */   DoubleChevronDownIcon: () => (/* binding */ DoubleChevronDownIcon),\n/* harmony export */   DoubleChevronLeftIcon: () => (/* binding */ DoubleChevronLeftIcon),\n/* harmony export */   DoubleChevronRightIcon: () => (/* binding */ DoubleChevronRightIcon),\n/* harmony export */   DoubleChevronUpIcon: () => (/* binding */ DoubleChevronUpIcon),\n/* harmony export */   DownloadIcon: () => (/* binding */ DownloadIcon),\n/* harmony export */   DragHandleIcon: () => (/* binding */ DragHandleIcon),\n/* harmony export */   DropIcon: () => (/* binding */ DropIcon),\n/* harmony export */   EarthAmericasIcon: () => (/* binding */ EarthAmericasIcon),\n/* harmony export */   EarthGlobeIcon: () => (/* binding */ EarthGlobeIcon),\n/* harmony export */   EditIcon: () => (/* binding */ EditIcon),\n/* harmony export */   EllipsisHorizontalIcon: () => (/* binding */ EllipsisHorizontalIcon),\n/* harmony export */   EllipsisVerticalIcon: () => (/* binding */ EllipsisVerticalIcon),\n/* harmony export */   EnterIcon: () => (/* binding */ EnterIcon),\n/* harmony export */   EnterRightIcon: () => (/* binding */ EnterRightIcon),\n/* harmony export */   EnvelopeIcon: () => (/* binding */ EnvelopeIcon),\n/* harmony export */   EqualIcon: () => (/* binding */ EqualIcon),\n/* harmony export */   ErrorFilledIcon: () => (/* binding */ ErrorFilledIcon),\n/* harmony export */   ErrorOutlineIcon: () => (/* binding */ ErrorOutlineIcon),\n/* harmony export */   ExpandIcon: () => (/* binding */ ExpandIcon),\n/* harmony export */   EyeClosedIcon: () => (/* binding */ EyeClosedIcon),\n/* harmony export */   EyeOpenIcon: () => (/* binding */ EyeOpenIcon),\n/* harmony export */   FilterIcon: () => (/* binding */ FilterIcon),\n/* harmony export */   FolderIcon: () => (/* binding */ FolderIcon),\n/* harmony export */   GenerateIcon: () => (/* binding */ GenerateIcon),\n/* harmony export */   GroqIcon: () => (/* binding */ GroqIcon),\n/* harmony export */   HeartFilledIcon: () => (/* binding */ HeartFilledIcon),\n/* harmony export */   HeartIcon: () => (/* binding */ HeartIcon),\n/* harmony export */   HelpCircleIcon: () => (/* binding */ HelpCircleIcon),\n/* harmony export */   HomeIcon: () => (/* binding */ HomeIcon),\n/* harmony export */   IceCreamIcon: () => (/* binding */ IceCreamIcon),\n/* harmony export */   Icon: () => (/* binding */ Icon),\n/* harmony export */   ImageIcon: () => (/* binding */ ImageIcon),\n/* harmony export */   ImageRemoveIcon: () => (/* binding */ ImageRemoveIcon),\n/* harmony export */   ImagesIcon: () => (/* binding */ ImagesIcon),\n/* harmony export */   InfoFilledIcon: () => (/* binding */ InfoFilledIcon),\n/* harmony export */   InfoOutlineIcon: () => (/* binding */ InfoOutlineIcon),\n/* harmony export */   InlineElementIcon: () => (/* binding */ InlineElementIcon),\n/* harmony export */   InlineIcon: () => (/* binding */ InlineIcon),\n/* harmony export */   InsertAboveIcon: () => (/* binding */ InsertAboveIcon),\n/* harmony export */   InsertBelowIcon: () => (/* binding */ InsertBelowIcon),\n/* harmony export */   ItalicIcon: () => (/* binding */ ItalicIcon),\n/* harmony export */   JoystickIcon: () => (/* binding */ JoystickIcon),\n/* harmony export */   JsonIcon: () => (/* binding */ JsonIcon),\n/* harmony export */   LaunchIcon: () => (/* binding */ LaunchIcon),\n/* harmony export */   LeaveIcon: () => (/* binding */ LeaveIcon),\n/* harmony export */   LemonIcon: () => (/* binding */ LemonIcon),\n/* harmony export */   LinkIcon: () => (/* binding */ LinkIcon),\n/* harmony export */   LinkRemovedIcon: () => (/* binding */ LinkRemovedIcon),\n/* harmony export */   LockIcon: () => (/* binding */ LockIcon),\n/* harmony export */   LogoJsIcon: () => (/* binding */ LogoJsIcon),\n/* harmony export */   LogoTsIcon: () => (/* binding */ LogoTsIcon),\n/* harmony export */   MasterDetailIcon: () => (/* binding */ MasterDetailIcon),\n/* harmony export */   MenuIcon: () => (/* binding */ MenuIcon),\n/* harmony export */   MobileDeviceIcon: () => (/* binding */ MobileDeviceIcon),\n/* harmony export */   MoonIcon: () => (/* binding */ MoonIcon),\n/* harmony export */   NumberIcon: () => (/* binding */ NumberIcon),\n/* harmony export */   OkHandIcon: () => (/* binding */ OkHandIcon),\n/* harmony export */   OlistIcon: () => (/* binding */ OlistIcon),\n/* harmony export */   OverageIcon: () => (/* binding */ OverageIcon),\n/* harmony export */   PackageIcon: () => (/* binding */ PackageIcon),\n/* harmony export */   PanelLeftIcon: () => (/* binding */ PanelLeftIcon),\n/* harmony export */   PanelRightIcon: () => (/* binding */ PanelRightIcon),\n/* harmony export */   PauseIcon: () => (/* binding */ PauseIcon),\n/* harmony export */   PinIcon: () => (/* binding */ PinIcon),\n/* harmony export */   PinRemovedIcon: () => (/* binding */ PinRemovedIcon),\n/* harmony export */   PlayIcon: () => (/* binding */ PlayIcon),\n/* harmony export */   PlugIcon: () => (/* binding */ PlugIcon),\n/* harmony export */   PresentationIcon: () => (/* binding */ PresentationIcon),\n/* harmony export */   PublishIcon: () => (/* binding */ PublishIcon),\n/* harmony export */   ReadOnlyIcon: () => (/* binding */ ReadOnlyIcon),\n/* harmony export */   RedoIcon: () => (/* binding */ RedoIcon),\n/* harmony export */   RefreshIcon: () => (/* binding */ RefreshIcon),\n/* harmony export */   RemoveCircleIcon: () => (/* binding */ RemoveCircleIcon),\n/* harmony export */   RemoveIcon: () => (/* binding */ RemoveIcon),\n/* harmony export */   ResetIcon: () => (/* binding */ ResetIcon),\n/* harmony export */   RestoreIcon: () => (/* binding */ RestoreIcon),\n/* harmony export */   RetrieveIcon: () => (/* binding */ RetrieveIcon),\n/* harmony export */   RetryIcon: () => (/* binding */ RetryIcon),\n/* harmony export */   RevertIcon: () => (/* binding */ RevertIcon),\n/* harmony export */   RobotIcon: () => (/* binding */ RobotIcon),\n/* harmony export */   RocketIcon: () => (/* binding */ RocketIcon),\n/* harmony export */   SchemaIcon: () => (/* binding */ SchemaIcon),\n/* harmony export */   SearchIcon: () => (/* binding */ SearchIcon),\n/* harmony export */   SelectIcon: () => (/* binding */ SelectIcon),\n/* harmony export */   ShareIcon: () => (/* binding */ ShareIcon),\n/* harmony export */   SortIcon: () => (/* binding */ SortIcon),\n/* harmony export */   SparkleIcon: () => (/* binding */ SparkleIcon),\n/* harmony export */   SparklesIcon: () => (/* binding */ SparklesIcon),\n/* harmony export */   SpinnerIcon: () => (/* binding */ SpinnerIcon),\n/* harmony export */   SplitHorizontalIcon: () => (/* binding */ SplitHorizontalIcon),\n/* harmony export */   SplitVerticalIcon: () => (/* binding */ SplitVerticalIcon),\n/* harmony export */   SquareIcon: () => (/* binding */ SquareIcon),\n/* harmony export */   StackCompactIcon: () => (/* binding */ StackCompactIcon),\n/* harmony export */   StackIcon: () => (/* binding */ StackIcon),\n/* harmony export */   StarIcon: () => (/* binding */ StarIcon),\n/* harmony export */   StopIcon: () => (/* binding */ StopIcon),\n/* harmony export */   StrikethroughIcon: () => (/* binding */ StrikethroughIcon),\n/* harmony export */   StringIcon: () => (/* binding */ StringIcon),\n/* harmony export */   SunIcon: () => (/* binding */ SunIcon),\n/* harmony export */   SyncIcon: () => (/* binding */ SyncIcon),\n/* harmony export */   TabletDeviceIcon: () => (/* binding */ TabletDeviceIcon),\n/* harmony export */   TagIcon: () => (/* binding */ TagIcon),\n/* harmony export */   TagsIcon: () => (/* binding */ TagsIcon),\n/* harmony export */   TerminalIcon: () => (/* binding */ TerminalIcon),\n/* harmony export */   TextIcon: () => (/* binding */ TextIcon),\n/* harmony export */   ThLargeIcon: () => (/* binding */ ThLargeIcon),\n/* harmony export */   ThListIcon: () => (/* binding */ ThListIcon),\n/* harmony export */   TiersIcon: () => (/* binding */ TiersIcon),\n/* harmony export */   ToggleArrowRightIcon: () => (/* binding */ ToggleArrowRightIcon),\n/* harmony export */   TokenIcon: () => (/* binding */ TokenIcon),\n/* harmony export */   TransferIcon: () => (/* binding */ TransferIcon),\n/* harmony export */   TranslateIcon: () => (/* binding */ TranslateIcon),\n/* harmony export */   TrashIcon: () => (/* binding */ TrashIcon),\n/* harmony export */   TrendUpwardIcon: () => (/* binding */ TrendUpwardIcon),\n/* harmony export */   TriangleOutlineIcon: () => (/* binding */ TriangleOutlineIcon),\n/* harmony export */   TrolleyIcon: () => (/* binding */ TrolleyIcon),\n/* harmony export */   TruncateIcon: () => (/* binding */ TruncateIcon),\n/* harmony export */   TwitterIcon: () => (/* binding */ TwitterIcon),\n/* harmony export */   UlistIcon: () => (/* binding */ UlistIcon),\n/* harmony export */   UnderlineIcon: () => (/* binding */ UnderlineIcon),\n/* harmony export */   UndoIcon: () => (/* binding */ UndoIcon),\n/* harmony export */   UnknownIcon: () => (/* binding */ UnknownIcon),\n/* harmony export */   UnlockIcon: () => (/* binding */ UnlockIcon),\n/* harmony export */   UnpublishIcon: () => (/* binding */ UnpublishIcon),\n/* harmony export */   UploadIcon: () => (/* binding */ UploadIcon),\n/* harmony export */   UserIcon: () => (/* binding */ UserIcon),\n/* harmony export */   UsersIcon: () => (/* binding */ UsersIcon),\n/* harmony export */   WarningFilledIcon: () => (/* binding */ WarningFilledIcon),\n/* harmony export */   WarningOutlineIcon: () => (/* binding */ WarningOutlineIcon),\n/* harmony export */   WrenchIcon: () => (/* binding */ WrenchIcon),\n/* harmony export */   icons: () => (/* binding */ icons)\n/* harmony export */ });\n/* harmony import */ var _index_cjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.cjs */ \"(ssr)/./node_modules/@sanity/icons/dist/index.cjs\");\n\n\nconst AccessDeniedIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.AccessDeniedIcon;\nconst ActivityIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ActivityIcon;\nconst AddCircleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.AddCircleIcon;\nconst AddCommentIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.AddCommentIcon;\nconst AddIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.AddIcon;\nconst ApiIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ApiIcon;\nconst ArchiveIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ArchiveIcon;\nconst ArrowDownIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ArrowDownIcon;\nconst ArrowLeftIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ArrowLeftIcon;\nconst ArrowRightIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ArrowRightIcon;\nconst ArrowTopRightIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ArrowTopRightIcon;\nconst ArrowUpIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ArrowUpIcon;\nconst BarChartIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BarChartIcon;\nconst BasketIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BasketIcon;\nconst BellIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BellIcon;\nconst BillIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BillIcon;\nconst BinaryDocumentIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BinaryDocumentIcon;\nconst BlockContentIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BlockContentIcon;\nconst BlockElementIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BlockElementIcon;\nconst BlockquoteIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BlockquoteIcon;\nconst BoldIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BoldIcon;\nconst BoltIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BoltIcon;\nconst BookIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BookIcon;\nconst BottleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BottleIcon;\nconst BulbFilledIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BulbFilledIcon;\nconst BulbOutlineIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.BulbOutlineIcon;\nconst CalendarIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CalendarIcon;\nconst CaseIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CaseIcon;\nconst ChartUpwardIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ChartUpwardIcon;\nconst CheckmarkCircleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CheckmarkCircleIcon;\nconst CheckmarkIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CheckmarkIcon;\nconst ChevronDownIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ChevronDownIcon;\nconst ChevronLeftIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ChevronLeftIcon;\nconst ChevronRightIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ChevronRightIcon;\nconst ChevronUpIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ChevronUpIcon;\nconst CircleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CircleIcon;\nconst ClipboardIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ClipboardIcon;\nconst ClipboardImageIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ClipboardImageIcon;\nconst ClockIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ClockIcon;\nconst CloseCircleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CloseCircleIcon;\nconst CloseIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CloseIcon;\nconst CodeBlockIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CodeBlockIcon;\nconst CodeIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CodeIcon;\nconst CogIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CogIcon;\nconst CollapseIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CollapseIcon;\nconst ColorWheelIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ColorWheelIcon;\nconst CommentIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CommentIcon;\nconst ComponentIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ComponentIcon;\nconst ComposeIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ComposeIcon;\nconst ControlsIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ControlsIcon;\nconst CopyIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CopyIcon;\nconst CreditCardIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CreditCardIcon;\nconst CropIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CropIcon;\nconst CubeIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.CubeIcon;\nconst DashboardIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DashboardIcon;\nconst DatabaseIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DatabaseIcon;\nconst DesktopIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DesktopIcon;\nconst DocumentIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentIcon;\nconst DocumentPdfIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentPdfIcon;\nconst DocumentRemoveIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentRemoveIcon;\nconst DocumentSheetIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentSheetIcon;\nconst DocumentTextIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentTextIcon;\nconst DocumentVideoIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentVideoIcon;\nconst DocumentWordIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentWordIcon;\nconst DocumentZipIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentZipIcon;\nconst DocumentsIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DocumentsIcon;\nconst DotIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DotIcon;\nconst DoubleChevronDownIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DoubleChevronDownIcon;\nconst DoubleChevronLeftIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DoubleChevronLeftIcon;\nconst DoubleChevronRightIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DoubleChevronRightIcon;\nconst DoubleChevronUpIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DoubleChevronUpIcon;\nconst DownloadIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DownloadIcon;\nconst DragHandleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DragHandleIcon;\nconst DropIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.DropIcon;\nconst EarthAmericasIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EarthAmericasIcon;\nconst EarthGlobeIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EarthGlobeIcon;\nconst EditIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EditIcon;\nconst EllipsisHorizontalIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EllipsisHorizontalIcon;\nconst EllipsisVerticalIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EllipsisVerticalIcon;\nconst EnterIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EnterIcon;\nconst EnterRightIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EnterRightIcon;\nconst EnvelopeIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EnvelopeIcon;\nconst EqualIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EqualIcon;\nconst ErrorFilledIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ErrorFilledIcon;\nconst ErrorOutlineIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ErrorOutlineIcon;\nconst ExpandIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ExpandIcon;\nconst EyeClosedIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EyeClosedIcon;\nconst EyeOpenIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.EyeOpenIcon;\nconst FilterIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.FilterIcon;\nconst FolderIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.FolderIcon;\nconst GenerateIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.GenerateIcon;\nconst GroqIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.GroqIcon;\nconst HeartFilledIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.HeartFilledIcon;\nconst HeartIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.HeartIcon;\nconst HelpCircleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.HelpCircleIcon;\nconst HomeIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.HomeIcon;\nconst IceCreamIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.IceCreamIcon;\nconst Icon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.Icon;\nconst ImageIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ImageIcon;\nconst ImageRemoveIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ImageRemoveIcon;\nconst ImagesIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ImagesIcon;\nconst InfoFilledIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.InfoFilledIcon;\nconst InfoOutlineIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.InfoOutlineIcon;\nconst InlineElementIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.InlineElementIcon;\nconst InlineIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.InlineIcon;\nconst InsertAboveIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.InsertAboveIcon;\nconst InsertBelowIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.InsertBelowIcon;\nconst ItalicIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ItalicIcon;\nconst JoystickIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.JoystickIcon;\nconst JsonIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.JsonIcon;\nconst LaunchIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LaunchIcon;\nconst LeaveIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LeaveIcon;\nconst LemonIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LemonIcon;\nconst LinkIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LinkIcon;\nconst LinkRemovedIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LinkRemovedIcon;\nconst LockIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LockIcon;\nconst LogoJsIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LogoJsIcon;\nconst LogoTsIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.LogoTsIcon;\nconst MasterDetailIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.MasterDetailIcon;\nconst MenuIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.MenuIcon;\nconst MobileDeviceIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.MobileDeviceIcon;\nconst MoonIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.MoonIcon;\nconst NumberIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.NumberIcon;\nconst OkHandIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.OkHandIcon;\nconst OlistIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.OlistIcon;\nconst OverageIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.OverageIcon;\nconst PackageIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PackageIcon;\nconst PanelLeftIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PanelLeftIcon;\nconst PanelRightIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PanelRightIcon;\nconst PauseIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PauseIcon;\nconst PinIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PinIcon;\nconst PinRemovedIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PinRemovedIcon;\nconst PlayIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PlayIcon;\nconst PlugIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PlugIcon;\nconst PresentationIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PresentationIcon;\nconst PublishIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.PublishIcon;\nconst ReadOnlyIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ReadOnlyIcon;\nconst RedoIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RedoIcon;\nconst RefreshIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RefreshIcon;\nconst RemoveCircleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RemoveCircleIcon;\nconst RemoveIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RemoveIcon;\nconst ResetIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ResetIcon;\nconst RestoreIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RestoreIcon;\nconst RetrieveIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RetrieveIcon;\nconst RetryIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RetryIcon;\nconst RevertIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RevertIcon;\nconst RobotIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RobotIcon;\nconst RocketIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.RocketIcon;\nconst SchemaIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SchemaIcon;\nconst SearchIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SearchIcon;\nconst SelectIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SelectIcon;\nconst ShareIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ShareIcon;\nconst SortIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SortIcon;\nconst SparkleIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SparkleIcon;\nconst SparklesIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SparklesIcon;\nconst SpinnerIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SpinnerIcon;\nconst SplitHorizontalIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SplitHorizontalIcon;\nconst SplitVerticalIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SplitVerticalIcon;\nconst SquareIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SquareIcon;\nconst StackCompactIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.StackCompactIcon;\nconst StackIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.StackIcon;\nconst StarIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.StarIcon;\nconst StopIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.StopIcon;\nconst StrikethroughIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.StrikethroughIcon;\nconst StringIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.StringIcon;\nconst SunIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SunIcon;\nconst SyncIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.SyncIcon;\nconst TabletDeviceIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TabletDeviceIcon;\nconst TagIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TagIcon;\nconst TagsIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TagsIcon;\nconst TerminalIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TerminalIcon;\nconst TextIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TextIcon;\nconst ThLargeIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ThLargeIcon;\nconst ThListIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ThListIcon;\nconst TiersIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TiersIcon;\nconst ToggleArrowRightIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.ToggleArrowRightIcon;\nconst TokenIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TokenIcon;\nconst TransferIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TransferIcon;\nconst TranslateIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TranslateIcon;\nconst TrashIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TrashIcon;\nconst TrendUpwardIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TrendUpwardIcon;\nconst TriangleOutlineIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TriangleOutlineIcon;\nconst TrolleyIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TrolleyIcon;\nconst TruncateIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TruncateIcon;\nconst TwitterIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.TwitterIcon;\nconst UlistIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UlistIcon;\nconst UnderlineIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UnderlineIcon;\nconst UndoIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UndoIcon;\nconst UnknownIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UnknownIcon;\nconst UnlockIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UnlockIcon;\nconst UnpublishIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UnpublishIcon;\nconst UploadIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UploadIcon;\nconst UserIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UserIcon;\nconst UsersIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.UsersIcon;\nconst WarningFilledIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.WarningFilledIcon;\nconst WarningOutlineIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.WarningOutlineIcon;\nconst WrenchIcon = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.WrenchIcon;\nconst icons = _index_cjs__WEBPACK_IMPORTED_MODULE_0__.icons;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@sanity/icons/dist/index.cjs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/_chunks/browserMiddleware-eLzHI4Fk.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks/browserMiddleware-eLzHI4Fk.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* binding */ BasePatch),\n/* harmony export */   BaseTransaction: () => (/* binding */ BaseTransaction),\n/* harmony export */   ClientError: () => (/* binding */ ClientError),\n/* harmony export */   ObservablePatch: () => (/* binding */ ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* binding */ ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* binding */ ObservableTransaction),\n/* harmony export */   Patch: () => (/* binding */ Patch),\n/* harmony export */   SanityClient: () => (/* binding */ SanityClient),\n/* harmony export */   ServerError: () => (/* binding */ ServerError),\n/* harmony export */   Transaction: () => (/* binding */ Transaction),\n/* harmony export */   defaultConfig: () => (/* binding */ defaultConfig),\n/* harmony export */   defineCreateClientExports: () => (/* binding */ defineCreateClientExports),\n/* harmony export */   envMiddleware: () => (/* binding */ envMiddleware),\n/* harmony export */   printNoDefaultExport: () => (/* binding */ printNoDefaultExport)\n/* harmony export */ });\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! get-it */ \"(rsc)/./node_modules/get-it/dist/index.react-server.js\");\n/* harmony import */ var get_it_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it/middleware */ \"(rsc)/./node_modules/get-it/dist/middleware.browser.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,lastValueFrom!=!rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,lastValueFrom!=!rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ \"(rsc)/./node_modules/rxjs/dist/cjs/operators/index.js\");\n\n\n\n\nconst MAX_ITEMS_IN_ERROR_MESSAGE = 5;\nclass ClientError extends Error {\n    constructor(res){\n        const props = extractErrorProps(res);\n        super(props.message);\n        this.statusCode = 400;\n        Object.assign(this, props);\n    }\n}\nclass ServerError extends Error {\n    constructor(res){\n        const props = extractErrorProps(res);\n        super(props.message);\n        this.statusCode = 500;\n        Object.assign(this, props);\n    }\n}\nfunction extractErrorProps(res) {\n    const body = res.body;\n    const props = {\n        response: res,\n        statusCode: res.statusCode,\n        responseBody: stringifyBody(body, res),\n        message: \"\",\n        details: void 0\n    };\n    if (body.error && body.message) {\n        props.message = \"\".concat(body.error, \" - \").concat(body.message);\n        return props;\n    }\n    if (isMutationError(body)) {\n        const allItems = body.error.items || [];\n        const items = allItems.slice(0, MAX_ITEMS_IN_ERROR_MESSAGE).map((item)=>{\n            var _a;\n            return (_a = item.error) == null ? void 0 : _a.description;\n        }).filter(Boolean);\n        let itemsStr = items.length ? \":\\n- \".concat(items.join(\"\\n- \")) : \"\";\n        if (allItems.length > MAX_ITEMS_IN_ERROR_MESSAGE) {\n            itemsStr += \"\\n...and \".concat(allItems.length - MAX_ITEMS_IN_ERROR_MESSAGE, \" more\");\n        }\n        props.message = \"\".concat(body.error.description).concat(itemsStr);\n        props.details = body.error;\n        return props;\n    }\n    if (body.error && body.error.description) {\n        props.message = body.error.description;\n        props.details = body.error;\n        return props;\n    }\n    props.message = body.error || body.message || httpErrorMessage(res);\n    return props;\n}\nfunction isMutationError(body) {\n    return isPlainObject(body) && isPlainObject(body.error) && body.error.type === \"mutationError\" && typeof body.error.description === \"string\";\n}\nfunction isPlainObject(obj) {\n    return typeof obj === \"object\" && obj !== null && !Array.isArray(obj);\n}\nfunction httpErrorMessage(res) {\n    const statusMessage = res.statusMessage ? \" \".concat(res.statusMessage) : \"\";\n    return \"\".concat(res.method, \"-request to \").concat(res.url, \" resulted in HTTP \").concat(res.statusCode).concat(statusMessage);\n}\nfunction stringifyBody(body, res) {\n    const contentType = (res.headers[\"content-type\"] || \"\").toLowerCase();\n    const isJson = contentType.indexOf(\"application/json\") !== -1;\n    return isJson ? JSON.stringify(body, null, 2) : body;\n}\nconst httpError = {\n    onResponse: (res)=>{\n        if (res.statusCode >= 500) {\n            throw new ServerError(res);\n        } else if (res.statusCode >= 400) {\n            throw new ClientError(res);\n        }\n        return res;\n    }\n};\nconst printWarnings = {\n    onResponse: (res)=>{\n        const warn = res.headers[\"x-sanity-warning\"];\n        const warnings = Array.isArray(warn) ? warn : [\n            warn\n        ];\n        warnings.filter(Boolean).forEach((msg)=>console.warn(msg));\n        return res;\n    }\n};\nfunction defineHttpRequest(envMiddleware, _ref) {\n    let { maxRetries = 5, retryDelay } = _ref;\n    const request = (0,get_it__WEBPACK_IMPORTED_MODULE_0__.getIt)([\n        maxRetries > 0 ? (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry)({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            retryDelay,\n            // This option is typed incorrectly in get-it.\n            maxRetries,\n            shouldRetry\n        }) : {},\n        ...envMiddleware,\n        printWarnings,\n        (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonRequest)(),\n        (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.jsonResponse)(),\n        (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.progress)(),\n        httpError,\n        (0,get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.observable)({\n            implementation: _barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable\n        })\n    ]);\n    function httpRequest(options) {\n        let requester = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : request;\n        return requester({\n            maxRedirects: 0,\n            ...options\n        });\n    }\n    httpRequest.defaultRequester = request;\n    return httpRequest;\n}\nfunction shouldRetry(err, attempt, options) {\n    const isSafe = options.method === \"GET\" || options.method === \"HEAD\";\n    const uri = options.uri || options.url;\n    const isQuery = uri.startsWith(\"/data/query\");\n    const isRetriableResponse = err.response && (err.response.statusCode === 429 || err.response.statusCode === 502 || err.response.statusCode === 503);\n    if ((isSafe || isQuery) && isRetriableResponse) return true;\n    return get_it_middleware__WEBPACK_IMPORTED_MODULE_1__.retry.shouldRetry(err, attempt, options);\n}\nfunction getSelection(sel) {\n    if (typeof sel === \"string\" || Array.isArray(sel)) {\n        return {\n            id: sel\n        };\n    }\n    if (typeof sel === \"object\" && sel !== null && \"query\" in sel && typeof sel.query === \"string\") {\n        return \"params\" in sel && typeof sel.params === \"object\" && sel.params !== null ? {\n            query: sel.query,\n            params: sel.params\n        } : {\n            query: sel.query\n        };\n    }\n    const selectionOpts = [\n        \"* Document ID (<docId>)\",\n        \"* Array of document IDs\",\n        \"* Object containing `query`\"\n    ].join(\"\\n\");\n    throw new Error(\"Unknown selection - must be one of:\\n\\n\".concat(selectionOpts));\n}\nconst VALID_ASSET_TYPES = [\n    \"image\",\n    \"file\"\n];\nconst VALID_INSERT_LOCATIONS = [\n    \"before\",\n    \"after\",\n    \"replace\"\n];\nconst dataset = (name)=>{\n    if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name)) {\n        throw new Error(\"Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters\");\n    }\n};\nconst projectId = (id)=>{\n    if (!/^[-a-z0-9]+$/i.test(id)) {\n        throw new Error(\"`projectId` can only contain only a-z, 0-9 and dashes\");\n    }\n};\nconst validateAssetType = (type)=>{\n    if (VALID_ASSET_TYPES.indexOf(type) === -1) {\n        throw new Error(\"Invalid asset type: \".concat(type, \". Must be one of \").concat(VALID_ASSET_TYPES.join(\", \")));\n    }\n};\nconst validateObject = (op, val)=>{\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n        throw new Error(\"\".concat(op, \"() takes an object of properties\"));\n    }\n};\nconst validateDocumentId = (op, id)=>{\n    if (typeof id !== \"string\" || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes(\"..\")) {\n        throw new Error(\"\".concat(op, '(): \"').concat(id, '\" is not a valid document ID'));\n    }\n};\nconst requireDocumentId = (op, doc)=>{\n    if (!doc._id) {\n        throw new Error(\"\".concat(op, '() requires that the document contains an ID (\"_id\" property)'));\n    }\n    validateDocumentId(op, doc._id);\n};\nconst validateInsert = (at, selector, items)=>{\n    const signature = \"insert(at, selector, items)\";\n    if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n        const valid = VALID_INSERT_LOCATIONS.map((loc)=>'\"'.concat(loc, '\"')).join(\", \");\n        throw new Error(\"\".concat(signature, ' takes an \"at\"-argument which is one of: ').concat(valid));\n    }\n    if (typeof selector !== \"string\") {\n        throw new Error(\"\".concat(signature, ' takes a \"selector\"-argument which must be a string'));\n    }\n    if (!Array.isArray(items)) {\n        throw new Error(\"\".concat(signature, ' takes an \"items\"-argument which must be an array'));\n    }\n};\nconst hasDataset = (config)=>{\n    if (!config.dataset) {\n        throw new Error(\"`dataset` must be provided to perform queries\");\n    }\n    return config.dataset || \"\";\n};\nconst requestTag = (tag)=>{\n    if (typeof tag !== \"string\" || !/^[a-z0-9._-]{1,75}$/i.test(tag)) {\n        throw new Error(\"Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.\");\n    }\n    return tag;\n};\nvar __accessCheck$6 = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet$6 = (obj, member, getter)=>{\n    __accessCheck$6(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd$6 = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet$6 = (obj, member, value, setter)=>{\n    __accessCheck$6(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar _client$5, _client2$5;\nclass BasePatch {\n    constructor(selection){\n        let operations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.selection = selection;\n        this.operations = operations;\n    }\n    /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */ set(attrs) {\n        return this._assign(\"set\", attrs);\n    }\n    /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */ setIfMissing(attrs) {\n        return this._assign(\"setIfMissing\", attrs);\n    }\n    /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */ diffMatchPatch(attrs) {\n        validateObject(\"diffMatchPatch\", attrs);\n        return this._assign(\"diffMatchPatch\", attrs);\n    }\n    /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */ unset(attrs) {\n        if (!Array.isArray(attrs)) {\n            throw new Error(\"unset(attrs) takes an array of attributes to unset, non-array given\");\n        }\n        this.operations = Object.assign({}, this.operations, {\n            unset: attrs\n        });\n        return this;\n    }\n    /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */ inc(attrs) {\n        return this._assign(\"inc\", attrs);\n    }\n    /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */ dec(attrs) {\n        return this._assign(\"dec\", attrs);\n    }\n    /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */ insert(at, selector, items) {\n        validateInsert(at, selector, items);\n        return this._assign(\"insert\", {\n            [at]: selector,\n            items\n        });\n    }\n    /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */ append(selector, items) {\n        return this.insert(\"after\", \"\".concat(selector, \"[-1]\"), items);\n    }\n    /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */ prepend(selector, items) {\n        return this.insert(\"before\", \"\".concat(selector, \"[0]\"), items);\n    }\n    /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */ splice(selector, start, deleteCount, items) {\n        const delAll = typeof deleteCount === \"undefined\" || deleteCount === -1;\n        const startIndex = start < 0 ? start - 1 : start;\n        const delCount = delAll ? -1 : Math.max(0, start + deleteCount);\n        const delRange = startIndex < 0 && delCount >= 0 ? \"\" : delCount;\n        const rangeSelector = \"\".concat(selector, \"[\").concat(startIndex, \":\").concat(delRange, \"]\");\n        return this.insert(\"replace\", rangeSelector, items || []);\n    }\n    /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */ ifRevisionId(rev) {\n        this.operations.ifRevisionID = rev;\n        return this;\n    }\n    /**\n   * Return a plain JSON representation of the patch\n   */ serialize() {\n        return {\n            ...getSelection(this.selection),\n            ...this.operations\n        };\n    }\n    /**\n   * Return a plain JSON representation of the patch\n   */ toJSON() {\n        return this.serialize();\n    }\n    /**\n   * Clears the patch of all operations\n   */ reset() {\n        this.operations = {};\n        return this;\n    }\n    _assign(op, props) {\n        let merge = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        validateObject(op, props);\n        this.operations = Object.assign({}, this.operations, {\n            [op]: Object.assign({}, merge && this.operations[op] || {}, props)\n        });\n        return this;\n    }\n    _set(op, props) {\n        return this._assign(op, props, false);\n    }\n}\nconst _ObservablePatch = class _ObservablePatch extends BasePatch {\n    constructor(selection, operations, client){\n        super(selection, operations);\n        __privateAdd$6(this, _client$5, void 0);\n        __privateSet$6(this, _client$5, client);\n    }\n    /**\n   * Clones the patch\n   */ clone() {\n        return new _ObservablePatch(this.selection, {\n            ...this.operations\n        }, __privateGet$6(this, _client$5));\n    }\n    commit(options) {\n        if (!__privateGet$6(this, _client$5)) {\n            throw new Error(\"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\");\n        }\n        const returnFirst = typeof this.selection === \"string\";\n        const opts = Object.assign({\n            returnFirst,\n            returnDocuments: true\n        }, options);\n        return __privateGet$6(this, _client$5).mutate({\n            patch: this.serialize()\n        }, opts);\n    }\n};\n_client$5 = new WeakMap();\nlet ObservablePatch = _ObservablePatch;\nconst _Patch = class _Patch extends BasePatch {\n    constructor(selection, operations, client){\n        super(selection, operations);\n        __privateAdd$6(this, _client2$5, void 0);\n        __privateSet$6(this, _client2$5, client);\n    }\n    /**\n   * Clones the patch\n   */ clone() {\n        return new _Patch(this.selection, {\n            ...this.operations\n        }, __privateGet$6(this, _client2$5));\n    }\n    commit(options) {\n        if (!__privateGet$6(this, _client2$5)) {\n            throw new Error(\"No `client` passed to patch, either provide one or pass the patch to a clients `mutate()` method\");\n        }\n        const returnFirst = typeof this.selection === \"string\";\n        const opts = Object.assign({\n            returnFirst,\n            returnDocuments: true\n        }, options);\n        return __privateGet$6(this, _client2$5).mutate({\n            patch: this.serialize()\n        }, opts);\n    }\n};\n_client2$5 = new WeakMap();\nlet Patch = _Patch;\nvar __accessCheck$5 = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet$5 = (obj, member, getter)=>{\n    __accessCheck$5(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd$5 = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet$5 = (obj, member, value, setter)=>{\n    __accessCheck$5(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar _client$4, _client2$4;\nconst defaultMutateOptions = {\n    returnDocuments: false\n};\nclass BaseTransaction {\n    constructor(){\n        let operations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        let transactionId = arguments.length > 1 ? arguments[1] : undefined;\n        this.operations = operations;\n        this.trxId = transactionId;\n    }\n    /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */ create(doc) {\n        validateObject(\"create\", doc);\n        return this._add({\n            create: doc\n        });\n    }\n    /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */ createIfNotExists(doc) {\n        const op = \"createIfNotExists\";\n        validateObject(op, doc);\n        requireDocumentId(op, doc);\n        return this._add({\n            [op]: doc\n        });\n    }\n    /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */ createOrReplace(doc) {\n        const op = \"createOrReplace\";\n        validateObject(op, doc);\n        requireDocumentId(op, doc);\n        return this._add({\n            [op]: doc\n        });\n    }\n    /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */ delete(documentId) {\n        validateDocumentId(\"delete\", documentId);\n        return this._add({\n            delete: {\n                id: documentId\n            }\n        });\n    }\n    transactionId(id) {\n        if (!id) {\n            return this.trxId;\n        }\n        this.trxId = id;\n        return this;\n    }\n    /**\n   * Return a plain JSON representation of the transaction\n   */ serialize() {\n        return [\n            ...this.operations\n        ];\n    }\n    /**\n   * Return a plain JSON representation of the transaction\n   */ toJSON() {\n        return this.serialize();\n    }\n    /**\n   * Clears the transaction of all operations\n   */ reset() {\n        this.operations = [];\n        return this;\n    }\n    _add(mut) {\n        this.operations.push(mut);\n        return this;\n    }\n}\nconst _Transaction = class _Transaction extends BaseTransaction {\n    constructor(operations, client, transactionId){\n        super(operations, transactionId);\n        __privateAdd$5(this, _client$4, void 0);\n        __privateSet$5(this, _client$4, client);\n    }\n    /**\n   * Clones the transaction\n   */ clone() {\n        return new _Transaction([\n            ...this.operations\n        ], __privateGet$5(this, _client$4), this.trxId);\n    }\n    commit(options) {\n        if (!__privateGet$5(this, _client$4)) {\n            throw new Error(\"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\");\n        }\n        return __privateGet$5(this, _client$4).mutate(this.serialize(), Object.assign({\n            transactionId: this.trxId\n        }, defaultMutateOptions, options || {}));\n    }\n    patch(patchOrDocumentId, patchOps) {\n        const isBuilder = typeof patchOps === \"function\";\n        const isPatch = typeof patchOrDocumentId !== \"string\" && patchOrDocumentId instanceof Patch;\n        if (isPatch) {\n            return this._add({\n                patch: patchOrDocumentId.serialize()\n            });\n        }\n        if (isBuilder) {\n            const patch = patchOps(new Patch(patchOrDocumentId, {}, __privateGet$5(this, _client$4)));\n            if (!(patch instanceof Patch)) {\n                throw new Error(\"function passed to `patch()` must return the patch\");\n            }\n            return this._add({\n                patch: patch.serialize()\n            });\n        }\n        return this._add({\n            patch: {\n                id: patchOrDocumentId,\n                ...patchOps\n            }\n        });\n    }\n};\n_client$4 = new WeakMap();\nlet Transaction = _Transaction;\nconst _ObservableTransaction = class _ObservableTransaction extends BaseTransaction {\n    constructor(operations, client, transactionId){\n        super(operations, transactionId);\n        __privateAdd$5(this, _client2$4, void 0);\n        __privateSet$5(this, _client2$4, client);\n    }\n    /**\n   * Clones the transaction\n   */ clone() {\n        return new _ObservableTransaction([\n            ...this.operations\n        ], __privateGet$5(this, _client2$4), this.trxId);\n    }\n    commit(options) {\n        if (!__privateGet$5(this, _client2$4)) {\n            throw new Error(\"No `client` passed to transaction, either provide one or pass the transaction to a clients `mutate()` method\");\n        }\n        return __privateGet$5(this, _client2$4).mutate(this.serialize(), Object.assign({\n            transactionId: this.trxId\n        }, defaultMutateOptions, options || {}));\n    }\n    patch(patchOrDocumentId, patchOps) {\n        const isBuilder = typeof patchOps === \"function\";\n        const isPatch = typeof patchOrDocumentId !== \"string\" && patchOrDocumentId instanceof ObservablePatch;\n        if (isPatch) {\n            return this._add({\n                patch: patchOrDocumentId.serialize()\n            });\n        }\n        if (isBuilder) {\n            const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, __privateGet$5(this, _client2$4)));\n            if (!(patch instanceof ObservablePatch)) {\n                throw new Error(\"function passed to `patch()` must return the patch\");\n            }\n            return this._add({\n                patch: patch.serialize()\n            });\n        }\n        return this._add({\n            patch: {\n                id: patchOrDocumentId,\n                ...patchOps\n            }\n        });\n    }\n};\n_client2$4 = new WeakMap();\nlet ObservableTransaction = _ObservableTransaction;\nconst BASE_URL = \"https://www.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n    return BASE_URL + slug;\n}\nfunction once(fn) {\n    let didCall = false;\n    let returnValue;\n    return function() {\n        if (didCall) {\n            return returnValue;\n        }\n        returnValue = fn(...arguments);\n        didCall = true;\n        return returnValue;\n    };\n}\nconst createWarningPrinter = (message)=>// eslint-disable-next-line no-console\n    once(function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return console.warn(message.join(\" \"), ...args);\n    });\nconst printCdnWarning = createWarningPrinter([\n    \"Since you haven't set a value for `useCdn`, we will deliver content using our\",\n    \"global, edge-cached API-CDN. If you wish to have content delivered faster, set\",\n    \"`useCdn: false` to use the Live API. Note: You may incur higher costs using the live API.\"\n]);\nconst printCdnPreviewDraftsWarning = createWarningPrinter([\n    \"The Sanity client is configured with the `perspective` set to `previewDrafts`, which doesn't support the API-CDN.\",\n    \"The Live API will be used instead. Set `useCdn: false` in your configuration to hide this warning.\"\n]);\nconst printBrowserTokenWarning = createWarningPrinter([\n    \"You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.\",\n    \"See \".concat(generateHelpUrl(\"js-client-browser-token\"), \" for more information and how to hide this warning.\")\n]);\nconst printNoApiVersionSpecifiedWarning = createWarningPrinter([\n    \"Using the Sanity client without specifying an API version is deprecated.\",\n    \"See \".concat(generateHelpUrl(\"js-client-api-version\"))\n]);\nconst printNoDefaultExport = createWarningPrinter([\n    \"The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.\"\n]);\nconst defaultCdnHost = \"apicdn.sanity.io\";\nconst defaultConfig = {\n    apiHost: \"https://api.sanity.io\",\n    apiVersion: \"1\",\n    useProjectHostname: true\n};\nconst LOCALHOSTS = [\n    \"localhost\",\n    \"127.0.0.1\",\n    \"0.0.0.0\"\n];\nconst isLocal = (host)=>LOCALHOSTS.indexOf(host) !== -1;\nconst validateApiVersion = function validateApiVersion2(apiVersion) {\n    if (apiVersion === \"1\" || apiVersion === \"X\") {\n        return;\n    }\n    const apiDate = new Date(apiVersion);\n    const apiVersionValid = /^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0;\n    if (!apiVersionValid) {\n        throw new Error(\"Invalid API version string, expected `1` or date in format `YYYY-MM-DD`\");\n    }\n};\nconst validateApiPerspective = function validateApiPerspective2(perspective) {\n    switch(perspective){\n        case \"previewDrafts\":\n        case \"published\":\n        case \"raw\":\n            return;\n        default:\n            throw new TypeError(\"Invalid API perspective string, expected `published`, `previewDrafts` or `raw`\");\n    }\n};\nconst initConfig = (config, prevConfig)=>{\n    const specifiedConfig = Object.assign({}, prevConfig, config);\n    if (!specifiedConfig.apiVersion) {\n        printNoApiVersionSpecifiedWarning();\n    }\n    const newConfig = Object.assign({}, defaultConfig, specifiedConfig);\n    const projectBased = newConfig.useProjectHostname;\n    if (typeof Promise === \"undefined\") {\n        const helpUrl = generateHelpUrl(\"js-client-promise-polyfill\");\n        throw new Error(\"No native Promise-implementation found, polyfill needed - see \".concat(helpUrl));\n    }\n    if (projectBased && !newConfig.projectId) {\n        throw new Error(\"Configuration must contain `projectId`\");\n    }\n    if (typeof newConfig.perspective === \"string\") {\n        validateApiPerspective(newConfig.perspective);\n    }\n    if (\"encodeSourceMapAtPath\" in newConfig || \"encodeSourceMap\" in newConfig || \"studioUrl\" in newConfig || \"logger\" in newConfig) {\n        throw new Error(\"It looks like you're using options meant for '@sanity/preview-kit/client', such as 'encodeSourceMapAtPath', 'encodeSourceMap', 'studioUrl' and 'logger'. Make sure you're using the right import.\");\n    }\n    if (\"stega\" in newConfig && newConfig[\"stega\"] !== void 0 && newConfig[\"stega\"] !== false) {\n        throw new Error(\"It looks like you're using options meant for '@sanity/client/stega'. Make sure you're using the right import. Or set 'stega' in 'createClient' to 'false'.\");\n    }\n    const isBrowser =  false && 0;\n    const isLocalhost = isBrowser && isLocal(window.location.hostname);\n    if (isBrowser && isLocalhost && newConfig.token && newConfig.ignoreBrowserTokenWarning !== true) {\n        printBrowserTokenWarning();\n    } else if (typeof newConfig.useCdn === \"undefined\") {\n        printCdnWarning();\n    }\n    if (projectBased) {\n        projectId(newConfig.projectId);\n    }\n    if (newConfig.dataset) {\n        dataset(newConfig.dataset);\n    }\n    if (\"requestTagPrefix\" in newConfig) {\n        newConfig.requestTagPrefix = newConfig.requestTagPrefix ? requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, \"\") : void 0;\n    }\n    newConfig.apiVersion = \"\".concat(newConfig.apiVersion).replace(/^v/, \"\");\n    newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost;\n    newConfig.useCdn = newConfig.useCdn !== false && !newConfig.withCredentials;\n    validateApiVersion(newConfig.apiVersion);\n    const hostParts = newConfig.apiHost.split(\"://\", 2);\n    const protocol = hostParts[0];\n    const host = hostParts[1];\n    const cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host;\n    if (newConfig.useProjectHostname) {\n        newConfig.url = \"\".concat(protocol, \"://\").concat(newConfig.projectId, \".\").concat(host, \"/v\").concat(newConfig.apiVersion);\n        newConfig.cdnUrl = \"\".concat(protocol, \"://\").concat(newConfig.projectId, \".\").concat(cdnHost, \"/v\").concat(newConfig.apiVersion);\n    } else {\n        newConfig.url = \"\".concat(newConfig.apiHost, \"/v\").concat(newConfig.apiVersion);\n        newConfig.cdnUrl = newConfig.url;\n    }\n    return newConfig;\n};\nconst projectHeader = \"X-Sanity-Project-ID\";\nfunction requestOptions(config) {\n    let overrides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const headers = {};\n    const token = overrides.token || config.token;\n    if (token) {\n        headers.Authorization = \"Bearer \".concat(token);\n    }\n    if (!overrides.useGlobalApi && !config.useProjectHostname && config.projectId) {\n        headers[projectHeader] = config.projectId;\n    }\n    const withCredentials = Boolean(typeof overrides.withCredentials === \"undefined\" ? config.token || config.withCredentials : overrides.withCredentials);\n    const timeout = typeof overrides.timeout === \"undefined\" ? config.timeout : overrides.timeout;\n    return Object.assign({}, overrides, {\n        headers: Object.assign({}, headers, overrides.headers || {}),\n        timeout: typeof timeout === \"undefined\" ? 5 * 60 * 1e3 : timeout,\n        proxy: overrides.proxy || config.proxy,\n        json: true,\n        withCredentials,\n        fetch: typeof overrides.fetch === \"object\" && typeof config.fetch === \"object\" ? {\n            ...config.fetch,\n            ...overrides.fetch\n        } : overrides.fetch || config.fetch\n    });\n}\nconst encodeQueryString = (_ref2)=>{\n    let { query, params = {}, options = {} } = _ref2;\n    const searchParams = new URLSearchParams();\n    const { tag, ...opts } = options;\n    if (tag) searchParams.append(\"tag\", tag);\n    searchParams.append(\"query\", query);\n    for (const [key, value] of Object.entries(params)){\n        searchParams.append(\"$\".concat(key), JSON.stringify(value));\n    }\n    for (const [key, value] of Object.entries(opts)){\n        if (value) searchParams.append(key, \"\".concat(value));\n    }\n    return \"?\".concat(searchParams);\n};\nconst excludeFalsey = (param, defValue)=>{\n    const value = typeof param === \"undefined\" ? defValue : param;\n    return param === false ? void 0 : value;\n};\nconst getMutationQuery = function() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n        dryRun: options.dryRun,\n        returnIds: true,\n        returnDocuments: excludeFalsey(options.returnDocuments, true),\n        visibility: options.visibility || \"sync\",\n        autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n        skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation\n    };\n};\nconst isResponse = (event)=>event.type === \"response\";\nconst getBody = (event)=>event.body;\nconst indexBy = (docs, attr)=>docs.reduce((indexed, doc)=>{\n        indexed[attr(doc)] = doc;\n        return indexed;\n    }, /* @__PURE__ */ Object.create(null));\nconst getQuerySizeLimit = 11264;\nfunction _fetch(client, httpRequest, query, params) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    if (\"stega\" in options && options[\"stega\"] !== void 0 && options[\"stega\"] !== false) {\n        throw new Error(\"It looks like you're using options meant for '@sanity/client/stega'. Make sure you're using the right import. Or set 'stega' in 'fetch' to 'false'.\");\n    }\n    const mapResponse = options.filterResponse === false ? (res)=>res : (res)=>res.result;\n    const { cache, next, ...opts } = {\n        // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n        // This is necessary in React Server Components to avoid opting out of Request Memoization.\n        useAbortSignal: typeof options.signal !== \"undefined\",\n        ...options\n    };\n    const reqOpts = typeof cache !== \"undefined\" || typeof next !== \"undefined\" ? {\n        ...opts,\n        fetch: {\n            cache,\n            next\n        }\n    } : opts;\n    return _dataRequest(client, httpRequest, \"query\", {\n        query,\n        params\n    }, reqOpts).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)(mapResponse));\n}\nfunction _getDocument(client, httpRequest, id) {\n    let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const options = {\n        uri: _getDataUrl(client, \"doc\", id),\n        json: true,\n        tag: opts.tag\n    };\n    return _requestObservable(client, httpRequest, options).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(isResponse), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((event)=>event.body.documents && event.body.documents[0]));\n}\nfunction _getDocuments(client, httpRequest, ids) {\n    let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const options = {\n        uri: _getDataUrl(client, \"doc\", ids.join(\",\")),\n        json: true,\n        tag: opts.tag\n    };\n    return _requestObservable(client, httpRequest, options).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(isResponse), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((event)=>{\n        const indexed = indexBy(event.body.documents || [], (doc)=>doc._id);\n        return ids.map((id)=>indexed[id] || null);\n    }));\n}\nfunction _createIfNotExists(client, httpRequest, doc, options) {\n    requireDocumentId(\"createIfNotExists\", doc);\n    return _create(client, httpRequest, doc, \"createIfNotExists\", options);\n}\nfunction _createOrReplace(client, httpRequest, doc, options) {\n    requireDocumentId(\"createOrReplace\", doc);\n    return _create(client, httpRequest, doc, \"createOrReplace\", options);\n}\nfunction _delete(client, httpRequest, selection, options) {\n    return _dataRequest(client, httpRequest, \"mutate\", {\n        mutations: [\n            {\n                delete: getSelection(selection)\n            }\n        ]\n    }, options);\n}\nfunction _mutate(client, httpRequest, mutations, options) {\n    let mut;\n    if (mutations instanceof Patch || mutations instanceof ObservablePatch) {\n        mut = {\n            patch: mutations.serialize()\n        };\n    } else if (mutations instanceof Transaction || mutations instanceof ObservableTransaction) {\n        mut = mutations.serialize();\n    } else {\n        mut = mutations;\n    }\n    const muts = Array.isArray(mut) ? mut : [\n        mut\n    ];\n    const transactionId = options && options.transactionId || void 0;\n    return _dataRequest(client, httpRequest, \"mutate\", {\n        mutations: muts,\n        transactionId\n    }, options);\n}\nfunction _dataRequest(client, httpRequest, endpoint, body) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    const isMutation = endpoint === \"mutate\";\n    const isQuery = endpoint === \"query\";\n    const strQuery = isMutation ? \"\" : encodeQueryString(body);\n    const useGet = !isMutation && strQuery.length < getQuerySizeLimit;\n    const stringQuery = useGet ? strQuery : \"\";\n    const returnFirst = options.returnFirst;\n    const { timeout, token, tag, headers } = options;\n    const uri = _getDataUrl(client, endpoint, stringQuery);\n    const reqOptions = {\n        method: useGet ? \"GET\" : \"POST\",\n        uri,\n        json: true,\n        body: useGet ? void 0 : body,\n        query: isMutation && getMutationQuery(options),\n        timeout,\n        headers,\n        token,\n        tag,\n        perspective: options.perspective,\n        resultSourceMap: options.resultSourceMap,\n        canUseCdn: isQuery,\n        signal: options.signal,\n        fetch: options.fetch,\n        useAbortSignal: options.useAbortSignal,\n        useCdn: options.useCdn\n    };\n    return _requestObservable(client, httpRequest, reqOptions).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(isResponse), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)(getBody), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((res)=>{\n        if (!isMutation) {\n            return res;\n        }\n        const results = res.results || [];\n        if (options.returnDocuments) {\n            return returnFirst ? results[0] && results[0].document : results.map((mut)=>mut.document);\n        }\n        const key = returnFirst ? \"documentId\" : \"documentIds\";\n        const ids = returnFirst ? results[0] && results[0].id : results.map((mut)=>mut.id);\n        return {\n            transactionId: res.transactionId,\n            results,\n            [key]: ids\n        };\n    }));\n}\nfunction _create(client, httpRequest, doc, op) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    const mutation = {\n        [op]: doc\n    };\n    const opts = Object.assign({\n        returnFirst: true,\n        returnDocuments: true\n    }, options);\n    return _dataRequest(client, httpRequest, \"mutate\", {\n        mutations: [\n            mutation\n        ]\n    }, opts);\n}\nfunction _requestObservable(client, httpRequest, options) {\n    var _a, _b;\n    const uri = options.url || options.uri;\n    const config = client.config();\n    const canUseCdn = typeof options.canUseCdn === \"undefined\" ? [\n        \"GET\",\n        \"HEAD\"\n    ].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/\") === 0 : options.canUseCdn;\n    let useCdn = ((_a = options.useCdn) != null ? _a : config.useCdn) && canUseCdn;\n    const tag = options.tag && config.requestTagPrefix ? [\n        config.requestTagPrefix,\n        options.tag\n    ].join(\".\") : options.tag || config.requestTagPrefix;\n    if (tag && options.tag !== null) {\n        options.query = {\n            tag: requestTag(tag),\n            ...options.query\n        };\n    }\n    if ([\n        \"GET\",\n        \"HEAD\",\n        \"POST\"\n    ].indexOf(options.method || \"GET\") >= 0 && uri.indexOf(\"/data/query/\") === 0) {\n        const resultSourceMap = (_b = options.resultSourceMap) != null ? _b : config.resultSourceMap;\n        if (resultSourceMap !== void 0 && resultSourceMap !== false) {\n            options.query = {\n                resultSourceMap,\n                ...options.query\n            };\n        }\n        const perspective = options.perspective || config.perspective;\n        if (typeof perspective === \"string\" && perspective !== \"raw\") {\n            validateApiPerspective(perspective);\n            options.query = {\n                perspective,\n                ...options.query\n            };\n            if (perspective === \"previewDrafts\" && useCdn) {\n                useCdn = false;\n                printCdnPreviewDraftsWarning();\n            }\n        }\n    }\n    const reqOptions = requestOptions(config, Object.assign({}, options, {\n        url: _getUrl(client, uri, useCdn)\n    }));\n    const request = new _barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((subscriber)=>httpRequest(reqOptions, config.requester).subscribe(subscriber));\n    return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request;\n}\nfunction _request(client, httpRequest, options) {\n    const observable = _requestObservable(client, httpRequest, options).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)((event)=>event.type === \"response\"), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((event)=>event.body));\n    return observable;\n}\nfunction _getDataUrl(client, operation, path) {\n    const config = client.config();\n    const catalog = hasDataset(config);\n    const baseUri = \"/\".concat(operation, \"/\").concat(catalog);\n    const uri = path ? \"\".concat(baseUri, \"/\").concat(path) : baseUri;\n    return \"/data\".concat(uri).replace(/\\/($|\\?)/, \"$1\");\n}\nfunction _getUrl(client, uri) {\n    let canUseCdn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const { url, cdnUrl } = client.config();\n    const base = canUseCdn ? cdnUrl : url;\n    return \"\".concat(base, \"/\").concat(uri.replace(/^\\//, \"\"));\n}\nfunction _withAbortSignal(signal) {\n    return (input)=>{\n        return new _barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer)=>{\n            const abort = ()=>observer.error(_createAbortError(signal));\n            if (signal && signal.aborted) {\n                abort();\n                return;\n            }\n            const subscription = input.subscribe(observer);\n            signal.addEventListener(\"abort\", abort);\n            return ()=>{\n                signal.removeEventListener(\"abort\", abort);\n                subscription.unsubscribe();\n            };\n        });\n    };\n}\nconst isDomExceptionSupported = Boolean(globalThis.DOMException);\nfunction _createAbortError(signal) {\n    var _a, _b;\n    if (isDomExceptionSupported) {\n        return new DOMException((_a = signal == null ? void 0 : signal.reason) != null ? _a : \"The operation was aborted.\", \"AbortError\");\n    }\n    const error = new Error((_b = signal == null ? void 0 : signal.reason) != null ? _b : \"The operation was aborted.\");\n    error.name = \"AbortError\";\n    return error;\n}\nvar __accessCheck$4 = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet$4 = (obj, member, getter)=>{\n    __accessCheck$4(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd$4 = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet$4 = (obj, member, value, setter)=>{\n    __accessCheck$4(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar _client$3, _httpRequest$4, _client2$3, _httpRequest2$4;\nclass ObservableAssetsClient {\n    constructor(client, httpRequest){\n        __privateAdd$4(this, _client$3, void 0);\n        __privateAdd$4(this, _httpRequest$4, void 0);\n        __privateSet$4(this, _client$3, client);\n        __privateSet$4(this, _httpRequest$4, httpRequest);\n    }\n    upload(assetType, body, options) {\n        return _upload(__privateGet$4(this, _client$3), __privateGet$4(this, _httpRequest$4), assetType, body, options);\n    }\n}\n_client$3 = new WeakMap();\n_httpRequest$4 = new WeakMap();\nclass AssetsClient {\n    constructor(client, httpRequest){\n        __privateAdd$4(this, _client2$3, void 0);\n        __privateAdd$4(this, _httpRequest2$4, void 0);\n        __privateSet$4(this, _client2$3, client);\n        __privateSet$4(this, _httpRequest2$4, httpRequest);\n    }\n    upload(assetType, body, options) {\n        const observable = _upload(__privateGet$4(this, _client2$3), __privateGet$4(this, _httpRequest2$4), assetType, body, options);\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(observable.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)((event)=>event.type === \"response\"), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((event)=>event.body.document)));\n    }\n}\n_client2$3 = new WeakMap();\n_httpRequest2$4 = new WeakMap();\nfunction _upload(client, httpRequest, assetType, body) {\n    let opts = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    validateAssetType(assetType);\n    let meta = opts.extract || void 0;\n    if (meta && !meta.length) {\n        meta = [\n            \"none\"\n        ];\n    }\n    const dataset = hasDataset(client.config());\n    const assetEndpoint = assetType === \"image\" ? \"images\" : \"files\";\n    const options = optionsFromFile(opts, body);\n    const { tag, label, title, description, creditLine, filename, source } = options;\n    const query = {\n        label,\n        title,\n        description,\n        filename,\n        meta,\n        creditLine\n    };\n    if (source) {\n        query.sourceId = source.id;\n        query.sourceName = source.name;\n        query.sourceUrl = source.url;\n    }\n    return _requestObservable(client, httpRequest, {\n        tag,\n        method: \"POST\",\n        timeout: options.timeout || 0,\n        uri: \"/assets/\".concat(assetEndpoint, \"/\").concat(dataset),\n        headers: options.contentType ? {\n            \"Content-Type\": options.contentType\n        } : {},\n        query,\n        body\n    });\n}\nfunction optionsFromFile(opts, file) {\n    if (typeof File === \"undefined\" || !(file instanceof File)) {\n        return opts;\n    }\n    return Object.assign({\n        filename: opts.preserveFilename === false ? void 0 : file.name,\n        contentType: file.type\n    }, opts);\n}\nvar defaults = (obj, defaults)=>Object.keys(defaults).concat(Object.keys(obj)).reduce((target, prop)=>{\n        target[prop] = typeof obj[prop] === \"undefined\" ? defaults[prop] : obj[prop];\n        return target;\n    }, {});\nconst pick = (obj, props)=>props.reduce((selection, prop)=>{\n        if (typeof obj[prop] === \"undefined\") {\n            return selection;\n        }\n        selection[prop] = obj[prop];\n        return selection;\n    }, {});\nconst MAX_URL_LENGTH = 16e3 - 1200;\nconst possibleOptions = [\n    \"includePreviousRevision\",\n    \"includeResult\",\n    \"visibility\",\n    \"effectFormat\",\n    \"tag\"\n];\nconst defaultOptions = {\n    includeResult: true\n};\nfunction _listen(query, params) {\n    let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const { url, token, withCredentials, requestTagPrefix } = this.config();\n    const tag = opts.tag && requestTagPrefix ? [\n        requestTagPrefix,\n        opts.tag\n    ].join(\".\") : opts.tag;\n    const options = {\n        ...defaults(opts, defaultOptions),\n        tag\n    };\n    const listenOpts = pick(options, possibleOptions);\n    const qs = encodeQueryString({\n        query,\n        params,\n        options: {\n            tag,\n            ...listenOpts\n        }\n    });\n    const uri = \"\".concat(url).concat(_getDataUrl(this, \"listen\", qs));\n    if (uri.length > MAX_URL_LENGTH) {\n        return new _barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer)=>observer.error(new Error(\"Query too large for listener\")));\n    }\n    const listenFor = options.events ? options.events : [\n        \"mutation\"\n    ];\n    const shouldEmitReconnect = listenFor.indexOf(\"reconnect\") !== -1;\n    const esOptions = {};\n    if (token || withCredentials) {\n        esOptions.withCredentials = true;\n    }\n    if (token) {\n        esOptions.headers = {\n            Authorization: \"Bearer \".concat(token)\n        };\n    }\n    return new _barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((observer)=>{\n        let es;\n        getEventSource().then((eventSource)=>{\n            es = eventSource;\n        }).catch((reason)=>{\n            observer.error(reason);\n            stop();\n        });\n        let reconnectTimer;\n        let stopped = false;\n        function onError() {\n            if (stopped) {\n                return;\n            }\n            emitReconnect();\n            if (stopped) {\n                return;\n            }\n            if (es.readyState === es.CLOSED) {\n                unsubscribe();\n                clearTimeout(reconnectTimer);\n                reconnectTimer = setTimeout(open, 100);\n            }\n        }\n        function onChannelError(err) {\n            observer.error(cooerceError(err));\n        }\n        function onMessage(evt) {\n            const event = parseEvent(evt);\n            return event instanceof Error ? observer.error(event) : observer.next(event);\n        }\n        function onDisconnect() {\n            stopped = true;\n            unsubscribe();\n            observer.complete();\n        }\n        function unsubscribe() {\n            if (!es) return;\n            es.removeEventListener(\"error\", onError);\n            es.removeEventListener(\"channelError\", onChannelError);\n            es.removeEventListener(\"disconnect\", onDisconnect);\n            listenFor.forEach((type)=>es.removeEventListener(type, onMessage));\n            es.close();\n        }\n        function emitReconnect() {\n            if (shouldEmitReconnect) {\n                observer.next({\n                    type: \"reconnect\"\n                });\n            }\n        }\n        async function getEventSource() {\n            const { default: EventSource } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@sanity\"), __webpack_require__.e(\"vendor-chunks/eventsource\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @sanity/eventsource */ \"(rsc)/./node_modules/@sanity/eventsource/node.js\", 19));\n            const evs = new EventSource(uri, esOptions);\n            evs.addEventListener(\"error\", onError);\n            evs.addEventListener(\"channelError\", onChannelError);\n            evs.addEventListener(\"disconnect\", onDisconnect);\n            listenFor.forEach((type)=>evs.addEventListener(type, onMessage));\n            return evs;\n        }\n        function open() {\n            getEventSource().then((eventSource)=>{\n                es = eventSource;\n            }).catch((reason)=>{\n                observer.error(reason);\n                stop();\n            });\n        }\n        function stop() {\n            stopped = true;\n            unsubscribe();\n        }\n        return stop;\n    });\n}\nfunction parseEvent(event) {\n    try {\n        const data = event.data && JSON.parse(event.data) || {};\n        return Object.assign({\n            type: event.type\n        }, data);\n    } catch (err) {\n        return err;\n    }\n}\nfunction cooerceError(err) {\n    if (err instanceof Error) {\n        return err;\n    }\n    const evt = parseEvent(err);\n    return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));\n}\nfunction extractErrorMessage(err) {\n    if (!err.error) {\n        return err.message || \"Unknown listener error\";\n    }\n    if (err.error.description) {\n        return err.error.description;\n    }\n    return typeof err.error === \"string\" ? err.error : JSON.stringify(err.error, null, 2);\n}\nvar __accessCheck$3 = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet$3 = (obj, member, getter)=>{\n    __accessCheck$3(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd$3 = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet$3 = (obj, member, value, setter)=>{\n    __accessCheck$3(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar _client$2, _httpRequest$3, _client2$2, _httpRequest2$3;\nclass ObservableDatasetsClient {\n    constructor(client, httpRequest){\n        __privateAdd$3(this, _client$2, void 0);\n        __privateAdd$3(this, _httpRequest$3, void 0);\n        __privateSet$3(this, _client$2, client);\n        __privateSet$3(this, _httpRequest$3, httpRequest);\n    }\n    /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */ create(name, options) {\n        return _modify(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), \"PUT\", name, options);\n    }\n    /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */ edit(name, options) {\n        return _modify(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), \"PATCH\", name, options);\n    }\n    /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */ delete(name) {\n        return _modify(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), \"DELETE\", name);\n    }\n    /**\n   * Fetch a list of datasets for the configured project\n   */ list() {\n        return _request(__privateGet$3(this, _client$2), __privateGet$3(this, _httpRequest$3), {\n            uri: \"/datasets\",\n            tag: null\n        });\n    }\n}\n_client$2 = new WeakMap();\n_httpRequest$3 = new WeakMap();\nclass DatasetsClient {\n    constructor(client, httpRequest){\n        __privateAdd$3(this, _client2$2, void 0);\n        __privateAdd$3(this, _httpRequest2$3, void 0);\n        __privateSet$3(this, _client2$2, client);\n        __privateSet$3(this, _httpRequest2$3, httpRequest);\n    }\n    /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */ create(name, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_modify(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), \"PUT\", name, options));\n    }\n    /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */ edit(name, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_modify(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), \"PATCH\", name, options));\n    }\n    /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */ delete(name) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_modify(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), \"DELETE\", name));\n    }\n    /**\n   * Fetch a list of datasets for the configured project\n   */ list() {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_request(__privateGet$3(this, _client2$2), __privateGet$3(this, _httpRequest2$3), {\n            uri: \"/datasets\",\n            tag: null\n        }));\n    }\n}\n_client2$2 = new WeakMap();\n_httpRequest2$3 = new WeakMap();\nfunction _modify(client, httpRequest, method, name, options) {\n    dataset(name);\n    return _request(client, httpRequest, {\n        method,\n        uri: \"/datasets/\".concat(name),\n        body: options,\n        tag: null\n    });\n}\nvar __accessCheck$2 = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet$2 = (obj, member, getter)=>{\n    __accessCheck$2(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd$2 = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet$2 = (obj, member, value, setter)=>{\n    __accessCheck$2(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar _client$1, _httpRequest$2, _client2$1, _httpRequest2$2;\nclass ObservableProjectsClient {\n    constructor(client, httpRequest){\n        __privateAdd$2(this, _client$1, void 0);\n        __privateAdd$2(this, _httpRequest$2, void 0);\n        __privateSet$2(this, _client$1, client);\n        __privateSet$2(this, _httpRequest$2, httpRequest);\n    }\n    list(options) {\n        const uri = (options == null ? void 0 : options.includeMembers) === false ? \"/projects?includeMembers=false\" : \"/projects\";\n        return _request(__privateGet$2(this, _client$1), __privateGet$2(this, _httpRequest$2), {\n            uri\n        });\n    }\n    /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */ getById(projectId) {\n        return _request(__privateGet$2(this, _client$1), __privateGet$2(this, _httpRequest$2), {\n            uri: \"/projects/\".concat(projectId)\n        });\n    }\n}\n_client$1 = new WeakMap();\n_httpRequest$2 = new WeakMap();\nclass ProjectsClient {\n    constructor(client, httpRequest){\n        __privateAdd$2(this, _client2$1, void 0);\n        __privateAdd$2(this, _httpRequest2$2, void 0);\n        __privateSet$2(this, _client2$1, client);\n        __privateSet$2(this, _httpRequest2$2, httpRequest);\n    }\n    list(options) {\n        const uri = (options == null ? void 0 : options.includeMembers) === false ? \"/projects?includeMembers=false\" : \"/projects\";\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_request(__privateGet$2(this, _client2$1), __privateGet$2(this, _httpRequest2$2), {\n            uri\n        }));\n    }\n    /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */ getById(projectId) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_request(__privateGet$2(this, _client2$1), __privateGet$2(this, _httpRequest2$2), {\n            uri: \"/projects/\".concat(projectId)\n        }));\n    }\n}\n_client2$1 = new WeakMap();\n_httpRequest2$2 = new WeakMap();\nvar __accessCheck$1 = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet$1 = (obj, member, getter)=>{\n    __accessCheck$1(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd$1 = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet$1 = (obj, member, value, setter)=>{\n    __accessCheck$1(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar _client, _httpRequest$1, _client2, _httpRequest2$1;\nclass ObservableUsersClient {\n    constructor(client, httpRequest){\n        __privateAdd$1(this, _client, void 0);\n        __privateAdd$1(this, _httpRequest$1, void 0);\n        __privateSet$1(this, _client, client);\n        __privateSet$1(this, _httpRequest$1, httpRequest);\n    }\n    /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */ getById(id) {\n        return _request(__privateGet$1(this, _client), __privateGet$1(this, _httpRequest$1), {\n            uri: \"/users/\".concat(id)\n        });\n    }\n}\n_client = new WeakMap();\n_httpRequest$1 = new WeakMap();\nclass UsersClient {\n    constructor(client, httpRequest){\n        __privateAdd$1(this, _client2, void 0);\n        __privateAdd$1(this, _httpRequest2$1, void 0);\n        __privateSet$1(this, _client2, client);\n        __privateSet$1(this, _httpRequest2$1, httpRequest);\n    }\n    /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */ getById(id) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_request(__privateGet$1(this, _client2), __privateGet$1(this, _httpRequest2$1), {\n            uri: \"/users/\".concat(id)\n        }));\n    }\n}\n_client2 = new WeakMap();\n_httpRequest2$1 = new WeakMap();\nvar __accessCheck = (obj, member, msg)=>{\n    if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter)=>{\n    __accessCheck(obj, member, \"read from private field\");\n    return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value)=>{\n    if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter)=>{\n    __accessCheck(obj, member, \"write to private field\");\n    setter ? setter.call(obj, value) : member.set(obj, value);\n    return value;\n};\nvar _clientConfig, _httpRequest, _clientConfig2, _httpRequest2;\nconst _ObservableSanityClient = class _ObservableSanityClient {\n    constructor(httpRequest){\n        let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultConfig;\n        /**\n     * Private properties\n     */ __privateAdd(this, _clientConfig, void 0);\n        __privateAdd(this, _httpRequest, void 0);\n        /**\n     * Instance properties\n     */ this.listen = _listen;\n        this.config(config);\n        __privateSet(this, _httpRequest, httpRequest);\n        this.assets = new ObservableAssetsClient(this, __privateGet(this, _httpRequest));\n        this.datasets = new ObservableDatasetsClient(this, __privateGet(this, _httpRequest));\n        this.projects = new ObservableProjectsClient(this, __privateGet(this, _httpRequest));\n        this.users = new ObservableUsersClient(this, __privateGet(this, _httpRequest));\n    }\n    /**\n   * Clone the client - returns a new instance\n   */ clone() {\n        return new _ObservableSanityClient(__privateGet(this, _httpRequest), this.config());\n    }\n    config(newConfig) {\n        if (newConfig === void 0) {\n            return {\n                ...__privateGet(this, _clientConfig)\n            };\n        }\n        if (__privateGet(this, _clientConfig) && __privateGet(this, _clientConfig).allowReconfigure === false) {\n            throw new Error(\"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\");\n        }\n        __privateSet(this, _clientConfig, initConfig(newConfig, __privateGet(this, _clientConfig) || {}));\n        return this;\n    }\n    /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */ withConfig(newConfig) {\n        return new _ObservableSanityClient(__privateGet(this, _httpRequest), {\n            ...this.config(),\n            ...newConfig\n        });\n    }\n    fetch(query, params) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        return _fetch(this, __privateGet(this, _httpRequest), query, params, options);\n    }\n    /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */ getDocument(id, options) {\n        return _getDocument(this, __privateGet(this, _httpRequest), id, options);\n    }\n    /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */ getDocuments(ids, options) {\n        return _getDocuments(this, __privateGet(this, _httpRequest), ids, options);\n    }\n    create(document, options) {\n        return _create(this, __privateGet(this, _httpRequest), document, \"create\", options);\n    }\n    createIfNotExists(document, options) {\n        return _createIfNotExists(this, __privateGet(this, _httpRequest), document, options);\n    }\n    createOrReplace(document, options) {\n        return _createOrReplace(this, __privateGet(this, _httpRequest), document, options);\n    }\n    delete(selection, options) {\n        return _delete(this, __privateGet(this, _httpRequest), selection, options);\n    }\n    mutate(operations, options) {\n        return _mutate(this, __privateGet(this, _httpRequest), operations, options);\n    }\n    /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */ patch(selection, operations) {\n        return new ObservablePatch(selection, operations, this);\n    }\n    /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */ transaction(operations) {\n        return new ObservableTransaction(operations, this);\n    }\n    /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */ request(options) {\n        return _request(this, __privateGet(this, _httpRequest), options);\n    }\n    /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */ getUrl(uri, canUseCdn) {\n        return _getUrl(this, uri, canUseCdn);\n    }\n    /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */ getDataUrl(operation, path) {\n        return _getDataUrl(this, operation, path);\n    }\n};\n_clientConfig = new WeakMap();\n_httpRequest = new WeakMap();\nlet ObservableSanityClient = _ObservableSanityClient;\nconst _SanityClient = class _SanityClient {\n    constructor(httpRequest){\n        let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultConfig;\n        /**\n     * Private properties\n     */ __privateAdd(this, _clientConfig2, void 0);\n        __privateAdd(this, _httpRequest2, void 0);\n        /**\n     * Instance properties\n     */ this.listen = _listen;\n        this.config(config);\n        __privateSet(this, _httpRequest2, httpRequest);\n        this.assets = new AssetsClient(this, __privateGet(this, _httpRequest2));\n        this.datasets = new DatasetsClient(this, __privateGet(this, _httpRequest2));\n        this.projects = new ProjectsClient(this, __privateGet(this, _httpRequest2));\n        this.users = new UsersClient(this, __privateGet(this, _httpRequest2));\n        this.observable = new ObservableSanityClient(httpRequest, config);\n    }\n    /**\n   * Clone the client - returns a new instance\n   */ clone() {\n        return new _SanityClient(__privateGet(this, _httpRequest2), this.config());\n    }\n    config(newConfig) {\n        if (newConfig === void 0) {\n            return {\n                ...__privateGet(this, _clientConfig2)\n            };\n        }\n        if (__privateGet(this, _clientConfig2) && __privateGet(this, _clientConfig2).allowReconfigure === false) {\n            throw new Error(\"Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client\");\n        }\n        if (this.observable) {\n            this.observable.config(newConfig);\n        }\n        __privateSet(this, _clientConfig2, initConfig(newConfig, __privateGet(this, _clientConfig2) || {}));\n        return this;\n    }\n    /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */ withConfig(newConfig) {\n        return new _SanityClient(__privateGet(this, _httpRequest2), {\n            ...this.config(),\n            ...newConfig\n        });\n    }\n    fetch(query, params) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_fetch(this, __privateGet(this, _httpRequest2), query, params, options));\n    }\n    /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */ getDocument(id, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_getDocument(this, __privateGet(this, _httpRequest2), id, options));\n    }\n    /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */ getDocuments(ids, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_getDocuments(this, __privateGet(this, _httpRequest2), ids, options));\n    }\n    create(document, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_create(this, __privateGet(this, _httpRequest2), document, \"create\", options));\n    }\n    createIfNotExists(document, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_createIfNotExists(this, __privateGet(this, _httpRequest2), document, options));\n    }\n    createOrReplace(document, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_createOrReplace(this, __privateGet(this, _httpRequest2), document, options));\n    }\n    delete(selection, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_delete(this, __privateGet(this, _httpRequest2), selection, options));\n    }\n    mutate(operations, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_mutate(this, __privateGet(this, _httpRequest2), operations, options));\n    }\n    /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */ patch(documentId, operations) {\n        return new Patch(documentId, operations, this);\n    }\n    /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */ transaction(operations) {\n        return new Transaction(operations, this);\n    }\n    /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */ request(options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_request(this, __privateGet(this, _httpRequest2), options));\n    }\n    /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */ dataRequest(endpoint, body, options) {\n        return (0,_barrel_optimize_names_Observable_lastValueFrom_rxjs__WEBPACK_IMPORTED_MODULE_4__.lastValueFrom)(_dataRequest(this, __privateGet(this, _httpRequest2), endpoint, body, options));\n    }\n    /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */ getUrl(uri, canUseCdn) {\n        return _getUrl(this, uri, canUseCdn);\n    }\n    /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */ getDataUrl(operation, path) {\n        return _getDataUrl(this, operation, path);\n    }\n};\n_clientConfig2 = new WeakMap();\n_httpRequest2 = new WeakMap();\nlet SanityClient = _SanityClient;\nfunction defineCreateClientExports(envMiddleware, ClassConstructor) {\n    const httpRequest = defineHttpRequest(envMiddleware, {});\n    const requester = httpRequest.defaultRequester;\n    const createClient = (config)=>new ClassConstructor(defineHttpRequest(envMiddleware, {\n            maxRetries: config.maxRetries,\n            retryDelay: config.retryDelay\n        }), config);\n    return {\n        requester,\n        createClient\n    };\n}\nvar envMiddleware = [];\n //# sourceMappingURL=browserMiddleware-eLzHI4Fk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/_chunks/browserMiddleware-eLzHI4Fk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sanity/client/dist/index.browser.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sanity/client/dist/index.browser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BasePatch: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.BasePatch),\n/* harmony export */   BaseTransaction: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.BaseTransaction),\n/* harmony export */   ClientError: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.ClientError),\n/* harmony export */   ObservablePatch: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.ObservablePatch),\n/* harmony export */   ObservableSanityClient: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.ObservableSanityClient),\n/* harmony export */   ObservableTransaction: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.ObservableTransaction),\n/* harmony export */   Patch: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.Patch),\n/* harmony export */   SanityClient: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.SanityClient),\n/* harmony export */   ServerError: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.ServerError),\n/* harmony export */   Transaction: () => (/* reexport safe */ _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.Transaction),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   \"default\": () => (/* binding */ deprecatedCreateClient),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   unstable__adapter: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_1__.adapter),\n/* harmony export */   unstable__environment: () => (/* reexport safe */ get_it__WEBPACK_IMPORTED_MODULE_1__.environment)\n/* harmony export */ });\n/* harmony import */ var _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_chunks/browserMiddleware-eLzHI4Fk.js */ \"(rsc)/./node_modules/@sanity/client/dist/_chunks/browserMiddleware-eLzHI4Fk.js\");\n/* harmony import */ var get_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! get-it */ \"(rsc)/./node_modules/get-it/dist/index.react-server.js\");\n\n\n\nfunction defineDeprecatedCreateClient(createClient) {\n    return function deprecatedCreateClient(config) {\n        (0,_chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.printNoDefaultExport)();\n        return createClient(config);\n    };\n}\nconst exp = (0,_chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.defineCreateClientExports)(_chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.envMiddleware, _chunks_browserMiddleware_eLzHI4Fk_js__WEBPACK_IMPORTED_MODULE_0__.SanityClient);\nconst requester = exp.requester;\nconst createClient = exp.createClient;\nconst deprecatedCreateClient = defineDeprecatedCreateClient(createClient);\n //# sourceMappingURL=index.browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9pbmRleC5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVJO0FBQzREO0FBQ3ZHO0FBQzVGLFNBQVNpQiw2QkFBNkJDLFlBQVk7SUFDaEQsT0FBTyxTQUFTQyx1QkFBdUJDLE1BQU07UUFDM0NwQiwyRkFBb0JBO1FBQ3BCLE9BQU9rQixhQUFhRTtJQUN0QjtBQUNGO0FBQ0EsTUFBTUMsTUFBTXBCLGdHQUF5QkEsQ0FBQ0UsZ0ZBQWFBLEVBQUVELCtFQUFZQTtBQUNqRSxNQUFNb0IsWUFBWUQsSUFBSUMsU0FBUztBQUMvQixNQUFNSixlQUFlRyxJQUFJSCxZQUFZO0FBQ3JDLE1BQU1DLHlCQUF5QkYsNkJBQTZCQztBQUN3QixDQUNwRix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHNhbml0eS9jbGllbnQvZGlzdC9pbmRleC5icm93c2VyLmpzPzk5OGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJpbnROb0RlZmF1bHRFeHBvcnQsIGRlZmluZUNyZWF0ZUNsaWVudEV4cG9ydHMsIFNhbml0eUNsaWVudCwgZW52TWlkZGxld2FyZSB9IGZyb20gJy4vX2NodW5rcy9icm93c2VyTWlkZGxld2FyZS1lTHpISTRGay5qcyc7XG5leHBvcnQgeyBCYXNlUGF0Y2gsIEJhc2VUcmFuc2FjdGlvbiwgQ2xpZW50RXJyb3IsIE9ic2VydmFibGVQYXRjaCwgT2JzZXJ2YWJsZVNhbml0eUNsaWVudCwgT2JzZXJ2YWJsZVRyYW5zYWN0aW9uLCBQYXRjaCwgU2VydmVyRXJyb3IsIFRyYW5zYWN0aW9uIH0gZnJvbSAnLi9fY2h1bmtzL2Jyb3dzZXJNaWRkbGV3YXJlLWVMekhJNEZrLmpzJztcbmV4cG9ydCB7IGFkYXB0ZXIgYXMgdW5zdGFibGVfX2FkYXB0ZXIsIGVudmlyb25tZW50IGFzIHVuc3RhYmxlX19lbnZpcm9ubWVudCB9IGZyb20gJ2dldC1pdCc7XG5mdW5jdGlvbiBkZWZpbmVEZXByZWNhdGVkQ3JlYXRlQ2xpZW50KGNyZWF0ZUNsaWVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gZGVwcmVjYXRlZENyZWF0ZUNsaWVudChjb25maWcpIHtcbiAgICBwcmludE5vRGVmYXVsdEV4cG9ydCgpO1xuICAgIHJldHVybiBjcmVhdGVDbGllbnQoY29uZmlnKTtcbiAgfTtcbn1cbmNvbnN0IGV4cCA9IGRlZmluZUNyZWF0ZUNsaWVudEV4cG9ydHMoZW52TWlkZGxld2FyZSwgU2FuaXR5Q2xpZW50KTtcbmNvbnN0IHJlcXVlc3RlciA9IGV4cC5yZXF1ZXN0ZXI7XG5jb25zdCBjcmVhdGVDbGllbnQgPSBleHAuY3JlYXRlQ2xpZW50O1xuY29uc3QgZGVwcmVjYXRlZENyZWF0ZUNsaWVudCA9IGRlZmluZURlcHJlY2F0ZWRDcmVhdGVDbGllbnQoY3JlYXRlQ2xpZW50KTtcbmV4cG9ydCB7IFNhbml0eUNsaWVudCwgY3JlYXRlQ2xpZW50LCBkZXByZWNhdGVkQ3JlYXRlQ2xpZW50IGFzIGRlZmF1bHQsIHJlcXVlc3RlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguYnJvd3Nlci5qcy5tYXBcbiJdLCJuYW1lcyI6WyJwcmludE5vRGVmYXVsdEV4cG9ydCIsImRlZmluZUNyZWF0ZUNsaWVudEV4cG9ydHMiLCJTYW5pdHlDbGllbnQiLCJlbnZNaWRkbGV3YXJlIiwiQmFzZVBhdGNoIiwiQmFzZVRyYW5zYWN0aW9uIiwiQ2xpZW50RXJyb3IiLCJPYnNlcnZhYmxlUGF0Y2giLCJPYnNlcnZhYmxlU2FuaXR5Q2xpZW50IiwiT2JzZXJ2YWJsZVRyYW5zYWN0aW9uIiwiUGF0Y2giLCJTZXJ2ZXJFcnJvciIsIlRyYW5zYWN0aW9uIiwiYWRhcHRlciIsInVuc3RhYmxlX19hZGFwdGVyIiwiZW52aXJvbm1lbnQiLCJ1bnN0YWJsZV9fZW52aXJvbm1lbnQiLCJkZWZpbmVEZXByZWNhdGVkQ3JlYXRlQ2xpZW50IiwiY3JlYXRlQ2xpZW50IiwiZGVwcmVjYXRlZENyZWF0ZUNsaWVudCIsImNvbmZpZyIsImV4cCIsInJlcXVlc3RlciIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sanity/client/dist/index.browser.js\n");

/***/ })

};
;